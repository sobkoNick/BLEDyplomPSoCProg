ARM GAS  C:\Users\Mykola\AppData\Local\Temp\ccSL9DbN.s 			page 1


   1              		.cpu cortex-m0
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 1
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"capsense_CSHL.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.capsense_BaseInit,"ax",%progbits
  18              		.align	2
  19              		.global	capsense_BaseInit
  20              		.code	16
  21              		.thumb_func
  22              		.type	capsense_BaseInit, %function
  23              	capsense_BaseInit:
  24              	.LFB35:
  25              		.file 1 "Generated_Source\\PSoC4\\capsense_CSHL.c"
   1:Generated_Source\PSoC4/capsense_CSHL.c **** /*******************************************************************************
   2:Generated_Source\PSoC4/capsense_CSHL.c **** * File Name: capsense_CSHL.c
   3:Generated_Source\PSoC4/capsense_CSHL.c **** * Version 2.30
   4:Generated_Source\PSoC4/capsense_CSHL.c **** *
   5:Generated_Source\PSoC4/capsense_CSHL.c **** * Description:
   6:Generated_Source\PSoC4/capsense_CSHL.c **** *  This file provides the source code to the High Level APIs for the CapSesne
   7:Generated_Source\PSoC4/capsense_CSHL.c **** *  CSD component.
   8:Generated_Source\PSoC4/capsense_CSHL.c **** *
   9:Generated_Source\PSoC4/capsense_CSHL.c **** * Note:
  10:Generated_Source\PSoC4/capsense_CSHL.c **** *
  11:Generated_Source\PSoC4/capsense_CSHL.c **** ********************************************************************************
  12:Generated_Source\PSoC4/capsense_CSHL.c **** * Copyright 2013-2015, Cypress Semiconductor Corporation.  All rights reserved.
  13:Generated_Source\PSoC4/capsense_CSHL.c **** * You may use this file only in accordance with the license, terms, conditions,
  14:Generated_Source\PSoC4/capsense_CSHL.c **** * disclaimers, and limitations in the end user license agreement accompanying
  15:Generated_Source\PSoC4/capsense_CSHL.c **** * the software package with which this file was provided.
  16:Generated_Source\PSoC4/capsense_CSHL.c **** *******************************************************************************/
  17:Generated_Source\PSoC4/capsense_CSHL.c **** 
  18:Generated_Source\PSoC4/capsense_CSHL.c **** #include "capsense_CSHL.h"
  19:Generated_Source\PSoC4/capsense_CSHL.c **** #include "capsense_PVT.h"
  20:Generated_Source\PSoC4/capsense_CSHL.c **** 
  21:Generated_Source\PSoC4/capsense_CSHL.c **** /* SmartSense functions */
  22:Generated_Source\PSoC4/capsense_CSHL.c **** #if (capsense_TUNING_METHOD == capsense__TUNING_AUTO)
  23:Generated_Source\PSoC4/capsense_CSHL.c ****     extern void capsense_UpdateThresholds(uint32 sensor);
  24:Generated_Source\PSoC4/capsense_CSHL.c **** #endif /* (capsense_TUNING_METHOD == capsense__TUNING_AUTO) */
  25:Generated_Source\PSoC4/capsense_CSHL.c **** 
  26:Generated_Source\PSoC4/capsense_CSHL.c **** /* Storage of filters data */
  27:Generated_Source\PSoC4/capsense_CSHL.c **** #if ( (0u != (capsense_RAW_FILTER_MASK & capsense_MEDIAN_FILTER)) || \
  28:Generated_Source\PSoC4/capsense_CSHL.c ****       (0u != (capsense_RAW_FILTER_MASK & capsense_AVERAGING_FILTER)) )
  29:Generated_Source\PSoC4/capsense_CSHL.c **** 
  30:Generated_Source\PSoC4/capsense_CSHL.c ****     uint16 capsense_rawFilterData1[capsense_TOTAL_SENSOR_COUNT];
  31:Generated_Source\PSoC4/capsense_CSHL.c ****     uint16 capsense_rawFilterData2[capsense_TOTAL_SENSOR_COUNT];
  32:Generated_Source\PSoC4/capsense_CSHL.c **** 
ARM GAS  C:\Users\Mykola\AppData\Local\Temp\ccSL9DbN.s 			page 2


  33:Generated_Source\PSoC4/capsense_CSHL.c **** #elif ( (0u != (capsense_RAW_FILTER_MASK & capsense_IIR2_FILTER))   || \
  34:Generated_Source\PSoC4/capsense_CSHL.c ****         (0u != (capsense_RAW_FILTER_MASK & capsense_IIR4_FILTER))   || \
  35:Generated_Source\PSoC4/capsense_CSHL.c ****         (0u != (capsense_RAW_FILTER_MASK & capsense_JITTER_FILTER)) || \
  36:Generated_Source\PSoC4/capsense_CSHL.c ****         (0u != (capsense_RAW_FILTER_MASK & capsense_IIR8_FILTER))   || \
  37:Generated_Source\PSoC4/capsense_CSHL.c ****         (0u != (capsense_RAW_FILTER_MASK & capsense_IIR16_FILTER)) )
  38:Generated_Source\PSoC4/capsense_CSHL.c **** 
  39:Generated_Source\PSoC4/capsense_CSHL.c ****     uint16 capsense_rawFilterData1[capsense_TOTAL_SENSOR_COUNT];
  40:Generated_Source\PSoC4/capsense_CSHL.c **** #endif  /* ( (capsense_RAW_FILTER_MASK & capsense_MEDIAN_FILTER) || \
  41:Generated_Source\PSoC4/capsense_CSHL.c ****         *    (capsense_RAW_FILTER_MASK & capsense_AVERAGING_FILTER) )
  42:Generated_Source\PSoC4/capsense_CSHL.c ****         */
  43:Generated_Source\PSoC4/capsense_CSHL.c **** 
  44:Generated_Source\PSoC4/capsense_CSHL.c **** extern uint16 capsense_sensorRaw[capsense_TOTAL_SENSOR_COUNT];
  45:Generated_Source\PSoC4/capsense_CSHL.c **** extern uint8 capsense_sensorEnableMask[capsense_TOTAL_SENSOR_MASK];
  46:Generated_Source\PSoC4/capsense_CSHL.c **** extern const uint8 capsense_widgetNumber[capsense_TOTAL_SENSOR_COUNT];
  47:Generated_Source\PSoC4/capsense_CSHL.c **** 
  48:Generated_Source\PSoC4/capsense_CSHL.c **** #if (capsense_TUNING_METHOD != capsense__TUNING_NONE)
  49:Generated_Source\PSoC4/capsense_CSHL.c ****     extern uint32 capsense_widgetResolution[capsense_RESOLUTIONS_TBL_SIZE];
  50:Generated_Source\PSoC4/capsense_CSHL.c **** #endif /* (capsense_TUNING_METHOD != capsense__TUNING_NONE) */
  51:Generated_Source\PSoC4/capsense_CSHL.c **** 
  52:Generated_Source\PSoC4/capsense_CSHL.c **** uint16 capsense_sensorBaseline[capsense_TOTAL_SENSOR_COUNT] = {0u};
  53:Generated_Source\PSoC4/capsense_CSHL.c **** uint8 capsense_sensorBaselineLow[capsense_TOTAL_SENSOR_COUNT] = {0u};
  54:Generated_Source\PSoC4/capsense_CSHL.c **** uint8 capsense_sensorSignal[capsense_TOTAL_SENSOR_COUNT] = {0u};
  55:Generated_Source\PSoC4/capsense_CSHL.c **** uint8 capsense_sensorOnMask[capsense_TOTAL_SENSOR_MASK] = {0u};
  56:Generated_Source\PSoC4/capsense_CSHL.c **** 
  57:Generated_Source\PSoC4/capsense_CSHL.c **** uint8 capsense_lowBaselineResetCnt[capsense_TOTAL_SENSOR_COUNT];
  58:Generated_Source\PSoC4/capsense_CSHL.c **** uint8 capsense_lowBaselineReset[capsense_TOTAL_SENSOR_COUNT] = {
  59:Generated_Source\PSoC4/capsense_CSHL.c ****     30u, 30u, 30u, 30u, 30u, 
  60:Generated_Source\PSoC4/capsense_CSHL.c **** };
  61:Generated_Source\PSoC4/capsense_CSHL.c **** 
  62:Generated_Source\PSoC4/capsense_CSHL.c **** 
  63:Generated_Source\PSoC4/capsense_CSHL.c **** 
  64:Generated_Source\PSoC4/capsense_CSHL.c **** #if (capsense_TUNING_METHOD == capsense__TUNING_AUTO)
  65:Generated_Source\PSoC4/capsense_CSHL.c ****     extern capsense_CONFIG_TYPE_P4_v2_30 capsense_config;
  66:Generated_Source\PSoC4/capsense_CSHL.c **** #endif  /* (capsense_TUNING_METHOD == capsense__TUNING_AUTO) */
  67:Generated_Source\PSoC4/capsense_CSHL.c **** 
  68:Generated_Source\PSoC4/capsense_CSHL.c **** #if (capsense_RAW_FILTER_MASK != 0u)
  69:Generated_Source\PSoC4/capsense_CSHL.c **** uint8 capsense_enableRawFilters = capsense_RAW_FILTERS_ENABLED;
  70:Generated_Source\PSoC4/capsense_CSHL.c **** #endif  /* (capsense_RAW_FILTER_MASK != 0u) */
  71:Generated_Source\PSoC4/capsense_CSHL.c **** 
  72:Generated_Source\PSoC4/capsense_CSHL.c **** /* Generated by Customizer */
  73:Generated_Source\PSoC4/capsense_CSHL.c **** uint8 capsense_fingerThreshold[capsense_THRESHOLD_TBL_SIZE];
  74:Generated_Source\PSoC4/capsense_CSHL.c **** 
  75:Generated_Source\PSoC4/capsense_CSHL.c **** uint8 capsense_noiseThreshold[capsense_THRESHOLD_TBL_SIZE];
  76:Generated_Source\PSoC4/capsense_CSHL.c **** 
  77:Generated_Source\PSoC4/capsense_CSHL.c **** uint8 capsense_negativeNoiseThreshold[capsense_THRESHOLD_TBL_SIZE];
  78:Generated_Source\PSoC4/capsense_CSHL.c **** 
  79:Generated_Source\PSoC4/capsense_CSHL.c **** uint8 capsense_hysteresis[capsense_WIDGET_PARAM_TBL_SIZE];
  80:Generated_Source\PSoC4/capsense_CSHL.c **** 
  81:Generated_Source\PSoC4/capsense_CSHL.c **** uint8 capsense_debounce[] = {
  82:Generated_Source\PSoC4/capsense_CSHL.c ****     1u, 
  83:Generated_Source\PSoC4/capsense_CSHL.c **** };
  84:Generated_Source\PSoC4/capsense_CSHL.c **** 
  85:Generated_Source\PSoC4/capsense_CSHL.c **** const uint8 capsense_rawDataIndex[] = {
  86:Generated_Source\PSoC4/capsense_CSHL.c ****     0u, /* LinearSlider0__LS */
  87:Generated_Source\PSoC4/capsense_CSHL.c **** };
  88:Generated_Source\PSoC4/capsense_CSHL.c **** 
  89:Generated_Source\PSoC4/capsense_CSHL.c **** const uint8 capsense_numberOfSensors[] = {
ARM GAS  C:\Users\Mykola\AppData\Local\Temp\ccSL9DbN.s 			page 3


  90:Generated_Source\PSoC4/capsense_CSHL.c ****     5u, /* LinearSlider0__LS */
  91:Generated_Source\PSoC4/capsense_CSHL.c **** };
  92:Generated_Source\PSoC4/capsense_CSHL.c **** 
  93:Generated_Source\PSoC4/capsense_CSHL.c **** static const uint16 capsense_centroidMult[] = {
  94:Generated_Source\PSoC4/capsense_CSHL.c ****     6400u, 
  95:Generated_Source\PSoC4/capsense_CSHL.c **** };
  96:Generated_Source\PSoC4/capsense_CSHL.c **** 
  97:Generated_Source\PSoC4/capsense_CSHL.c **** static uint8 capsense_posFiltersMask[] = {
  98:Generated_Source\PSoC4/capsense_CSHL.c ****     0x8u, 
  99:Generated_Source\PSoC4/capsense_CSHL.c **** };
 100:Generated_Source\PSoC4/capsense_CSHL.c **** 
 101:Generated_Source\PSoC4/capsense_CSHL.c **** static uint8 capsense_posFiltersData[] = {
 102:Generated_Source\PSoC4/capsense_CSHL.c ****     1u, 0u, 0u, 
 103:Generated_Source\PSoC4/capsense_CSHL.c **** };
 104:Generated_Source\PSoC4/capsense_CSHL.c **** 
 105:Generated_Source\PSoC4/capsense_CSHL.c **** 
 106:Generated_Source\PSoC4/capsense_CSHL.c **** 
 107:Generated_Source\PSoC4/capsense_CSHL.c **** 
 108:Generated_Source\PSoC4/capsense_CSHL.c **** /*******************************************************************************
 109:Generated_Source\PSoC4/capsense_CSHL.c **** * Function Name: capsense_BaseInit
 110:Generated_Source\PSoC4/capsense_CSHL.c **** ********************************************************************************
 111:Generated_Source\PSoC4/capsense_CSHL.c **** *
 112:Generated_Source\PSoC4/capsense_CSHL.c **** * Summary:
 113:Generated_Source\PSoC4/capsense_CSHL.c **** *  Loads the capsense_sensorBaseline[sensor] array element with an
 114:Generated_Source\PSoC4/capsense_CSHL.c **** *  initial value which is equal to the raw count value.
 115:Generated_Source\PSoC4/capsense_CSHL.c **** *  Resets to zero capsense_sensorBaselineLow[sensor] and
 116:Generated_Source\PSoC4/capsense_CSHL.c **** *  capsense_sensorSignal[sensor] array element.
 117:Generated_Source\PSoC4/capsense_CSHL.c **** *  Loads the capsense_rawFilterData2[sensor] and
 118:Generated_Source\PSoC4/capsense_CSHL.c **** *  capsense_rawFilterData2[sensor] array element with an
 119:Generated_Source\PSoC4/capsense_CSHL.c **** *  initial value which is equal to the raw count value if the raw data filter is enabled.
 120:Generated_Source\PSoC4/capsense_CSHL.c **** *
 121:Generated_Source\PSoC4/capsense_CSHL.c **** * Parameters:
 122:Generated_Source\PSoC4/capsense_CSHL.c **** *  sensor:  Sensor number.
 123:Generated_Source\PSoC4/capsense_CSHL.c **** *
 124:Generated_Source\PSoC4/capsense_CSHL.c **** * Return:
 125:Generated_Source\PSoC4/capsense_CSHL.c **** *  None
 126:Generated_Source\PSoC4/capsense_CSHL.c **** *
 127:Generated_Source\PSoC4/capsense_CSHL.c **** * Global Variables:
 128:Generated_Source\PSoC4/capsense_CSHL.c **** *  capsense_sensorBaseline[]    - used to store the baseline value.
 129:Generated_Source\PSoC4/capsense_CSHL.c **** *  capsense_sensorBaselineLow[] - used to store the fraction byte of
 130:Generated_Source\PSoC4/capsense_CSHL.c **** *  the baseline value.
 131:Generated_Source\PSoC4/capsense_CSHL.c **** *  capsense_sensorSignal[]      - used to store a difference between
 132:Generated_Source\PSoC4/capsense_CSHL.c **** *  the current value of raw data and the previous value of the baseline.
 133:Generated_Source\PSoC4/capsense_CSHL.c **** *  capsense_rawFilterData1[]    - used to store a previous sample of
 134:Generated_Source\PSoC4/capsense_CSHL.c **** *  any enabled raw data filter.
 135:Generated_Source\PSoC4/capsense_CSHL.c **** *  capsense_rawFilterData2[]    - used to store before a previous sample
 136:Generated_Source\PSoC4/capsense_CSHL.c **** *  of the enabled raw data filter. Required only for median or average filters.
 137:Generated_Source\PSoC4/capsense_CSHL.c **** *
 138:Generated_Source\PSoC4/capsense_CSHL.c **** * Side Effects:
 139:Generated_Source\PSoC4/capsense_CSHL.c **** *  None
 140:Generated_Source\PSoC4/capsense_CSHL.c **** *
 141:Generated_Source\PSoC4/capsense_CSHL.c **** *******************************************************************************/
 142:Generated_Source\PSoC4/capsense_CSHL.c **** void capsense_BaseInit(uint32 sensor)
 143:Generated_Source\PSoC4/capsense_CSHL.c **** {
  26              		.loc 1 143 0
  27              		.cfi_startproc
  28              	.LVL0:
ARM GAS  C:\Users\Mykola\AppData\Local\Temp\ccSL9DbN.s 			page 4


 144:Generated_Source\PSoC4/capsense_CSHL.c ****     #if ((capsense_TOTAL_BUTTONS_COUNT) || (capsense_TOTAL_MATRIX_BUTTONS_COUNT) || \
 145:Generated_Source\PSoC4/capsense_CSHL.c ****          (capsense_TOTAL_GENERICS_COUNT))
 146:Generated_Source\PSoC4/capsense_CSHL.c ****         uint8 widget = capsense_widgetNumber[sensor];
 147:Generated_Source\PSoC4/capsense_CSHL.c ****     #endif /* ((capsense_TOTAL_MATRIX_BUTTONS_COUNT) || (capsense_TOTAL_MATRIX_BUTTONS_COUNT)) */
 148:Generated_Source\PSoC4/capsense_CSHL.c **** 
 149:Generated_Source\PSoC4/capsense_CSHL.c ****     #if (capsense_TOTAL_MATRIX_BUTTONS_COUNT)
 150:Generated_Source\PSoC4/capsense_CSHL.c ****         uint8 debounceIndex;
 151:Generated_Source\PSoC4/capsense_CSHL.c ****     #endif  /* (capsense_TOTAL_MATRIX_BUTTONS_COUNT) */
 152:Generated_Source\PSoC4/capsense_CSHL.c **** 
 153:Generated_Source\PSoC4/capsense_CSHL.c ****     #if (capsense_TOTAL_GENERICS_COUNT)
 154:Generated_Source\PSoC4/capsense_CSHL.c ****         /* Exclude generic widget */
 155:Generated_Source\PSoC4/capsense_CSHL.c ****         if(widget < capsense_END_OF_WIDGETS_INDEX)
 156:Generated_Source\PSoC4/capsense_CSHL.c ****         {
 157:Generated_Source\PSoC4/capsense_CSHL.c ****     #endif  /* capsense_TOTAL_GENERICS_COUNT */
 158:Generated_Source\PSoC4/capsense_CSHL.c **** 
 159:Generated_Source\PSoC4/capsense_CSHL.c ****     /* Initialize Baseline */
 160:Generated_Source\PSoC4/capsense_CSHL.c ****     capsense_sensorBaseline[sensor] = capsense_sensorRaw[sensor];
  29              		.loc 1 160 0
  30 0000 4300     		lsl	r3, r0, #1
  31 0002 054A     		ldr	r2, .L2
  32 0004 9A5A     		ldrh	r2, [r3, r2]
  33 0006 0549     		ldr	r1, .L2+4
  34 0008 5A52     		strh	r2, [r3, r1]
 161:Generated_Source\PSoC4/capsense_CSHL.c ****     capsense_sensorBaselineLow[sensor] = 0u;
  35              		.loc 1 161 0
  36 000a 0818     		add	r0, r1, r0
  37              	.LVL1:
  38 000c 0021     		mov	r1, #0
  39 000e 0173     		strb	r1, [r0, #12]
 162:Generated_Source\PSoC4/capsense_CSHL.c ****     capsense_sensorSignal[sensor] = 0u;
  40              		.loc 1 162 0
  41 0010 0175     		strb	r1, [r0, #20]
 163:Generated_Source\PSoC4/capsense_CSHL.c **** 
 164:Generated_Source\PSoC4/capsense_CSHL.c **** 
 165:Generated_Source\PSoC4/capsense_CSHL.c **** 
 166:Generated_Source\PSoC4/capsense_CSHL.c ****     #if ((0u != (capsense_RAW_FILTER_MASK & capsense_MEDIAN_FILTER)) ||\
 167:Generated_Source\PSoC4/capsense_CSHL.c ****          (0u != (capsense_RAW_FILTER_MASK & capsense_AVERAGING_FILTER)))
 168:Generated_Source\PSoC4/capsense_CSHL.c **** 
 169:Generated_Source\PSoC4/capsense_CSHL.c ****         capsense_rawFilterData1[sensor] = capsense_sensorRaw[sensor];
 170:Generated_Source\PSoC4/capsense_CSHL.c ****         capsense_rawFilterData2[sensor] = capsense_sensorRaw[sensor];
 171:Generated_Source\PSoC4/capsense_CSHL.c **** 
 172:Generated_Source\PSoC4/capsense_CSHL.c ****     #elif ((capsense_RAW_FILTER_MASK & capsense_IIR2_FILTER) ||\
 173:Generated_Source\PSoC4/capsense_CSHL.c ****            (capsense_RAW_FILTER_MASK & capsense_IIR4_FILTER) ||\
 174:Generated_Source\PSoC4/capsense_CSHL.c ****            (capsense_RAW_FILTER_MASK & capsense_JITTER_FILTER) ||\
 175:Generated_Source\PSoC4/capsense_CSHL.c ****            (capsense_RAW_FILTER_MASK & capsense_IIR8_FILTER) ||\
 176:Generated_Source\PSoC4/capsense_CSHL.c ****            (capsense_RAW_FILTER_MASK & capsense_IIR16_FILTER))
 177:Generated_Source\PSoC4/capsense_CSHL.c **** 
 178:Generated_Source\PSoC4/capsense_CSHL.c ****         capsense_rawFilterData1[sensor] = capsense_sensorRaw[sensor];
  42              		.loc 1 178 0
  43 0012 0349     		ldr	r1, .L2+8
  44 0014 5A52     		strh	r2, [r3, r1]
 179:Generated_Source\PSoC4/capsense_CSHL.c **** 
 180:Generated_Source\PSoC4/capsense_CSHL.c ****     #else
 181:Generated_Source\PSoC4/capsense_CSHL.c ****         /* No Raw filters */
 182:Generated_Source\PSoC4/capsense_CSHL.c ****     #endif  /* ((capsense_RAW_FILTER_MASK & capsense_MEDIAN_FILTER) || \
 183:Generated_Source\PSoC4/capsense_CSHL.c ****             *   (capsense_RAW_FILTER_MASK & capsense_AVERAGING_FILTER))
 184:Generated_Source\PSoC4/capsense_CSHL.c ****             */
ARM GAS  C:\Users\Mykola\AppData\Local\Temp\ccSL9DbN.s 			page 5


 185:Generated_Source\PSoC4/capsense_CSHL.c **** 
 186:Generated_Source\PSoC4/capsense_CSHL.c ****     #if (capsense_TOTAL_GENERICS_COUNT)
 187:Generated_Source\PSoC4/capsense_CSHL.c ****         /* Exclude generic widget */
 188:Generated_Source\PSoC4/capsense_CSHL.c ****         }
 189:Generated_Source\PSoC4/capsense_CSHL.c ****     #endif  /* capsense_TOTAL_GENERICS_COUNT */
 190:Generated_Source\PSoC4/capsense_CSHL.c **** }
  45              		.loc 1 190 0
  46              		@ sp needed
  47 0016 7047     		bx	lr
  48              	.L3:
  49              		.align	2
  50              	.L2:
  51 0018 00000000 		.word	capsense_sensorRaw
  52 001c 00000000 		.word	.LANCHOR0
  53 0020 00000000 		.word	capsense_rawFilterData1
  54              		.cfi_endproc
  55              	.LFE35:
  56              		.size	capsense_BaseInit, .-capsense_BaseInit
  57              		.section	.text.capsense_InitializeSensorBaseline,"ax",%progbits
  58              		.align	2
  59              		.global	capsense_InitializeSensorBaseline
  60              		.code	16
  61              		.thumb_func
  62              		.type	capsense_InitializeSensorBaseline, %function
  63              	capsense_InitializeSensorBaseline:
  64              	.LFB36:
 191:Generated_Source\PSoC4/capsense_CSHL.c **** 
 192:Generated_Source\PSoC4/capsense_CSHL.c **** 
 193:Generated_Source\PSoC4/capsense_CSHL.c **** /*******************************************************************************
 194:Generated_Source\PSoC4/capsense_CSHL.c **** * Function Name: capsense_InitializeSensorBaseline
 195:Generated_Source\PSoC4/capsense_CSHL.c **** ********************************************************************************
 196:Generated_Source\PSoC4/capsense_CSHL.c **** *
 197:Generated_Source\PSoC4/capsense_CSHL.c **** * Summary:
 198:Generated_Source\PSoC4/capsense_CSHL.c **** *  Loads the capsense_sensorBaseline[sensor] array element with an
 199:Generated_Source\PSoC4/capsense_CSHL.c **** *  initial value by scanning the selected sensor (one channel design) or a pair
 200:Generated_Source\PSoC4/capsense_CSHL.c **** *  of sensors (two channels designs). The raw count value is copied into the
 201:Generated_Source\PSoC4/capsense_CSHL.c **** *  baseline array for each sensor. The raw data filters are initialized if
 202:Generated_Source\PSoC4/capsense_CSHL.c **** *  enabled.
 203:Generated_Source\PSoC4/capsense_CSHL.c **** *
 204:Generated_Source\PSoC4/capsense_CSHL.c **** * Parameters:
 205:Generated_Source\PSoC4/capsense_CSHL.c **** *  sensor:  Sensor number.
 206:Generated_Source\PSoC4/capsense_CSHL.c **** *
 207:Generated_Source\PSoC4/capsense_CSHL.c **** * Return:
 208:Generated_Source\PSoC4/capsense_CSHL.c **** *  None
 209:Generated_Source\PSoC4/capsense_CSHL.c **** *
 210:Generated_Source\PSoC4/capsense_CSHL.c **** * Global Variables:
 211:Generated_Source\PSoC4/capsense_CSHL.c **** *  None
 212:Generated_Source\PSoC4/capsense_CSHL.c **** *
 213:Generated_Source\PSoC4/capsense_CSHL.c **** * Side Effects:
 214:Generated_Source\PSoC4/capsense_CSHL.c **** *  None
 215:Generated_Source\PSoC4/capsense_CSHL.c **** *
 216:Generated_Source\PSoC4/capsense_CSHL.c **** *******************************************************************************/
 217:Generated_Source\PSoC4/capsense_CSHL.c **** void capsense_InitializeSensorBaseline(uint32 sensor)
 218:Generated_Source\PSoC4/capsense_CSHL.c **** {
  65              		.loc 1 218 0
  66              		.cfi_startproc
  67              	.LVL2:
ARM GAS  C:\Users\Mykola\AppData\Local\Temp\ccSL9DbN.s 			page 6


  68 0000 10B5     		push	{r4, lr}
  69              		.cfi_def_cfa_offset 8
  70              		.cfi_offset 4, -8
  71              		.cfi_offset 14, -4
  72 0002 041C     		mov	r4, r0
 219:Generated_Source\PSoC4/capsense_CSHL.c ****     /* Scan sensor */
 220:Generated_Source\PSoC4/capsense_CSHL.c ****     capsense_ScanSensor(sensor);
  73              		.loc 1 220 0
  74 0004 FFF7FEFF 		bl	capsense_ScanSensor
  75              	.LVL3:
  76              	.L5:
 221:Generated_Source\PSoC4/capsense_CSHL.c ****     while(capsense_IsBusy() != 0u)
  77              		.loc 1 221 0 discriminator 1
  78 0008 FFF7FEFF 		bl	capsense_IsBusy
  79              	.LVL4:
  80 000c 0028     		cmp	r0, #0
  81 000e FBD1     		bne	.L5
 222:Generated_Source\PSoC4/capsense_CSHL.c ****     {
 223:Generated_Source\PSoC4/capsense_CSHL.c ****         /* Wait while sensor is busy */
 224:Generated_Source\PSoC4/capsense_CSHL.c ****     }
 225:Generated_Source\PSoC4/capsense_CSHL.c **** 
 226:Generated_Source\PSoC4/capsense_CSHL.c ****     /* Initialize Baseline, Signal and debounce counters */
 227:Generated_Source\PSoC4/capsense_CSHL.c ****     capsense_BaseInit(sensor);
  82              		.loc 1 227 0
  83 0010 201C     		mov	r0, r4
  84 0012 FFF7FEFF 		bl	capsense_BaseInit
  85              	.LVL5:
 228:Generated_Source\PSoC4/capsense_CSHL.c **** }
  86              		.loc 1 228 0
  87              		@ sp needed
  88              	.LVL6:
  89 0016 10BD     		pop	{r4, pc}
  90              		.cfi_endproc
  91              	.LFE36:
  92              		.size	capsense_InitializeSensorBaseline, .-capsense_InitializeSensorBaseline
  93              		.section	.text.capsense_InitializeAllBaselines,"ax",%progbits
  94              		.align	2
  95              		.global	capsense_InitializeAllBaselines
  96              		.code	16
  97              		.thumb_func
  98              		.type	capsense_InitializeAllBaselines, %function
  99              	capsense_InitializeAllBaselines:
 100              	.LFB37:
 229:Generated_Source\PSoC4/capsense_CSHL.c **** 
 230:Generated_Source\PSoC4/capsense_CSHL.c **** 
 231:Generated_Source\PSoC4/capsense_CSHL.c **** /*******************************************************************************
 232:Generated_Source\PSoC4/capsense_CSHL.c **** * Function Name: capsense_InitializeAllBaselines
 233:Generated_Source\PSoC4/capsense_CSHL.c **** ********************************************************************************
 234:Generated_Source\PSoC4/capsense_CSHL.c **** *
 235:Generated_Source\PSoC4/capsense_CSHL.c **** * Summary:
 236:Generated_Source\PSoC4/capsense_CSHL.c **** *  Uses the capsense_InitializeSensorBaseline function to load the
 237:Generated_Source\PSoC4/capsense_CSHL.c **** *  capsense_sensorBaseline[] array with an initial values by scanning
 238:Generated_Source\PSoC4/capsense_CSHL.c **** *  all the sensors. The raw count values are copied into the baseline array for
 239:Generated_Source\PSoC4/capsense_CSHL.c **** *  all the sensors. The raw data filters are initialized if enabled.
 240:Generated_Source\PSoC4/capsense_CSHL.c **** *
 241:Generated_Source\PSoC4/capsense_CSHL.c **** * Parameters:
 242:Generated_Source\PSoC4/capsense_CSHL.c **** *  None
ARM GAS  C:\Users\Mykola\AppData\Local\Temp\ccSL9DbN.s 			page 7


 243:Generated_Source\PSoC4/capsense_CSHL.c **** *
 244:Generated_Source\PSoC4/capsense_CSHL.c **** * Return:
 245:Generated_Source\PSoC4/capsense_CSHL.c **** *  None
 246:Generated_Source\PSoC4/capsense_CSHL.c **** *
 247:Generated_Source\PSoC4/capsense_CSHL.c **** * Global Variables:
 248:Generated_Source\PSoC4/capsense_CSHL.c **** *  None
 249:Generated_Source\PSoC4/capsense_CSHL.c **** *
 250:Generated_Source\PSoC4/capsense_CSHL.c **** * Side Effects:
 251:Generated_Source\PSoC4/capsense_CSHL.c **** *  None
 252:Generated_Source\PSoC4/capsense_CSHL.c **** *
 253:Generated_Source\PSoC4/capsense_CSHL.c **** *******************************************************************************/
 254:Generated_Source\PSoC4/capsense_CSHL.c **** void capsense_InitializeAllBaselines(void)
 255:Generated_Source\PSoC4/capsense_CSHL.c **** {
 101              		.loc 1 255 0
 102              		.cfi_startproc
 103 0000 10B5     		push	{r4, lr}
 104              		.cfi_def_cfa_offset 8
 105              		.cfi_offset 4, -8
 106              		.cfi_offset 14, -4
 107              	.LVL7:
 256:Generated_Source\PSoC4/capsense_CSHL.c ****     uint32 i;
 257:Generated_Source\PSoC4/capsense_CSHL.c **** 
 258:Generated_Source\PSoC4/capsense_CSHL.c ****     for(i = 0u; i < capsense_TOTAL_SCANSLOT_COUNT; i++)
 108              		.loc 1 258 0
 109 0002 0024     		mov	r4, #0
 110 0004 03E0     		b	.L7
 111              	.LVL8:
 112              	.L8:
 259:Generated_Source\PSoC4/capsense_CSHL.c ****     {
 260:Generated_Source\PSoC4/capsense_CSHL.c ****         capsense_InitializeSensorBaseline(i);
 113              		.loc 1 260 0 discriminator 3
 114 0006 201C     		mov	r0, r4
 115 0008 FFF7FEFF 		bl	capsense_InitializeSensorBaseline
 116              	.LVL9:
 258:Generated_Source\PSoC4/capsense_CSHL.c ****     {
 117              		.loc 1 258 0 discriminator 3
 118 000c 0134     		add	r4, r4, #1
 119              	.LVL10:
 120              	.L7:
 258:Generated_Source\PSoC4/capsense_CSHL.c ****     {
 121              		.loc 1 258 0 is_stmt 0 discriminator 1
 122 000e 042C     		cmp	r4, #4
 123 0010 F9D9     		bls	.L8
 261:Generated_Source\PSoC4/capsense_CSHL.c ****     }
 262:Generated_Source\PSoC4/capsense_CSHL.c **** }
 124              		.loc 1 262 0 is_stmt 1
 125              		@ sp needed
 126              	.LVL11:
 127 0012 10BD     		pop	{r4, pc}
 128              		.cfi_endproc
 129              	.LFE37:
 130              		.size	capsense_InitializeAllBaselines, .-capsense_InitializeAllBaselines
 131              		.section	.text.capsense_InitializeEnabledBaselines,"ax",%progbits
 132              		.align	2
 133              		.global	capsense_InitializeEnabledBaselines
 134              		.code	16
 135              		.thumb_func
ARM GAS  C:\Users\Mykola\AppData\Local\Temp\ccSL9DbN.s 			page 8


 136              		.type	capsense_InitializeEnabledBaselines, %function
 137              	capsense_InitializeEnabledBaselines:
 138              	.LFB38:
 263:Generated_Source\PSoC4/capsense_CSHL.c **** 
 264:Generated_Source\PSoC4/capsense_CSHL.c **** 
 265:Generated_Source\PSoC4/capsense_CSHL.c **** /*******************************************************************************
 266:Generated_Source\PSoC4/capsense_CSHL.c **** * Function Name: capsense_InitializeEnabledBaselines
 267:Generated_Source\PSoC4/capsense_CSHL.c **** ********************************************************************************
 268:Generated_Source\PSoC4/capsense_CSHL.c **** *
 269:Generated_Source\PSoC4/capsense_CSHL.c **** * Summary:
 270:Generated_Source\PSoC4/capsense_CSHL.c **** *  Scans all the enabled widgets and the raw count values are copied into the
 271:Generated_Source\PSoC4/capsense_CSHL.c **** *  baseline array for all the sensors enabled in the scanning process. The baselines
 272:Generated_Source\PSoC4/capsense_CSHL.c **** *  are initialized with zero values for sensors disabled from the scanning process.
 273:Generated_Source\PSoC4/capsense_CSHL.c **** *  The raw data filters are initialized if enabled.
 274:Generated_Source\PSoC4/capsense_CSHL.c **** *
 275:Generated_Source\PSoC4/capsense_CSHL.c **** * Parameters:
 276:Generated_Source\PSoC4/capsense_CSHL.c **** *  None
 277:Generated_Source\PSoC4/capsense_CSHL.c **** *
 278:Generated_Source\PSoC4/capsense_CSHL.c **** * Return:
 279:Generated_Source\PSoC4/capsense_CSHL.c **** *  None
 280:Generated_Source\PSoC4/capsense_CSHL.c **** *
 281:Generated_Source\PSoC4/capsense_CSHL.c **** * Global Variables:
 282:Generated_Source\PSoC4/capsense_CSHL.c **** *  capsense_sensorRaw[] - used to store the sensors raw data.
 283:Generated_Source\PSoC4/capsense_CSHL.c **** *  capsense_sensorEnableMask[ ] - used to store bit masks of the enabled sensors.
 284:Generated_Source\PSoC4/capsense_CSHL.c **** *
 285:Generated_Source\PSoC4/capsense_CSHL.c **** * Side Effects:
 286:Generated_Source\PSoC4/capsense_CSHL.c **** *  None
 287:Generated_Source\PSoC4/capsense_CSHL.c **** *
 288:Generated_Source\PSoC4/capsense_CSHL.c **** *******************************************************************************/
 289:Generated_Source\PSoC4/capsense_CSHL.c **** void capsense_InitializeEnabledBaselines(void)
 290:Generated_Source\PSoC4/capsense_CSHL.c **** {
 139              		.loc 1 290 0
 140              		.cfi_startproc
 141 0000 10B5     		push	{r4, lr}
 142              		.cfi_def_cfa_offset 8
 143              		.cfi_offset 4, -8
 144              		.cfi_offset 14, -4
 291:Generated_Source\PSoC4/capsense_CSHL.c ****     uint32 i;
 292:Generated_Source\PSoC4/capsense_CSHL.c ****     uint32 isSensorEnabled;
 293:Generated_Source\PSoC4/capsense_CSHL.c **** 
 294:Generated_Source\PSoC4/capsense_CSHL.c ****     capsense_ScanEnabledWidgets();
 145              		.loc 1 294 0
 146 0002 FFF7FEFF 		bl	capsense_ScanEnabledWidgets
 147              	.LVL12:
 148              	.L10:
 295:Generated_Source\PSoC4/capsense_CSHL.c ****     while(capsense_IsBusy() != 0u)
 149              		.loc 1 295 0 discriminator 1
 150 0006 FFF7FEFF 		bl	capsense_IsBusy
 151              	.LVL13:
 152 000a 0028     		cmp	r0, #0
 153 000c FBD1     		bne	.L10
 154 000e 0024     		mov	r4, #0
 155 0010 09E0     		b	.L11
 156              	.LVL14:
 157              	.L13:
 296:Generated_Source\PSoC4/capsense_CSHL.c ****     {
 297:Generated_Source\PSoC4/capsense_CSHL.c ****         /* Wait while sensor is busy */
ARM GAS  C:\Users\Mykola\AppData\Local\Temp\ccSL9DbN.s 			page 9


 298:Generated_Source\PSoC4/capsense_CSHL.c ****     }
 299:Generated_Source\PSoC4/capsense_CSHL.c **** 
 300:Generated_Source\PSoC4/capsense_CSHL.c ****     for(i = 0u; i < capsense_TOTAL_SENSOR_COUNT; i++)
 301:Generated_Source\PSoC4/capsense_CSHL.c ****     {
 302:Generated_Source\PSoC4/capsense_CSHL.c ****         isSensorEnabled = capsense_GetBitValue(capsense_sensorEnableMask, i);
 158              		.loc 1 302 0
 159 0012 0648     		ldr	r0, .L14
 160 0014 211C     		mov	r1, r4
 161 0016 FFF7FEFF 		bl	capsense_GetBitValue
 162              	.LVL15:
 303:Generated_Source\PSoC4/capsense_CSHL.c **** 
 304:Generated_Source\PSoC4/capsense_CSHL.c ****         /* Clear raw data if sensor is disabled from scanning process */
 305:Generated_Source\PSoC4/capsense_CSHL.c ****         if(isSensorEnabled != 0u)
 163              		.loc 1 305 0
 164 001a 0028     		cmp	r0, #0
 165 001c 02D0     		beq	.L12
 306:Generated_Source\PSoC4/capsense_CSHL.c ****         {
 307:Generated_Source\PSoC4/capsense_CSHL.c ****             /* Initialize baselines */
 308:Generated_Source\PSoC4/capsense_CSHL.c ****             capsense_BaseInit(i);
 166              		.loc 1 308 0
 167 001e 201C     		mov	r0, r4
 168              	.LVL16:
 169 0020 FFF7FEFF 		bl	capsense_BaseInit
 170              	.LVL17:
 171              	.L12:
 300:Generated_Source\PSoC4/capsense_CSHL.c ****     {
 172              		.loc 1 300 0 discriminator 2
 173 0024 0134     		add	r4, r4, #1
 174              	.LVL18:
 175              	.L11:
 300:Generated_Source\PSoC4/capsense_CSHL.c ****     {
 176              		.loc 1 300 0 is_stmt 0 discriminator 1
 177 0026 042C     		cmp	r4, #4
 178 0028 F3D9     		bls	.L13
 309:Generated_Source\PSoC4/capsense_CSHL.c ****         }
 310:Generated_Source\PSoC4/capsense_CSHL.c ****     }
 311:Generated_Source\PSoC4/capsense_CSHL.c **** }
 179              		.loc 1 311 0 is_stmt 1
 180              		@ sp needed
 181              	.LVL19:
 182 002a 10BD     		pop	{r4, pc}
 183              	.L15:
 184              		.align	2
 185              	.L14:
 186 002c 00000000 		.word	capsense_sensorEnableMask
 187              		.cfi_endproc
 188              	.LFE38:
 189              		.size	capsense_InitializeEnabledBaselines, .-capsense_InitializeEnabledBaselines
 190              		.section	.text.capsense_GetBaselineData,"ax",%progbits
 191              		.align	2
 192              		.global	capsense_GetBaselineData
 193              		.code	16
 194              		.thumb_func
 195              		.type	capsense_GetBaselineData, %function
 196              	capsense_GetBaselineData:
 197              	.LFB43:
 312:Generated_Source\PSoC4/capsense_CSHL.c **** 
ARM GAS  C:\Users\Mykola\AppData\Local\Temp\ccSL9DbN.s 			page 10


 313:Generated_Source\PSoC4/capsense_CSHL.c **** 
 314:Generated_Source\PSoC4/capsense_CSHL.c **** /*******************************************************************************
 315:Generated_Source\PSoC4/capsense_CSHL.c **** * Function Name: capsense_UpdateBaselineNoThreshold
 316:Generated_Source\PSoC4/capsense_CSHL.c **** ********************************************************************************
 317:Generated_Source\PSoC4/capsense_CSHL.c **** *
 318:Generated_Source\PSoC4/capsense_CSHL.c **** * Summary:
 319:Generated_Source\PSoC4/capsense_CSHL.c **** *  Updates the capsense_sensorBaseline[sensor] array element using the
 320:Generated_Source\PSoC4/capsense_CSHL.c **** *  LP filter with k = 256. The signal calculates the difference of count by
 321:Generated_Source\PSoC4/capsense_CSHL.c **** *  subtracting the previous baseline from the current raw count value and stores
 322:Generated_Source\PSoC4/capsense_CSHL.c **** *  it in capsense_sensorSignal[sensor].
 323:Generated_Source\PSoC4/capsense_CSHL.c **** *  If the auto reset option is enabled, the baseline updated regards the noise threshold.
 324:Generated_Source\PSoC4/capsense_CSHL.c **** *  If the auto reset option is disabled, the baseline stops updating; baseline is loaded
 325:Generated_Source\PSoC4/capsense_CSHL.c **** *  with a raw count value if a signal is greater than zero and if signal is less
 326:Generated_Source\PSoC4/capsense_CSHL.c **** *  than noise threshold.
 327:Generated_Source\PSoC4/capsense_CSHL.c **** *  Raw data filters are applied to the values if enabled before baseline
 328:Generated_Source\PSoC4/capsense_CSHL.c **** *  calculation.
 329:Generated_Source\PSoC4/capsense_CSHL.c **** *
 330:Generated_Source\PSoC4/capsense_CSHL.c **** *  This API does not update the thresholds in the Smartsense Mode.
 331:Generated_Source\PSoC4/capsense_CSHL.c **** *
 332:Generated_Source\PSoC4/capsense_CSHL.c **** * Parameters:
 333:Generated_Source\PSoC4/capsense_CSHL.c **** *  sensor:  Sensor number.
 334:Generated_Source\PSoC4/capsense_CSHL.c **** *
 335:Generated_Source\PSoC4/capsense_CSHL.c **** * Return:
 336:Generated_Source\PSoC4/capsense_CSHL.c **** *  None
 337:Generated_Source\PSoC4/capsense_CSHL.c **** *
 338:Generated_Source\PSoC4/capsense_CSHL.c **** * Global Variables:
 339:Generated_Source\PSoC4/capsense_CSHL.c **** *  capsense_widgetNumber[]  - stores widget numbers.
 340:Generated_Source\PSoC4/capsense_CSHL.c **** *  capsense_sensorBaseline[]    - used to store baseline value.
 341:Generated_Source\PSoC4/capsense_CSHL.c **** *  capsense_sensorBaselineLow[] - used to store fraction byte of
 342:Generated_Source\PSoC4/capsense_CSHL.c **** *  baseline value.
 343:Generated_Source\PSoC4/capsense_CSHL.c **** *  capsense_sensorSignal[]      - used to store difference between
 344:Generated_Source\PSoC4/capsense_CSHL.c **** *  current value of raw data and previous value of baseline.
 345:Generated_Source\PSoC4/capsense_CSHL.c **** *  capsense_rawFilterData1[]    - used to store previous sample of
 346:Generated_Source\PSoC4/capsense_CSHL.c **** *  any enabled raw data filter.
 347:Generated_Source\PSoC4/capsense_CSHL.c **** *  capsense_rawFilterData2[]    - used to store before previous sample
 348:Generated_Source\PSoC4/capsense_CSHL.c **** *  of enabled raw data filter. Only required for median or average filters.
 349:Generated_Source\PSoC4/capsense_CSHL.c **** *
 350:Generated_Source\PSoC4/capsense_CSHL.c **** * Side Effects:
 351:Generated_Source\PSoC4/capsense_CSHL.c **** *  None
 352:Generated_Source\PSoC4/capsense_CSHL.c **** *
 353:Generated_Source\PSoC4/capsense_CSHL.c **** *******************************************************************************/
 354:Generated_Source\PSoC4/capsense_CSHL.c **** void capsense_UpdateBaselineNoThreshold(uint32 sensor)
 355:Generated_Source\PSoC4/capsense_CSHL.c **** {
 356:Generated_Source\PSoC4/capsense_CSHL.c ****     uint32 calc;
 357:Generated_Source\PSoC4/capsense_CSHL.c ****     uint32 sign;
 358:Generated_Source\PSoC4/capsense_CSHL.c ****     uint16 tempRaw;
 359:Generated_Source\PSoC4/capsense_CSHL.c ****     uint16 filteredRawData;
 360:Generated_Source\PSoC4/capsense_CSHL.c ****     uint8 widget = capsense_widgetNumber[sensor];
 361:Generated_Source\PSoC4/capsense_CSHL.c ****     uint8 noiseThreshold;
 362:Generated_Source\PSoC4/capsense_CSHL.c **** 
 363:Generated_Source\PSoC4/capsense_CSHL.c ****     #if (capsense_TOTAL_GENERICS_COUNT)
 364:Generated_Source\PSoC4/capsense_CSHL.c ****         /* Exclude generic widget */
 365:Generated_Source\PSoC4/capsense_CSHL.c ****         if(widget < capsense_END_OF_WIDGETS_INDEX)
 366:Generated_Source\PSoC4/capsense_CSHL.c ****         {
 367:Generated_Source\PSoC4/capsense_CSHL.c ****     #endif  /* capsense_TOTAL_GENERICS_COUNT */
 368:Generated_Source\PSoC4/capsense_CSHL.c **** 
 369:Generated_Source\PSoC4/capsense_CSHL.c ****     noiseThreshold = capsense_noiseThreshold[widget];
ARM GAS  C:\Users\Mykola\AppData\Local\Temp\ccSL9DbN.s 			page 11


 370:Generated_Source\PSoC4/capsense_CSHL.c ****     filteredRawData = capsense_sensorRaw[sensor];
 371:Generated_Source\PSoC4/capsense_CSHL.c **** 
 372:Generated_Source\PSoC4/capsense_CSHL.c ****     #if (capsense_RAW_FILTER_MASK != 0u)
 373:Generated_Source\PSoC4/capsense_CSHL.c ****     if(capsense_enableRawFilters != 0u)
 374:Generated_Source\PSoC4/capsense_CSHL.c ****     {
 375:Generated_Source\PSoC4/capsense_CSHL.c ****         #if (capsense_RAW_FILTER_MASK & capsense_MEDIAN_FILTER)
 376:Generated_Source\PSoC4/capsense_CSHL.c ****             tempRaw = filteredRawData;
 377:Generated_Source\PSoC4/capsense_CSHL.c ****             filteredRawData = capsense_MedianFilter(filteredRawData, capsense_rawFilterData1[sensor
 378:Generated_Source\PSoC4/capsense_CSHL.c ****                                                             capsense_rawFilterData2[sensor]);
 379:Generated_Source\PSoC4/capsense_CSHL.c ****             capsense_rawFilterData2[sensor] = capsense_rawFilterData1[sensor];
 380:Generated_Source\PSoC4/capsense_CSHL.c ****             capsense_rawFilterData1[sensor] = tempRaw;
 381:Generated_Source\PSoC4/capsense_CSHL.c **** 
 382:Generated_Source\PSoC4/capsense_CSHL.c ****         #elif (capsense_RAW_FILTER_MASK & capsense_AVERAGING_FILTER)
 383:Generated_Source\PSoC4/capsense_CSHL.c ****             tempRaw = filteredRawData;
 384:Generated_Source\PSoC4/capsense_CSHL.c ****             filteredRawData = capsense_AveragingFilter(filteredRawData, capsense_rawFilterData1[sen
 385:Generated_Source\PSoC4/capsense_CSHL.c ****                                                                capsense_rawFilterData2[sensor]);
 386:Generated_Source\PSoC4/capsense_CSHL.c ****             capsense_rawFilterData2[sensor] = capsense_rawFilterData1[sensor];
 387:Generated_Source\PSoC4/capsense_CSHL.c ****             capsense_rawFilterData1[sensor] = tempRaw;
 388:Generated_Source\PSoC4/capsense_CSHL.c **** 
 389:Generated_Source\PSoC4/capsense_CSHL.c ****         #elif (capsense_RAW_FILTER_MASK & capsense_IIR2_FILTER)
 390:Generated_Source\PSoC4/capsense_CSHL.c ****             filteredRawData = capsense_IIR2Filter(filteredRawData, capsense_rawFilterData1[sensor])
 391:Generated_Source\PSoC4/capsense_CSHL.c ****             capsense_rawFilterData1[sensor] = filteredRawData;
 392:Generated_Source\PSoC4/capsense_CSHL.c **** 
 393:Generated_Source\PSoC4/capsense_CSHL.c ****         #elif (capsense_RAW_FILTER_MASK & capsense_IIR4_FILTER)
 394:Generated_Source\PSoC4/capsense_CSHL.c ****             filteredRawData = capsense_IIR4Filter(filteredRawData, capsense_rawFilterData1[sensor])
 395:Generated_Source\PSoC4/capsense_CSHL.c ****             capsense_rawFilterData1[sensor] = filteredRawData;
 396:Generated_Source\PSoC4/capsense_CSHL.c **** 
 397:Generated_Source\PSoC4/capsense_CSHL.c ****         #elif (capsense_RAW_FILTER_MASK & capsense_JITTER_FILTER)
 398:Generated_Source\PSoC4/capsense_CSHL.c ****             filteredRawData = capsense_JitterFilter(filteredRawData, capsense_rawFilterData1[sensor
 399:Generated_Source\PSoC4/capsense_CSHL.c ****             capsense_rawFilterData1[sensor] = filteredRawData;
 400:Generated_Source\PSoC4/capsense_CSHL.c **** 
 401:Generated_Source\PSoC4/capsense_CSHL.c ****         #elif (capsense_RAW_FILTER_MASK & capsense_IIR8_FILTER)
 402:Generated_Source\PSoC4/capsense_CSHL.c ****             filteredRawData = capsense_IIR8Filter(filteredRawData, capsense_rawFilterData1[sensor])
 403:Generated_Source\PSoC4/capsense_CSHL.c ****             capsense_rawFilterData1[sensor] = filteredRawData;
 404:Generated_Source\PSoC4/capsense_CSHL.c **** 
 405:Generated_Source\PSoC4/capsense_CSHL.c ****         #elif (capsense_RAW_FILTER_MASK & capsense_IIR16_FILTER)
 406:Generated_Source\PSoC4/capsense_CSHL.c ****             filteredRawData = capsense_IIR16Filter(filteredRawData, capsense_rawFilterData1[sensor]
 407:Generated_Source\PSoC4/capsense_CSHL.c ****             capsense_rawFilterData1[sensor] = filteredRawData;
 408:Generated_Source\PSoC4/capsense_CSHL.c **** 
 409:Generated_Source\PSoC4/capsense_CSHL.c ****         #else
 410:Generated_Source\PSoC4/capsense_CSHL.c ****             /* No Raw filters */
 411:Generated_Source\PSoC4/capsense_CSHL.c ****         #endif  /* (capsense_RAW_FILTER_MASK & capsense_MEDIAN_FILTER) */
 412:Generated_Source\PSoC4/capsense_CSHL.c ****     }
 413:Generated_Source\PSoC4/capsense_CSHL.c ****     #endif  /* (capsense_RAW_FILTER_MASK != 0u) */
 414:Generated_Source\PSoC4/capsense_CSHL.c **** 
 415:Generated_Source\PSoC4/capsense_CSHL.c ****     #if (capsense_TUNING_METHOD == capsense__TUNING_AUTO)
 416:Generated_Source\PSoC4/capsense_CSHL.c ****         MeasureNoiseEnvelope_P4_v2_30(&capsense_config, (uint8)sensor, capsense_sensorRaw);
 417:Generated_Source\PSoC4/capsense_CSHL.c ****     #endif /* (capsense_TUNING_METHOD == capsense__TUNING_AUTO) */
 418:Generated_Source\PSoC4/capsense_CSHL.c **** 
 419:Generated_Source\PSoC4/capsense_CSHL.c ****     /* Baseline calculation */
 420:Generated_Source\PSoC4/capsense_CSHL.c ****     /* Calculate difference RawData[cur] - Baseline[prev] */
 421:Generated_Source\PSoC4/capsense_CSHL.c ****     if(filteredRawData >= capsense_sensorBaseline[sensor])
 422:Generated_Source\PSoC4/capsense_CSHL.c ****     {
 423:Generated_Source\PSoC4/capsense_CSHL.c ****         capsense_lowBaselineResetCnt[sensor] = 0u;
 424:Generated_Source\PSoC4/capsense_CSHL.c ****         tempRaw = filteredRawData - capsense_sensorBaseline[sensor];
 425:Generated_Source\PSoC4/capsense_CSHL.c ****         sign = 1u;    /* Positive difference - Calculate the Signal */
 426:Generated_Source\PSoC4/capsense_CSHL.c ****     }
ARM GAS  C:\Users\Mykola\AppData\Local\Temp\ccSL9DbN.s 			page 12


 427:Generated_Source\PSoC4/capsense_CSHL.c ****     else
 428:Generated_Source\PSoC4/capsense_CSHL.c ****     {
 429:Generated_Source\PSoC4/capsense_CSHL.c ****         tempRaw = capsense_sensorBaseline[sensor] - filteredRawData;
 430:Generated_Source\PSoC4/capsense_CSHL.c ****         sign = 0u;    /* Negative difference - Do NOT calculate the Signal */
 431:Generated_Source\PSoC4/capsense_CSHL.c ****     }
 432:Generated_Source\PSoC4/capsense_CSHL.c **** 
 433:Generated_Source\PSoC4/capsense_CSHL.c ****     #if (capsense_TUNING_METHOD != capsense__TUNING_NONE)
 434:Generated_Source\PSoC4/capsense_CSHL.c ****     if((sign == 0u) && (tempRaw > (uint16) capsense_negativeNoiseThreshold[widget]))
 435:Generated_Source\PSoC4/capsense_CSHL.c ****     #else
 436:Generated_Source\PSoC4/capsense_CSHL.c ****     if((sign == 0u) && (tempRaw > (uint16) capsense_NEGATIVE_NOISE_THRESHOLD))
 437:Generated_Source\PSoC4/capsense_CSHL.c ****     #endif /* (capsense_TUNING_METHOD != capsense__TUNING_NONE) */
 438:Generated_Source\PSoC4/capsense_CSHL.c ****     {
 439:Generated_Source\PSoC4/capsense_CSHL.c ****         if(capsense_lowBaselineResetCnt[sensor] >= capsense_lowBaselineReset[sensor])
 440:Generated_Source\PSoC4/capsense_CSHL.c ****         {
 441:Generated_Source\PSoC4/capsense_CSHL.c ****             capsense_BaseInit(sensor);
 442:Generated_Source\PSoC4/capsense_CSHL.c ****             capsense_lowBaselineResetCnt[sensor] = 0u;
 443:Generated_Source\PSoC4/capsense_CSHL.c ****         }
 444:Generated_Source\PSoC4/capsense_CSHL.c ****         else
 445:Generated_Source\PSoC4/capsense_CSHL.c ****         {
 446:Generated_Source\PSoC4/capsense_CSHL.c ****             capsense_lowBaselineResetCnt[sensor]++;
 447:Generated_Source\PSoC4/capsense_CSHL.c ****         }
 448:Generated_Source\PSoC4/capsense_CSHL.c ****     }
 449:Generated_Source\PSoC4/capsense_CSHL.c ****     else
 450:Generated_Source\PSoC4/capsense_CSHL.c ****     {
 451:Generated_Source\PSoC4/capsense_CSHL.c ****         #if (capsense_AUTO_RESET == capsense_AUTO_RESET_DISABLE)
 452:Generated_Source\PSoC4/capsense_CSHL.c ****         #if (capsense_TUNING_METHOD != capsense__TUNING_NONE)
 453:Generated_Source\PSoC4/capsense_CSHL.c ****             /* Update Baseline if lower than noiseThreshold */
 454:Generated_Source\PSoC4/capsense_CSHL.c ****             if ( (tempRaw <= noiseThreshold) ||
 455:Generated_Source\PSoC4/capsense_CSHL.c ****              ((tempRaw < (uint16) capsense_negativeNoiseThreshold[widget])
 456:Generated_Source\PSoC4/capsense_CSHL.c ****                && (sign == 0u)))
 457:Generated_Source\PSoC4/capsense_CSHL.c ****             {
 458:Generated_Source\PSoC4/capsense_CSHL.c ****         #else
 459:Generated_Source\PSoC4/capsense_CSHL.c ****             /* Update Baseline if lower than noiseThreshold */
 460:Generated_Source\PSoC4/capsense_CSHL.c ****             if ( (tempRaw <= noiseThreshold) ||
 461:Generated_Source\PSoC4/capsense_CSHL.c ****                  ((tempRaw < (uint16) capsense_NEGATIVE_NOISE_THRESHOLD)
 462:Generated_Source\PSoC4/capsense_CSHL.c ****                    && (sign == 0u)))
 463:Generated_Source\PSoC4/capsense_CSHL.c ****             {
 464:Generated_Source\PSoC4/capsense_CSHL.c ****         #endif /* (capsense_TUNING_METHOD != capsense__TUNING_NONE) */
 465:Generated_Source\PSoC4/capsense_CSHL.c ****         #endif /* (capsense_AUTO_RESET == capsense_AUTO_RESET_DISABLE) */
 466:Generated_Source\PSoC4/capsense_CSHL.c ****                 /* Make full Baseline 23 bits */
 467:Generated_Source\PSoC4/capsense_CSHL.c ****                 calc = (uint32) capsense_sensorBaseline[sensor] << 8u;
 468:Generated_Source\PSoC4/capsense_CSHL.c ****                 calc |= (uint32) capsense_sensorBaselineLow[sensor];
 469:Generated_Source\PSoC4/capsense_CSHL.c **** 
 470:Generated_Source\PSoC4/capsense_CSHL.c ****                 /* Add Raw Data to Baseline */
 471:Generated_Source\PSoC4/capsense_CSHL.c ****                 calc += filteredRawData;
 472:Generated_Source\PSoC4/capsense_CSHL.c **** 
 473:Generated_Source\PSoC4/capsense_CSHL.c ****                 /* Sub the high Baseline */
 474:Generated_Source\PSoC4/capsense_CSHL.c ****                 calc -= capsense_sensorBaseline[sensor];
 475:Generated_Source\PSoC4/capsense_CSHL.c **** 
 476:Generated_Source\PSoC4/capsense_CSHL.c ****                 /* Put Baseline and BaselineLow */
 477:Generated_Source\PSoC4/capsense_CSHL.c ****                 capsense_sensorBaseline[sensor] = ((uint16) (calc >> 8u));
 478:Generated_Source\PSoC4/capsense_CSHL.c ****                 capsense_sensorBaselineLow[sensor] = ((uint8) calc);
 479:Generated_Source\PSoC4/capsense_CSHL.c **** 
 480:Generated_Source\PSoC4/capsense_CSHL.c ****                 capsense_lowBaselineResetCnt[sensor] = 0u;
 481:Generated_Source\PSoC4/capsense_CSHL.c ****         #if (capsense_AUTO_RESET == capsense_AUTO_RESET_DISABLE)
 482:Generated_Source\PSoC4/capsense_CSHL.c ****             }
 483:Generated_Source\PSoC4/capsense_CSHL.c ****         #endif /* (capsense_AUTO_RESET == capsense_AUTO_RESET_DISABLE) */
ARM GAS  C:\Users\Mykola\AppData\Local\Temp\ccSL9DbN.s 			page 13


 484:Generated_Source\PSoC4/capsense_CSHL.c ****     }
 485:Generated_Source\PSoC4/capsense_CSHL.c **** 
 486:Generated_Source\PSoC4/capsense_CSHL.c ****     /* Calculate Signal if positive difference > noiseThreshold */
 487:Generated_Source\PSoC4/capsense_CSHL.c ****     if((tempRaw > (uint16) noiseThreshold) && (sign != 0u))
 488:Generated_Source\PSoC4/capsense_CSHL.c ****     {
 489:Generated_Source\PSoC4/capsense_CSHL.c ****         #if (capsense_SIGNAL_SIZE == capsense_SIGNAL_SIZE_UINT8)
 490:Generated_Source\PSoC4/capsense_CSHL.c ****             /* Over flow defence for uint8 */
 491:Generated_Source\PSoC4/capsense_CSHL.c ****             if (tempRaw > 0xFFu)
 492:Generated_Source\PSoC4/capsense_CSHL.c ****             {
 493:Generated_Source\PSoC4/capsense_CSHL.c ****                 capsense_sensorSignal[sensor] = 0xFFu;
 494:Generated_Source\PSoC4/capsense_CSHL.c ****             }
 495:Generated_Source\PSoC4/capsense_CSHL.c ****             else
 496:Generated_Source\PSoC4/capsense_CSHL.c ****             {
 497:Generated_Source\PSoC4/capsense_CSHL.c ****                 capsense_sensorSignal[sensor] = ((uint8) tempRaw);
 498:Generated_Source\PSoC4/capsense_CSHL.c ****             }
 499:Generated_Source\PSoC4/capsense_CSHL.c ****         #else
 500:Generated_Source\PSoC4/capsense_CSHL.c ****             capsense_sensorSignal[sensor] = ((uint16) tempRaw);
 501:Generated_Source\PSoC4/capsense_CSHL.c ****         #endif  /* (capsense_SIGNAL_SIZE == capsense_SIGNAL_SIZE_UINT8) */
 502:Generated_Source\PSoC4/capsense_CSHL.c ****     }
 503:Generated_Source\PSoC4/capsense_CSHL.c ****     else
 504:Generated_Source\PSoC4/capsense_CSHL.c ****     {
 505:Generated_Source\PSoC4/capsense_CSHL.c ****         /* Signal is zero */
 506:Generated_Source\PSoC4/capsense_CSHL.c ****         capsense_sensorSignal[sensor] = 0u;
 507:Generated_Source\PSoC4/capsense_CSHL.c ****     }
 508:Generated_Source\PSoC4/capsense_CSHL.c **** 
 509:Generated_Source\PSoC4/capsense_CSHL.c ****     #if (capsense_TOTAL_GENERICS_COUNT)
 510:Generated_Source\PSoC4/capsense_CSHL.c ****         /* Exclude generic widget */
 511:Generated_Source\PSoC4/capsense_CSHL.c ****         }
 512:Generated_Source\PSoC4/capsense_CSHL.c ****     #endif  /* capsense_TOTAL_GENERICS_COUNT */
 513:Generated_Source\PSoC4/capsense_CSHL.c **** }
 514:Generated_Source\PSoC4/capsense_CSHL.c **** 
 515:Generated_Source\PSoC4/capsense_CSHL.c **** 
 516:Generated_Source\PSoC4/capsense_CSHL.c **** /*******************************************************************************
 517:Generated_Source\PSoC4/capsense_CSHL.c **** * Function Name: capsense_UpdateSensorBaseline
 518:Generated_Source\PSoC4/capsense_CSHL.c **** ********************************************************************************
 519:Generated_Source\PSoC4/capsense_CSHL.c **** *
 520:Generated_Source\PSoC4/capsense_CSHL.c **** * Summary:
 521:Generated_Source\PSoC4/capsense_CSHL.c **** *  Updates the capsense_sensorBaseline[sensor] array element using the
 522:Generated_Source\PSoC4/capsense_CSHL.c **** *  LP filter with k = 256. The signal calculates the difference of count by
 523:Generated_Source\PSoC4/capsense_CSHL.c **** *  subtracting the previous baseline from the current raw count value and stores
 524:Generated_Source\PSoC4/capsense_CSHL.c **** *  it in capsense_sensorSignal[sensor].
 525:Generated_Source\PSoC4/capsense_CSHL.c **** *  If the auto reset option is enabled, the baseline updated regards the noise threshold.
 526:Generated_Source\PSoC4/capsense_CSHL.c **** *  If the auto reset option is disabled, the baseline stops updating.
 527:Generated_Source\PSoC4/capsense_CSHL.c **** *  Baseline is loaded with raw count value if a signal is greater than zero and
 528:Generated_Source\PSoC4/capsense_CSHL.c **** *  if signal is less than noise threshold.
 529:Generated_Source\PSoC4/capsense_CSHL.c **** *  Raw data filters are applied to the values if enabled before baseline
 530:Generated_Source\PSoC4/capsense_CSHL.c **** *  calculation.
 531:Generated_Source\PSoC4/capsense_CSHL.c **** *  This API updates the thresholds in the Smartsense Mode.
 532:Generated_Source\PSoC4/capsense_CSHL.c **** *
 533:Generated_Source\PSoC4/capsense_CSHL.c **** * Parameters:
 534:Generated_Source\PSoC4/capsense_CSHL.c **** *  sensor:  Sensor number.
 535:Generated_Source\PSoC4/capsense_CSHL.c **** *
 536:Generated_Source\PSoC4/capsense_CSHL.c **** * Return:
 537:Generated_Source\PSoC4/capsense_CSHL.c **** *  None
 538:Generated_Source\PSoC4/capsense_CSHL.c **** *
 539:Generated_Source\PSoC4/capsense_CSHL.c **** * Global Variables:
 540:Generated_Source\PSoC4/capsense_CSHL.c **** *  capsense_widgetNumber[]  - stores widget numbers.
ARM GAS  C:\Users\Mykola\AppData\Local\Temp\ccSL9DbN.s 			page 14


 541:Generated_Source\PSoC4/capsense_CSHL.c **** *
 542:Generated_Source\PSoC4/capsense_CSHL.c **** * Side Effects:
 543:Generated_Source\PSoC4/capsense_CSHL.c **** *  None
 544:Generated_Source\PSoC4/capsense_CSHL.c **** *
 545:Generated_Source\PSoC4/capsense_CSHL.c **** *******************************************************************************/
 546:Generated_Source\PSoC4/capsense_CSHL.c ****  void capsense_UpdateSensorBaseline(uint32 sensor)
 547:Generated_Source\PSoC4/capsense_CSHL.c **** {
 548:Generated_Source\PSoC4/capsense_CSHL.c ****     #if (capsense_TOTAL_GENERICS_COUNT)
 549:Generated_Source\PSoC4/capsense_CSHL.c ****         uint32 widget;
 550:Generated_Source\PSoC4/capsense_CSHL.c **** 
 551:Generated_Source\PSoC4/capsense_CSHL.c ****         widget = capsense_widgetNumber[sensor];
 552:Generated_Source\PSoC4/capsense_CSHL.c **** 
 553:Generated_Source\PSoC4/capsense_CSHL.c ****         /* Exclude generic widget */
 554:Generated_Source\PSoC4/capsense_CSHL.c ****         if(widget < capsense_END_OF_WIDGETS_INDEX)
 555:Generated_Source\PSoC4/capsense_CSHL.c ****         {
 556:Generated_Source\PSoC4/capsense_CSHL.c ****     #endif  /* capsense_TOTAL_GENERICS_COUNT */
 557:Generated_Source\PSoC4/capsense_CSHL.c **** 
 558:Generated_Source\PSoC4/capsense_CSHL.c ****     #if (capsense_TUNING_METHOD == capsense__TUNING_AUTO)
 559:Generated_Source\PSoC4/capsense_CSHL.c ****         capsense_UpdateThresholds(sensor);
 560:Generated_Source\PSoC4/capsense_CSHL.c ****     #endif /* (capsense_TUNING_METHOD == capsense__TUNING_AUTO) */
 561:Generated_Source\PSoC4/capsense_CSHL.c **** 
 562:Generated_Source\PSoC4/capsense_CSHL.c ****     capsense_UpdateBaselineNoThreshold(sensor);
 563:Generated_Source\PSoC4/capsense_CSHL.c **** 
 564:Generated_Source\PSoC4/capsense_CSHL.c ****     #if (capsense_TOTAL_GENERICS_COUNT)
 565:Generated_Source\PSoC4/capsense_CSHL.c ****         /* Exclude generic widget */
 566:Generated_Source\PSoC4/capsense_CSHL.c ****         }
 567:Generated_Source\PSoC4/capsense_CSHL.c ****     #endif  /* capsense_TOTAL_GENERICS_COUNT */
 568:Generated_Source\PSoC4/capsense_CSHL.c **** }
 569:Generated_Source\PSoC4/capsense_CSHL.c **** 
 570:Generated_Source\PSoC4/capsense_CSHL.c **** 
 571:Generated_Source\PSoC4/capsense_CSHL.c **** /*******************************************************************************
 572:Generated_Source\PSoC4/capsense_CSHL.c **** * Function Name: capsense_UpdateEnabledBaselines
 573:Generated_Source\PSoC4/capsense_CSHL.c **** ********************************************************************************
 574:Generated_Source\PSoC4/capsense_CSHL.c **** *
 575:Generated_Source\PSoC4/capsense_CSHL.c **** * Summary:
 576:Generated_Source\PSoC4/capsense_CSHL.c **** *  Checks capsense_sensorEnableMask[] array and calls the
 577:Generated_Source\PSoC4/capsense_CSHL.c **** *  capsense_UpdateSensorBaseline function to update the baselines
 578:Generated_Source\PSoC4/capsense_CSHL.c **** *  for the enabled sensors.
 579:Generated_Source\PSoC4/capsense_CSHL.c **** *
 580:Generated_Source\PSoC4/capsense_CSHL.c **** * Parameters:
 581:Generated_Source\PSoC4/capsense_CSHL.c **** *  None
 582:Generated_Source\PSoC4/capsense_CSHL.c **** *
 583:Generated_Source\PSoC4/capsense_CSHL.c **** * Return:
 584:Generated_Source\PSoC4/capsense_CSHL.c **** *  None
 585:Generated_Source\PSoC4/capsense_CSHL.c **** *
 586:Generated_Source\PSoC4/capsense_CSHL.c **** * Global Variables:
 587:Generated_Source\PSoC4/capsense_CSHL.c **** *  capsense_sensorEnableMask[] - used to store the sensor scanning
 588:Generated_Source\PSoC4/capsense_CSHL.c **** *  state.
 589:Generated_Source\PSoC4/capsense_CSHL.c **** *  capsense_sensorEnableMask[0] contains the masked bits for sensors
 590:Generated_Source\PSoC4/capsense_CSHL.c **** *   0 through 7 (sensor 0 is bit 0, sensor 1 is bit 1).
 591:Generated_Source\PSoC4/capsense_CSHL.c **** *  capsense_sensorEnableMask[1] contains the masked bits for
 592:Generated_Source\PSoC4/capsense_CSHL.c **** *  sensors 8 through 15 (if needed), and so on.
 593:Generated_Source\PSoC4/capsense_CSHL.c **** *  0 - sensor doesn't scan by capsense_ScanEnabledWidgets().
 594:Generated_Source\PSoC4/capsense_CSHL.c **** *  1 - sensor scans by capsense_ScanEnabledWidgets().
 595:Generated_Source\PSoC4/capsense_CSHL.c **** *
 596:Generated_Source\PSoC4/capsense_CSHL.c **** * Side Effects:
 597:Generated_Source\PSoC4/capsense_CSHL.c **** *  None
ARM GAS  C:\Users\Mykola\AppData\Local\Temp\ccSL9DbN.s 			page 15


 598:Generated_Source\PSoC4/capsense_CSHL.c **** *
 599:Generated_Source\PSoC4/capsense_CSHL.c **** *******************************************************************************/
 600:Generated_Source\PSoC4/capsense_CSHL.c ****  void capsense_UpdateEnabledBaselines(void)
 601:Generated_Source\PSoC4/capsense_CSHL.c **** {
 602:Generated_Source\PSoC4/capsense_CSHL.c ****     uint32 i;
 603:Generated_Source\PSoC4/capsense_CSHL.c ****     uint32 isSensorEnabled;
 604:Generated_Source\PSoC4/capsense_CSHL.c **** 
 605:Generated_Source\PSoC4/capsense_CSHL.c ****     for(i = 0u; i < capsense_TOTAL_SENSOR_COUNT; i++)
 606:Generated_Source\PSoC4/capsense_CSHL.c ****     {
 607:Generated_Source\PSoC4/capsense_CSHL.c ****         isSensorEnabled = capsense_GetBitValue(capsense_sensorEnableMask, i);
 608:Generated_Source\PSoC4/capsense_CSHL.c **** 
 609:Generated_Source\PSoC4/capsense_CSHL.c ****         if(0u != isSensorEnabled)
 610:Generated_Source\PSoC4/capsense_CSHL.c ****         {
 611:Generated_Source\PSoC4/capsense_CSHL.c ****             capsense_UpdateSensorBaseline(i);
 612:Generated_Source\PSoC4/capsense_CSHL.c ****         }
 613:Generated_Source\PSoC4/capsense_CSHL.c ****     }
 614:Generated_Source\PSoC4/capsense_CSHL.c **** }
 615:Generated_Source\PSoC4/capsense_CSHL.c **** 
 616:Generated_Source\PSoC4/capsense_CSHL.c **** /*******************************************************************************
 617:Generated_Source\PSoC4/capsense_CSHL.c **** * Function Name: capsense_UpdateWidgetBaseline
 618:Generated_Source\PSoC4/capsense_CSHL.c **** ********************************************************************************
 619:Generated_Source\PSoC4/capsense_CSHL.c **** *
 620:Generated_Source\PSoC4/capsense_CSHL.c **** * Summary:
 621:Generated_Source\PSoC4/capsense_CSHL.c **** *  Checks capsense_sensorEnableMask[] array and calls the
 622:Generated_Source\PSoC4/capsense_CSHL.c **** *  capsense_UpdateSensorBaseline function to update the baselines
 623:Generated_Source\PSoC4/capsense_CSHL.c **** *  for the enabled sensors that belong to widget.
 624:Generated_Source\PSoC4/capsense_CSHL.c **** *
 625:Generated_Source\PSoC4/capsense_CSHL.c **** * Parameters:
 626:Generated_Source\PSoC4/capsense_CSHL.c **** *  widget:  Widget number.
 627:Generated_Source\PSoC4/capsense_CSHL.c **** *
 628:Generated_Source\PSoC4/capsense_CSHL.c **** * Return:
 629:Generated_Source\PSoC4/capsense_CSHL.c **** *  None
 630:Generated_Source\PSoC4/capsense_CSHL.c **** *
 631:Generated_Source\PSoC4/capsense_CSHL.c **** * Global Variables:
 632:Generated_Source\PSoC4/capsense_CSHL.c **** *  capsense_sensorEnableMask[] - used to store the sensor scanning
 633:Generated_Source\PSoC4/capsense_CSHL.c **** *  state.
 634:Generated_Source\PSoC4/capsense_CSHL.c **** *  capsense_sensorEnableMask[0] contains the masked bits for sensors
 635:Generated_Source\PSoC4/capsense_CSHL.c **** *   0 through 7 (sensor 0 is bit 0, sensor 1 is bit 1).
 636:Generated_Source\PSoC4/capsense_CSHL.c **** *  capsense_sensorEnableMask[1] contains the masked bits for
 637:Generated_Source\PSoC4/capsense_CSHL.c **** *  sensors 8 through 15 (if needed), and so on.
 638:Generated_Source\PSoC4/capsense_CSHL.c **** *  0 - sensor doesn't scan by capsense_ScanEnabledWidgets().
 639:Generated_Source\PSoC4/capsense_CSHL.c **** *  1 - sensor scans by capsense_ScanEnabledWidgets().
 640:Generated_Source\PSoC4/capsense_CSHL.c **** *
 641:Generated_Source\PSoC4/capsense_CSHL.c **** * Side Effects:
 642:Generated_Source\PSoC4/capsense_CSHL.c **** *  None
 643:Generated_Source\PSoC4/capsense_CSHL.c **** *
 644:Generated_Source\PSoC4/capsense_CSHL.c **** *******************************************************************************/
 645:Generated_Source\PSoC4/capsense_CSHL.c **** void capsense_UpdateWidgetBaseline(uint32 widget)
 646:Generated_Source\PSoC4/capsense_CSHL.c **** {
 647:Generated_Source\PSoC4/capsense_CSHL.c ****     uint32 sensorsPerWidget;
 648:Generated_Source\PSoC4/capsense_CSHL.c ****     uint32 firstSensor;
 649:Generated_Source\PSoC4/capsense_CSHL.c ****     uint32 lastSensor;
 650:Generated_Source\PSoC4/capsense_CSHL.c ****     uint32 i;
 651:Generated_Source\PSoC4/capsense_CSHL.c ****     uint32 isSensorEnabled;
 652:Generated_Source\PSoC4/capsense_CSHL.c **** 
 653:Generated_Source\PSoC4/capsense_CSHL.c ****     /* Get number of sensors in widget */
 654:Generated_Source\PSoC4/capsense_CSHL.c ****     sensorsPerWidget = capsense_numberOfSensors[widget];
ARM GAS  C:\Users\Mykola\AppData\Local\Temp\ccSL9DbN.s 			page 16


 655:Generated_Source\PSoC4/capsense_CSHL.c **** 
 656:Generated_Source\PSoC4/capsense_CSHL.c ****     /* Get first sensor in widget */
 657:Generated_Source\PSoC4/capsense_CSHL.c ****     firstSensor = capsense_rawDataIndex[widget];
 658:Generated_Source\PSoC4/capsense_CSHL.c **** 
 659:Generated_Source\PSoC4/capsense_CSHL.c ****     /* Get last sensor in widget */
 660:Generated_Source\PSoC4/capsense_CSHL.c ****     lastSensor = (capsense_rawDataIndex[widget] + sensorsPerWidget);
 661:Generated_Source\PSoC4/capsense_CSHL.c **** 
 662:Generated_Source\PSoC4/capsense_CSHL.c ****     for(i = firstSensor; i < lastSensor; i++)
 663:Generated_Source\PSoC4/capsense_CSHL.c ****     {
 664:Generated_Source\PSoC4/capsense_CSHL.c ****         isSensorEnabled = capsense_GetBitValue(capsense_sensorEnableMask, i);
 665:Generated_Source\PSoC4/capsense_CSHL.c **** 
 666:Generated_Source\PSoC4/capsense_CSHL.c ****         if(0u != isSensorEnabled)
 667:Generated_Source\PSoC4/capsense_CSHL.c ****         {
 668:Generated_Source\PSoC4/capsense_CSHL.c ****             capsense_UpdateSensorBaseline(i);
 669:Generated_Source\PSoC4/capsense_CSHL.c ****         }
 670:Generated_Source\PSoC4/capsense_CSHL.c ****     }
 671:Generated_Source\PSoC4/capsense_CSHL.c **** }
 672:Generated_Source\PSoC4/capsense_CSHL.c **** 
 673:Generated_Source\PSoC4/capsense_CSHL.c **** 
 674:Generated_Source\PSoC4/capsense_CSHL.c **** /*******************************************************************************
 675:Generated_Source\PSoC4/capsense_CSHL.c **** * Function Name: capsense_GetBaselineData
 676:Generated_Source\PSoC4/capsense_CSHL.c **** ********************************************************************************
 677:Generated_Source\PSoC4/capsense_CSHL.c **** *
 678:Generated_Source\PSoC4/capsense_CSHL.c **** * Summary:
 679:Generated_Source\PSoC4/capsense_CSHL.c **** *  This function reads the sensor baseline from the component.
 680:Generated_Source\PSoC4/capsense_CSHL.c **** *
 681:Generated_Source\PSoC4/capsense_CSHL.c **** * Parameters:
 682:Generated_Source\PSoC4/capsense_CSHL.c **** *  sensor:  Sensor number.
 683:Generated_Source\PSoC4/capsense_CSHL.c **** *
 684:Generated_Source\PSoC4/capsense_CSHL.c **** * Return:
 685:Generated_Source\PSoC4/capsense_CSHL.c **** *  This API returns the baseline value of the sensor indicated by an argument.
 686:Generated_Source\PSoC4/capsense_CSHL.c **** *
 687:Generated_Source\PSoC4/capsense_CSHL.c **** * Global Variables:
 688:Generated_Source\PSoC4/capsense_CSHL.c **** *  capsense_sensorBaseline[] - the array with an initial values by scanning
 689:Generated_Source\PSoC4/capsense_CSHL.c **** *
 690:Generated_Source\PSoC4/capsense_CSHL.c **** * Side Effects:
 691:Generated_Source\PSoC4/capsense_CSHL.c **** *  None
 692:Generated_Source\PSoC4/capsense_CSHL.c **** *
 693:Generated_Source\PSoC4/capsense_CSHL.c **** *******************************************************************************/
 694:Generated_Source\PSoC4/capsense_CSHL.c **** uint16 capsense_GetBaselineData(uint32 sensor)
 695:Generated_Source\PSoC4/capsense_CSHL.c **** {
 198              		.loc 1 695 0
 199              		.cfi_startproc
 200              	.LVL20:
 696:Generated_Source\PSoC4/capsense_CSHL.c ****     return (capsense_sensorBaseline[sensor]);
 201              		.loc 1 696 0
 202 0000 4000     		lsl	r0, r0, #1
 203              	.LVL21:
 204 0002 014B     		ldr	r3, .L17
 205 0004 185A     		ldrh	r0, [r3, r0]
 697:Generated_Source\PSoC4/capsense_CSHL.c **** }
 206              		.loc 1 697 0
 207              		@ sp needed
 208 0006 7047     		bx	lr
 209              	.L18:
 210              		.align	2
 211              	.L17:
ARM GAS  C:\Users\Mykola\AppData\Local\Temp\ccSL9DbN.s 			page 17


 212 0008 00000000 		.word	.LANCHOR0
 213              		.cfi_endproc
 214              	.LFE43:
 215              		.size	capsense_GetBaselineData, .-capsense_GetBaselineData
 216              		.section	.text.capsense_SetBaselineData,"ax",%progbits
 217              		.align	2
 218              		.global	capsense_SetBaselineData
 219              		.code	16
 220              		.thumb_func
 221              		.type	capsense_SetBaselineData, %function
 222              	capsense_SetBaselineData:
 223              	.LFB44:
 698:Generated_Source\PSoC4/capsense_CSHL.c **** 
 699:Generated_Source\PSoC4/capsense_CSHL.c **** 
 700:Generated_Source\PSoC4/capsense_CSHL.c **** /*******************************************************************************
 701:Generated_Source\PSoC4/capsense_CSHL.c **** * Function Name: capsense_SetBaselineData
 702:Generated_Source\PSoC4/capsense_CSHL.c **** ********************************************************************************
 703:Generated_Source\PSoC4/capsense_CSHL.c **** *
 704:Generated_Source\PSoC4/capsense_CSHL.c **** * Summary:
 705:Generated_Source\PSoC4/capsense_CSHL.c **** *  This API writes the data value passed as an argument to the sensor baseline array.
 706:Generated_Source\PSoC4/capsense_CSHL.c **** *
 707:Generated_Source\PSoC4/capsense_CSHL.c **** * Parameters:
 708:Generated_Source\PSoC4/capsense_CSHL.c **** *  sensor:  Sensor number.
 709:Generated_Source\PSoC4/capsense_CSHL.c **** *  data:    Sensor baseline.
 710:Generated_Source\PSoC4/capsense_CSHL.c **** *
 711:Generated_Source\PSoC4/capsense_CSHL.c **** * Return:
 712:Generated_Source\PSoC4/capsense_CSHL.c **** *  None.
 713:Generated_Source\PSoC4/capsense_CSHL.c **** *
 714:Generated_Source\PSoC4/capsense_CSHL.c **** * Global Variables:
 715:Generated_Source\PSoC4/capsense_CSHL.c **** *  capsense_sensorBaseline[] - the array with initial values by scanning
 716:Generated_Source\PSoC4/capsense_CSHL.c **** *
 717:Generated_Source\PSoC4/capsense_CSHL.c **** * Side Effects:
 718:Generated_Source\PSoC4/capsense_CSHL.c **** *  None
 719:Generated_Source\PSoC4/capsense_CSHL.c **** *
 720:Generated_Source\PSoC4/capsense_CSHL.c **** *******************************************************************************/
 721:Generated_Source\PSoC4/capsense_CSHL.c **** void capsense_SetBaselineData(uint32 sensor, uint16 data)
 722:Generated_Source\PSoC4/capsense_CSHL.c **** {
 224              		.loc 1 722 0
 225              		.cfi_startproc
 226              	.LVL22:
 723:Generated_Source\PSoC4/capsense_CSHL.c ****     capsense_sensorBaseline[sensor] = data;
 227              		.loc 1 723 0
 228 0000 4000     		lsl	r0, r0, #1
 229              	.LVL23:
 230 0002 014B     		ldr	r3, .L20
 231 0004 C152     		strh	r1, [r0, r3]
 724:Generated_Source\PSoC4/capsense_CSHL.c **** }
 232              		.loc 1 724 0
 233              		@ sp needed
 234 0006 7047     		bx	lr
 235              	.L21:
 236              		.align	2
 237              	.L20:
 238 0008 00000000 		.word	.LANCHOR0
 239              		.cfi_endproc
 240              	.LFE44:
 241              		.size	capsense_SetBaselineData, .-capsense_SetBaselineData
ARM GAS  C:\Users\Mykola\AppData\Local\Temp\ccSL9DbN.s 			page 18


 242              		.section	.text.capsense_GetDiffCountData,"ax",%progbits
 243              		.align	2
 244              		.global	capsense_GetDiffCountData
 245              		.code	16
 246              		.thumb_func
 247              		.type	capsense_GetDiffCountData, %function
 248              	capsense_GetDiffCountData:
 249              	.LFB45:
 725:Generated_Source\PSoC4/capsense_CSHL.c **** 
 726:Generated_Source\PSoC4/capsense_CSHL.c **** 
 727:Generated_Source\PSoC4/capsense_CSHL.c **** /*******************************************************************************
 728:Generated_Source\PSoC4/capsense_CSHL.c **** * Function Name: capsense_GetDiffCountData
 729:Generated_Source\PSoC4/capsense_CSHL.c **** ********************************************************************************
 730:Generated_Source\PSoC4/capsense_CSHL.c **** *
 731:Generated_Source\PSoC4/capsense_CSHL.c **** * Summary:
 732:Generated_Source\PSoC4/capsense_CSHL.c **** *  This function returns the Sensor Signal from the component.
 733:Generated_Source\PSoC4/capsense_CSHL.c **** *
 734:Generated_Source\PSoC4/capsense_CSHL.c **** * Parameters:
 735:Generated_Source\PSoC4/capsense_CSHL.c **** *  sensor:  Sensor number.
 736:Generated_Source\PSoC4/capsense_CSHL.c **** *
 737:Generated_Source\PSoC4/capsense_CSHL.c **** * Return:
 738:Generated_Source\PSoC4/capsense_CSHL.c **** *  This API returns the difference count value of the sensor indicated by the
 739:Generated_Source\PSoC4/capsense_CSHL.c **** *  argument.
 740:Generated_Source\PSoC4/capsense_CSHL.c **** *
 741:Generated_Source\PSoC4/capsense_CSHL.c **** * Global Variables:
 742:Generated_Source\PSoC4/capsense_CSHL.c **** *  capsense_sensorSignal[] - the array with difference counts for sensors
 743:Generated_Source\PSoC4/capsense_CSHL.c **** *
 744:Generated_Source\PSoC4/capsense_CSHL.c **** * Side Effects:
 745:Generated_Source\PSoC4/capsense_CSHL.c **** *  None
 746:Generated_Source\PSoC4/capsense_CSHL.c **** *
 747:Generated_Source\PSoC4/capsense_CSHL.c **** *******************************************************************************/
 748:Generated_Source\PSoC4/capsense_CSHL.c **** uint8 capsense_GetDiffCountData(uint32 sensor)
 749:Generated_Source\PSoC4/capsense_CSHL.c **** {
 250              		.loc 1 749 0
 251              		.cfi_startproc
 252              	.LVL24:
 750:Generated_Source\PSoC4/capsense_CSHL.c ****     return (capsense_sensorSignal[sensor]);
 253              		.loc 1 750 0
 254 0000 014B     		ldr	r3, .L23
 255 0002 1818     		add	r0, r3, r0
 256              	.LVL25:
 257 0004 007D     		ldrb	r0, [r0, #20]
 751:Generated_Source\PSoC4/capsense_CSHL.c **** }
 258              		.loc 1 751 0
 259              		@ sp needed
 260 0006 7047     		bx	lr
 261              	.L24:
 262              		.align	2
 263              	.L23:
 264 0008 00000000 		.word	.LANCHOR0
 265              		.cfi_endproc
 266              	.LFE45:
 267              		.size	capsense_GetDiffCountData, .-capsense_GetDiffCountData
 268              		.section	.text.capsense_SetDiffCountData,"ax",%progbits
 269              		.align	2
 270              		.global	capsense_SetDiffCountData
 271              		.code	16
ARM GAS  C:\Users\Mykola\AppData\Local\Temp\ccSL9DbN.s 			page 19


 272              		.thumb_func
 273              		.type	capsense_SetDiffCountData, %function
 274              	capsense_SetDiffCountData:
 275              	.LFB46:
 752:Generated_Source\PSoC4/capsense_CSHL.c **** 
 753:Generated_Source\PSoC4/capsense_CSHL.c **** 
 754:Generated_Source\PSoC4/capsense_CSHL.c **** /*******************************************************************************
 755:Generated_Source\PSoC4/capsense_CSHL.c **** * Function Name: capsense_SetDiffCountData
 756:Generated_Source\PSoC4/capsense_CSHL.c **** ********************************************************************************
 757:Generated_Source\PSoC4/capsense_CSHL.c **** *
 758:Generated_Source\PSoC4/capsense_CSHL.c **** * Summary:
 759:Generated_Source\PSoC4/capsense_CSHL.c **** *  This API writes the data value passed as an argument to the sensor signal array.
 760:Generated_Source\PSoC4/capsense_CSHL.c **** *
 761:Generated_Source\PSoC4/capsense_CSHL.c **** * Parameters:
 762:Generated_Source\PSoC4/capsense_CSHL.c **** *  sensor:  Sensor number.
 763:Generated_Source\PSoC4/capsense_CSHL.c **** *  value:   Sensor signal.
 764:Generated_Source\PSoC4/capsense_CSHL.c **** *
 765:Generated_Source\PSoC4/capsense_CSHL.c **** * Return:
 766:Generated_Source\PSoC4/capsense_CSHL.c **** *  None.
 767:Generated_Source\PSoC4/capsense_CSHL.c **** *
 768:Generated_Source\PSoC4/capsense_CSHL.c **** * Global Variables:
 769:Generated_Source\PSoC4/capsense_CSHL.c **** *  capsense_sensorSignal[] - the array with difference counts for sensors
 770:Generated_Source\PSoC4/capsense_CSHL.c **** *
 771:Generated_Source\PSoC4/capsense_CSHL.c **** * Side Effects:
 772:Generated_Source\PSoC4/capsense_CSHL.c **** *  None
 773:Generated_Source\PSoC4/capsense_CSHL.c **** *
 774:Generated_Source\PSoC4/capsense_CSHL.c **** *******************************************************************************/
 775:Generated_Source\PSoC4/capsense_CSHL.c **** void capsense_SetDiffCountData(uint32 sensor, uint8 value)
 776:Generated_Source\PSoC4/capsense_CSHL.c **** {
 276              		.loc 1 776 0
 277              		.cfi_startproc
 278              	.LVL26:
 777:Generated_Source\PSoC4/capsense_CSHL.c ****     capsense_sensorSignal[sensor] = value;
 279              		.loc 1 777 0
 280 0000 014B     		ldr	r3, .L26
 281 0002 1818     		add	r0, r3, r0
 282              	.LVL27:
 283 0004 0175     		strb	r1, [r0, #20]
 778:Generated_Source\PSoC4/capsense_CSHL.c **** }
 284              		.loc 1 778 0
 285              		@ sp needed
 286 0006 7047     		bx	lr
 287              	.L27:
 288              		.align	2
 289              	.L26:
 290 0008 00000000 		.word	.LANCHOR0
 291              		.cfi_endproc
 292              	.LFE46:
 293              		.size	capsense_SetDiffCountData, .-capsense_SetDiffCountData
 294              		.section	.text.capsense_GetFingerThreshold,"ax",%progbits
 295              		.align	2
 296              		.global	capsense_GetFingerThreshold
 297              		.code	16
 298              		.thumb_func
 299              		.type	capsense_GetFingerThreshold, %function
 300              	capsense_GetFingerThreshold:
 301              	.LFB47:
ARM GAS  C:\Users\Mykola\AppData\Local\Temp\ccSL9DbN.s 			page 20


 779:Generated_Source\PSoC4/capsense_CSHL.c **** 
 780:Generated_Source\PSoC4/capsense_CSHL.c **** 
 781:Generated_Source\PSoC4/capsense_CSHL.c **** /*******************************************************************************
 782:Generated_Source\PSoC4/capsense_CSHL.c **** * Function Name: capsense_GetFingerThreshold
 783:Generated_Source\PSoC4/capsense_CSHL.c **** ********************************************************************************
 784:Generated_Source\PSoC4/capsense_CSHL.c **** *
 785:Generated_Source\PSoC4/capsense_CSHL.c **** * Summary:
 786:Generated_Source\PSoC4/capsense_CSHL.c **** *  This function reads the finger threshold from the component.
 787:Generated_Source\PSoC4/capsense_CSHL.c **** *
 788:Generated_Source\PSoC4/capsense_CSHL.c **** * Parameters:
 789:Generated_Source\PSoC4/capsense_CSHL.c **** *  widget:  widget number.
 790:Generated_Source\PSoC4/capsense_CSHL.c **** *
 791:Generated_Source\PSoC4/capsense_CSHL.c **** * Return:
 792:Generated_Source\PSoC4/capsense_CSHL.c **** *  This API returns the finger threshold of the widget indicated by the argument.
 793:Generated_Source\PSoC4/capsense_CSHL.c **** *
 794:Generated_Source\PSoC4/capsense_CSHL.c **** * Global Variables:
 795:Generated_Source\PSoC4/capsense_CSHL.c **** *  capsense_fingerThreshold[] - This array contains the level of signal
 796:Generated_Source\PSoC4/capsense_CSHL.c **** *  for each widget that is determined if a finger is present on the widget.
 797:Generated_Source\PSoC4/capsense_CSHL.c **** *
 798:Generated_Source\PSoC4/capsense_CSHL.c **** * Side Effects:
 799:Generated_Source\PSoC4/capsense_CSHL.c **** *  None
 800:Generated_Source\PSoC4/capsense_CSHL.c **** *
 801:Generated_Source\PSoC4/capsense_CSHL.c **** *******************************************************************************/
 802:Generated_Source\PSoC4/capsense_CSHL.c **** uint8 capsense_GetFingerThreshold(uint32 widget)
 803:Generated_Source\PSoC4/capsense_CSHL.c **** {
 302              		.loc 1 803 0
 303              		.cfi_startproc
 304              	.LVL28:
 804:Generated_Source\PSoC4/capsense_CSHL.c ****     return(capsense_fingerThreshold[widget]);
 305              		.loc 1 804 0
 306 0000 014B     		ldr	r3, .L29
 307 0002 185C     		ldrb	r0, [r3, r0]
 308              	.LVL29:
 805:Generated_Source\PSoC4/capsense_CSHL.c **** }
 309              		.loc 1 805 0
 310              		@ sp needed
 311 0004 7047     		bx	lr
 312              	.L30:
 313 0006 C046     		.align	2
 314              	.L29:
 315 0008 00000000 		.word	capsense_fingerThreshold
 316              		.cfi_endproc
 317              	.LFE47:
 318              		.size	capsense_GetFingerThreshold, .-capsense_GetFingerThreshold
 319              		.section	.text.capsense_GetNoiseThreshold,"ax",%progbits
 320              		.align	2
 321              		.global	capsense_GetNoiseThreshold
 322              		.code	16
 323              		.thumb_func
 324              		.type	capsense_GetNoiseThreshold, %function
 325              	capsense_GetNoiseThreshold:
 326              	.LFB48:
 806:Generated_Source\PSoC4/capsense_CSHL.c **** 
 807:Generated_Source\PSoC4/capsense_CSHL.c **** 
 808:Generated_Source\PSoC4/capsense_CSHL.c **** /*******************************************************************************
 809:Generated_Source\PSoC4/capsense_CSHL.c **** * Function Name: capsense_GetNoiseThreshold
 810:Generated_Source\PSoC4/capsense_CSHL.c **** ********************************************************************************
ARM GAS  C:\Users\Mykola\AppData\Local\Temp\ccSL9DbN.s 			page 21


 811:Generated_Source\PSoC4/capsense_CSHL.c **** *
 812:Generated_Source\PSoC4/capsense_CSHL.c **** * Summary:
 813:Generated_Source\PSoC4/capsense_CSHL.c **** *  This function reads the noise threshold from the component.
 814:Generated_Source\PSoC4/capsense_CSHL.c **** *
 815:Generated_Source\PSoC4/capsense_CSHL.c **** * Parameters:
 816:Generated_Source\PSoC4/capsense_CSHL.c **** *  widget:  widget number.
 817:Generated_Source\PSoC4/capsense_CSHL.c **** *
 818:Generated_Source\PSoC4/capsense_CSHL.c **** * Return:
 819:Generated_Source\PSoC4/capsense_CSHL.c **** *  This API returns the noise threshold of the widget indicated by the argument.
 820:Generated_Source\PSoC4/capsense_CSHL.c **** *
 821:Generated_Source\PSoC4/capsense_CSHL.c **** * Global Variables:
 822:Generated_Source\PSoC4/capsense_CSHL.c **** *  capsense_noiseThreshold[] - This array contains the level of signal
 823:Generated_Source\PSoC4/capsense_CSHL.c **** *  for each widget that determines the level of noise in the capacitive scan.
 824:Generated_Source\PSoC4/capsense_CSHL.c **** *
 825:Generated_Source\PSoC4/capsense_CSHL.c **** * Side Effects:
 826:Generated_Source\PSoC4/capsense_CSHL.c **** *  None
 827:Generated_Source\PSoC4/capsense_CSHL.c **** *
 828:Generated_Source\PSoC4/capsense_CSHL.c **** *******************************************************************************/
 829:Generated_Source\PSoC4/capsense_CSHL.c **** uint8 capsense_GetNoiseThreshold(uint32 widget)
 830:Generated_Source\PSoC4/capsense_CSHL.c **** {
 327              		.loc 1 830 0
 328              		.cfi_startproc
 329              	.LVL30:
 831:Generated_Source\PSoC4/capsense_CSHL.c ****     return (capsense_noiseThreshold[widget]);
 330              		.loc 1 831 0
 331 0000 014B     		ldr	r3, .L32
 332 0002 185C     		ldrb	r0, [r3, r0]
 333              	.LVL31:
 832:Generated_Source\PSoC4/capsense_CSHL.c **** }
 334              		.loc 1 832 0
 335              		@ sp needed
 336 0004 7047     		bx	lr
 337              	.L33:
 338 0006 C046     		.align	2
 339              	.L32:
 340 0008 00000000 		.word	capsense_noiseThreshold
 341              		.cfi_endproc
 342              	.LFE48:
 343              		.size	capsense_GetNoiseThreshold, .-capsense_GetNoiseThreshold
 344              		.section	.text.capsense_GetFingerHysteresis,"ax",%progbits
 345              		.align	2
 346              		.global	capsense_GetFingerHysteresis
 347              		.code	16
 348              		.thumb_func
 349              		.type	capsense_GetFingerHysteresis, %function
 350              	capsense_GetFingerHysteresis:
 351              	.LFB49:
 833:Generated_Source\PSoC4/capsense_CSHL.c **** 
 834:Generated_Source\PSoC4/capsense_CSHL.c **** 
 835:Generated_Source\PSoC4/capsense_CSHL.c **** /*******************************************************************************
 836:Generated_Source\PSoC4/capsense_CSHL.c **** * Function Name: capsense_GetFingerHysteresis
 837:Generated_Source\PSoC4/capsense_CSHL.c **** ********************************************************************************
 838:Generated_Source\PSoC4/capsense_CSHL.c **** *
 839:Generated_Source\PSoC4/capsense_CSHL.c **** * Summary:
 840:Generated_Source\PSoC4/capsense_CSHL.c **** *  This function reads the Hysteresis value from the component.
 841:Generated_Source\PSoC4/capsense_CSHL.c **** *
 842:Generated_Source\PSoC4/capsense_CSHL.c **** * Parameters:
ARM GAS  C:\Users\Mykola\AppData\Local\Temp\ccSL9DbN.s 			page 22


 843:Generated_Source\PSoC4/capsense_CSHL.c **** *  widget:  widget number.
 844:Generated_Source\PSoC4/capsense_CSHL.c **** *
 845:Generated_Source\PSoC4/capsense_CSHL.c **** * Return:
 846:Generated_Source\PSoC4/capsense_CSHL.c **** *  This API returns the Hysteresis of the widget indicated by the argument.
 847:Generated_Source\PSoC4/capsense_CSHL.c **** *
 848:Generated_Source\PSoC4/capsense_CSHL.c **** * Global Variables:
 849:Generated_Source\PSoC4/capsense_CSHL.c **** *  capsense_hysteresis[] - This array contains the hysteresis value
 850:Generated_Source\PSoC4/capsense_CSHL.c **** *   for each widget.
 851:Generated_Source\PSoC4/capsense_CSHL.c **** *  capsense_widgetNumberSld - structure with dynamic sliders' parameters.
 852:Generated_Source\PSoC4/capsense_CSHL.c **** *
 853:Generated_Source\PSoC4/capsense_CSHL.c **** * Side Effects:
 854:Generated_Source\PSoC4/capsense_CSHL.c **** *  None
 855:Generated_Source\PSoC4/capsense_CSHL.c **** *
 856:Generated_Source\PSoC4/capsense_CSHL.c **** *******************************************************************************/
 857:Generated_Source\PSoC4/capsense_CSHL.c **** uint8 capsense_GetFingerHysteresis(uint32 widget)
 858:Generated_Source\PSoC4/capsense_CSHL.c **** {
 352              		.loc 1 858 0
 353              		.cfi_startproc
 354              	.LVL32:
 859:Generated_Source\PSoC4/capsense_CSHL.c ****     return(capsense_hysteresis[widget]);
 355              		.loc 1 859 0
 356 0000 014B     		ldr	r3, .L35
 357 0002 185C     		ldrb	r0, [r3, r0]
 358              	.LVL33:
 860:Generated_Source\PSoC4/capsense_CSHL.c **** }
 359              		.loc 1 860 0
 360              		@ sp needed
 361 0004 7047     		bx	lr
 362              	.L36:
 363 0006 C046     		.align	2
 364              	.L35:
 365 0008 00000000 		.word	capsense_hysteresis
 366              		.cfi_endproc
 367              	.LFE49:
 368              		.size	capsense_GetFingerHysteresis, .-capsense_GetFingerHysteresis
 369              		.section	.text.capsense_GetNegativeNoiseThreshold,"ax",%progbits
 370              		.align	2
 371              		.global	capsense_GetNegativeNoiseThreshold
 372              		.code	16
 373              		.thumb_func
 374              		.type	capsense_GetNegativeNoiseThreshold, %function
 375              	capsense_GetNegativeNoiseThreshold:
 376              	.LFB50:
 861:Generated_Source\PSoC4/capsense_CSHL.c **** 
 862:Generated_Source\PSoC4/capsense_CSHL.c **** 
 863:Generated_Source\PSoC4/capsense_CSHL.c **** /*******************************************************************************
 864:Generated_Source\PSoC4/capsense_CSHL.c **** * Function Name: capsense_GetNegativeNoiseThreshold
 865:Generated_Source\PSoC4/capsense_CSHL.c **** ********************************************************************************
 866:Generated_Source\PSoC4/capsense_CSHL.c **** *
 867:Generated_Source\PSoC4/capsense_CSHL.c **** * Summary:
 868:Generated_Source\PSoC4/capsense_CSHL.c **** *  This function reads the negative noise threshold from the component.
 869:Generated_Source\PSoC4/capsense_CSHL.c **** *
 870:Generated_Source\PSoC4/capsense_CSHL.c **** * Parameters:
 871:Generated_Source\PSoC4/capsense_CSHL.c **** *  None.
 872:Generated_Source\PSoC4/capsense_CSHL.c **** *
 873:Generated_Source\PSoC4/capsense_CSHL.c **** * Return Value:
 874:Generated_Source\PSoC4/capsense_CSHL.c **** *  This API returns the negative noise threshold
ARM GAS  C:\Users\Mykola\AppData\Local\Temp\ccSL9DbN.s 			page 23


 875:Generated_Source\PSoC4/capsense_CSHL.c **** *
 876:Generated_Source\PSoC4/capsense_CSHL.c **** * Global Variables:
 877:Generated_Source\PSoC4/capsense_CSHL.c **** *  capsense_negativeNoiseThreshold - This variable specifies the negative
 878:Generated_Source\PSoC4/capsense_CSHL.c **** *   difference between the raw count and baseline levels for Baseline resetting
 879:Generated_Source\PSoC4/capsense_CSHL.c **** *   to the raw count level.
 880:Generated_Source\PSoC4/capsense_CSHL.c **** *
 881:Generated_Source\PSoC4/capsense_CSHL.c **** * Side Effects:
 882:Generated_Source\PSoC4/capsense_CSHL.c **** *  None
 883:Generated_Source\PSoC4/capsense_CSHL.c **** *
 884:Generated_Source\PSoC4/capsense_CSHL.c **** *******************************************************************************/
 885:Generated_Source\PSoC4/capsense_CSHL.c **** uint8 capsense_GetNegativeNoiseThreshold(uint32 widget)
 886:Generated_Source\PSoC4/capsense_CSHL.c **** {
 377              		.loc 1 886 0
 378              		.cfi_startproc
 379              	.LVL34:
 887:Generated_Source\PSoC4/capsense_CSHL.c **** #if (capsense_TUNING_METHOD != capsense__TUNING_NONE)
 888:Generated_Source\PSoC4/capsense_CSHL.c ****     return(capsense_negativeNoiseThreshold[widget]);
 380              		.loc 1 888 0
 381 0000 014B     		ldr	r3, .L38
 382 0002 185C     		ldrb	r0, [r3, r0]
 383              	.LVL35:
 889:Generated_Source\PSoC4/capsense_CSHL.c **** #else
 890:Generated_Source\PSoC4/capsense_CSHL.c ****     return(capsense_NEGATIVE_NOISE_THRESHOLD);
 891:Generated_Source\PSoC4/capsense_CSHL.c **** #endif /* (capsense_TUNING_METHOD != capsense__TUNING_NONE) */
 892:Generated_Source\PSoC4/capsense_CSHL.c **** }
 384              		.loc 1 892 0
 385              		@ sp needed
 386 0004 7047     		bx	lr
 387              	.L39:
 388 0006 C046     		.align	2
 389              	.L38:
 390 0008 00000000 		.word	capsense_negativeNoiseThreshold
 391              		.cfi_endproc
 392              	.LFE50:
 393              		.size	capsense_GetNegativeNoiseThreshold, .-capsense_GetNegativeNoiseThreshold
 394              		.section	.text.capsense_SetFingerThreshold,"ax",%progbits
 395              		.align	2
 396              		.global	capsense_SetFingerThreshold
 397              		.code	16
 398              		.thumb_func
 399              		.type	capsense_SetFingerThreshold, %function
 400              	capsense_SetFingerThreshold:
 401              	.LFB51:
 893:Generated_Source\PSoC4/capsense_CSHL.c **** 
 894:Generated_Source\PSoC4/capsense_CSHL.c **** 
 895:Generated_Source\PSoC4/capsense_CSHL.c **** #if(capsense_TUNING_METHOD != capsense__TUNING_NONE)
 896:Generated_Source\PSoC4/capsense_CSHL.c ****     /*******************************************************************************
 897:Generated_Source\PSoC4/capsense_CSHL.c ****     * Function Name: capsense_SetFingerThreshold
 898:Generated_Source\PSoC4/capsense_CSHL.c ****     ********************************************************************************
 899:Generated_Source\PSoC4/capsense_CSHL.c ****     *
 900:Generated_Source\PSoC4/capsense_CSHL.c ****     * Summary:
 901:Generated_Source\PSoC4/capsense_CSHL.c ****     *  This API sets the finger threshold value for a widget.
 902:Generated_Source\PSoC4/capsense_CSHL.c ****     *
 903:Generated_Source\PSoC4/capsense_CSHL.c ****     * Parameters:
 904:Generated_Source\PSoC4/capsense_CSHL.c ****     *  sensorNumber:  widget index.
 905:Generated_Source\PSoC4/capsense_CSHL.c ****     *  value:  Finger threshold value for the widget.
 906:Generated_Source\PSoC4/capsense_CSHL.c ****     *
ARM GAS  C:\Users\Mykola\AppData\Local\Temp\ccSL9DbN.s 			page 24


 907:Generated_Source\PSoC4/capsense_CSHL.c ****     * Return Value:
 908:Generated_Source\PSoC4/capsense_CSHL.c ****     *  None
 909:Generated_Source\PSoC4/capsense_CSHL.c ****     *
 910:Generated_Source\PSoC4/capsense_CSHL.c ****     * Global Variables:
 911:Generated_Source\PSoC4/capsense_CSHL.c ****     *  capsense_fingerThreshold[] - This array contains the level of signal
 912:Generated_Source\PSoC4/capsense_CSHL.c ****     *   for each widget that determines if a finger is present on the widget.
 913:Generated_Source\PSoC4/capsense_CSHL.c ****     *
 914:Generated_Source\PSoC4/capsense_CSHL.c ****     * Side Effects:
 915:Generated_Source\PSoC4/capsense_CSHL.c ****     *  None
 916:Generated_Source\PSoC4/capsense_CSHL.c ****     *
 917:Generated_Source\PSoC4/capsense_CSHL.c ****     *******************************************************************************/
 918:Generated_Source\PSoC4/capsense_CSHL.c ****     void capsense_SetFingerThreshold(uint32 widget, uint8 value)
 919:Generated_Source\PSoC4/capsense_CSHL.c ****     {
 402              		.loc 1 919 0
 403              		.cfi_startproc
 404              	.LVL36:
 920:Generated_Source\PSoC4/capsense_CSHL.c ****         capsense_fingerThreshold[widget] = value;
 405              		.loc 1 920 0
 406 0000 014B     		ldr	r3, .L41
 407 0002 1954     		strb	r1, [r3, r0]
 921:Generated_Source\PSoC4/capsense_CSHL.c ****     }
 408              		.loc 1 921 0
 409              		@ sp needed
 410 0004 7047     		bx	lr
 411              	.L42:
 412 0006 C046     		.align	2
 413              	.L41:
 414 0008 00000000 		.word	capsense_fingerThreshold
 415              		.cfi_endproc
 416              	.LFE51:
 417              		.size	capsense_SetFingerThreshold, .-capsense_SetFingerThreshold
 418              		.section	.text.capsense_SetNoiseThreshold,"ax",%progbits
 419              		.align	2
 420              		.global	capsense_SetNoiseThreshold
 421              		.code	16
 422              		.thumb_func
 423              		.type	capsense_SetNoiseThreshold, %function
 424              	capsense_SetNoiseThreshold:
 425              	.LFB52:
 922:Generated_Source\PSoC4/capsense_CSHL.c **** 
 923:Generated_Source\PSoC4/capsense_CSHL.c **** 
 924:Generated_Source\PSoC4/capsense_CSHL.c ****     /*******************************************************************************
 925:Generated_Source\PSoC4/capsense_CSHL.c ****     * Function Name: capsense_SetNoiseThreshold
 926:Generated_Source\PSoC4/capsense_CSHL.c ****     ********************************************************************************
 927:Generated_Source\PSoC4/capsense_CSHL.c ****     *
 928:Generated_Source\PSoC4/capsense_CSHL.c ****     * Summary:
 929:Generated_Source\PSoC4/capsense_CSHL.c ****     *  This API sets the Noise Threshold value for each widget.
 930:Generated_Source\PSoC4/capsense_CSHL.c ****     *
 931:Generated_Source\PSoC4/capsense_CSHL.c ****     * Parameters:
 932:Generated_Source\PSoC4/capsense_CSHL.c ****     *  widget:  Sensor index number.
 933:Generated_Source\PSoC4/capsense_CSHL.c ****     *  value:   Noise Threshold value for widget.
 934:Generated_Source\PSoC4/capsense_CSHL.c ****     *
 935:Generated_Source\PSoC4/capsense_CSHL.c ****     * Return Value:
 936:Generated_Source\PSoC4/capsense_CSHL.c ****     *  None
 937:Generated_Source\PSoC4/capsense_CSHL.c ****     *
 938:Generated_Source\PSoC4/capsense_CSHL.c ****     * Global Variables:
 939:Generated_Source\PSoC4/capsense_CSHL.c ****     *  capsense_noiseThreshold[] - This array contains the level of signal
ARM GAS  C:\Users\Mykola\AppData\Local\Temp\ccSL9DbN.s 			page 25


 940:Generated_Source\PSoC4/capsense_CSHL.c ****     *   for each widget that determines the level of noise in the capacitive scan.
 941:Generated_Source\PSoC4/capsense_CSHL.c ****     *
 942:Generated_Source\PSoC4/capsense_CSHL.c ****     * Side Effects:
 943:Generated_Source\PSoC4/capsense_CSHL.c ****     *  None
 944:Generated_Source\PSoC4/capsense_CSHL.c ****     *
 945:Generated_Source\PSoC4/capsense_CSHL.c ****     *******************************************************************************/
 946:Generated_Source\PSoC4/capsense_CSHL.c ****     void capsense_SetNoiseThreshold(uint32 widget, uint8 value)
 947:Generated_Source\PSoC4/capsense_CSHL.c ****     {
 426              		.loc 1 947 0
 427              		.cfi_startproc
 428              	.LVL37:
 948:Generated_Source\PSoC4/capsense_CSHL.c ****         capsense_noiseThreshold[widget] = value;
 429              		.loc 1 948 0
 430 0000 014B     		ldr	r3, .L44
 431 0002 1954     		strb	r1, [r3, r0]
 949:Generated_Source\PSoC4/capsense_CSHL.c ****     }
 432              		.loc 1 949 0
 433              		@ sp needed
 434 0004 7047     		bx	lr
 435              	.L45:
 436 0006 C046     		.align	2
 437              	.L44:
 438 0008 00000000 		.word	capsense_noiseThreshold
 439              		.cfi_endproc
 440              	.LFE52:
 441              		.size	capsense_SetNoiseThreshold, .-capsense_SetNoiseThreshold
 442              		.section	.text.capsense_SetFingerHysteresis,"ax",%progbits
 443              		.align	2
 444              		.global	capsense_SetFingerHysteresis
 445              		.code	16
 446              		.thumb_func
 447              		.type	capsense_SetFingerHysteresis, %function
 448              	capsense_SetFingerHysteresis:
 449              	.LFB53:
 950:Generated_Source\PSoC4/capsense_CSHL.c **** 
 951:Generated_Source\PSoC4/capsense_CSHL.c **** 
 952:Generated_Source\PSoC4/capsense_CSHL.c ****     /*******************************************************************************
 953:Generated_Source\PSoC4/capsense_CSHL.c ****     * Function Name: capsense_SetFingerHysteresis
 954:Generated_Source\PSoC4/capsense_CSHL.c ****     ********************************************************************************
 955:Generated_Source\PSoC4/capsense_CSHL.c ****     *
 956:Generated_Source\PSoC4/capsense_CSHL.c ****     * Summary:
 957:Generated_Source\PSoC4/capsense_CSHL.c ****     *  This API sets the Hysteresis value of a widget
 958:Generated_Source\PSoC4/capsense_CSHL.c ****     *
 959:Generated_Source\PSoC4/capsense_CSHL.c ****     * Parameters:
 960:Generated_Source\PSoC4/capsense_CSHL.c ****     *  value:  Hysteresis value for widgets.
 961:Generated_Source\PSoC4/capsense_CSHL.c ****     *  widget:  widget number
 962:Generated_Source\PSoC4/capsense_CSHL.c ****     *
 963:Generated_Source\PSoC4/capsense_CSHL.c ****     * Return Value:
 964:Generated_Source\PSoC4/capsense_CSHL.c ****     *  None
 965:Generated_Source\PSoC4/capsense_CSHL.c ****     *
 966:Generated_Source\PSoC4/capsense_CSHL.c ****     * Global Variables:
 967:Generated_Source\PSoC4/capsense_CSHL.c ****     *  capsense_hysteresis[] - This array contains the hysteresis value for each widget.
 968:Generated_Source\PSoC4/capsense_CSHL.c ****     *  capsense_widgetNumberSld - structure with dynamic sliders' parameters.
 969:Generated_Source\PSoC4/capsense_CSHL.c ****     *
 970:Generated_Source\PSoC4/capsense_CSHL.c ****     * Side Effects:
 971:Generated_Source\PSoC4/capsense_CSHL.c ****     *  None
 972:Generated_Source\PSoC4/capsense_CSHL.c ****     *
ARM GAS  C:\Users\Mykola\AppData\Local\Temp\ccSL9DbN.s 			page 26


 973:Generated_Source\PSoC4/capsense_CSHL.c ****     *******************************************************************************/
 974:Generated_Source\PSoC4/capsense_CSHL.c ****     void capsense_SetFingerHysteresis(uint32 widget, uint8 value)
 975:Generated_Source\PSoC4/capsense_CSHL.c ****     {
 450              		.loc 1 975 0
 451              		.cfi_startproc
 452              	.LVL38:
 976:Generated_Source\PSoC4/capsense_CSHL.c ****         capsense_hysteresis[widget] = value;
 453              		.loc 1 976 0
 454 0000 014B     		ldr	r3, .L47
 455 0002 1954     		strb	r1, [r3, r0]
 977:Generated_Source\PSoC4/capsense_CSHL.c ****     }
 456              		.loc 1 977 0
 457              		@ sp needed
 458 0004 7047     		bx	lr
 459              	.L48:
 460 0006 C046     		.align	2
 461              	.L47:
 462 0008 00000000 		.word	capsense_hysteresis
 463              		.cfi_endproc
 464              	.LFE53:
 465              		.size	capsense_SetFingerHysteresis, .-capsense_SetFingerHysteresis
 466              		.section	.text.capsense_SetNegativeNoiseThreshold,"ax",%progbits
 467              		.align	2
 468              		.global	capsense_SetNegativeNoiseThreshold
 469              		.code	16
 470              		.thumb_func
 471              		.type	capsense_SetNegativeNoiseThreshold, %function
 472              	capsense_SetNegativeNoiseThreshold:
 473              	.LFB54:
 978:Generated_Source\PSoC4/capsense_CSHL.c **** 
 979:Generated_Source\PSoC4/capsense_CSHL.c **** 
 980:Generated_Source\PSoC4/capsense_CSHL.c ****     /*******************************************************************************
 981:Generated_Source\PSoC4/capsense_CSHL.c ****     * Function Name: capsense_SetNegativeNoiseThreshold
 982:Generated_Source\PSoC4/capsense_CSHL.c ****     ********************************************************************************
 983:Generated_Source\PSoC4/capsense_CSHL.c ****     *
 984:Generated_Source\PSoC4/capsense_CSHL.c ****     * Summary:
 985:Generated_Source\PSoC4/capsense_CSHL.c ****     *  This API sets the Negative Noise Threshold value of a widget
 986:Generated_Source\PSoC4/capsense_CSHL.c ****     *
 987:Generated_Source\PSoC4/capsense_CSHL.c ****     * Parameters:
 988:Generated_Source\PSoC4/capsense_CSHL.c ****     *  value:  Negative Noise Threshold value for widgets.
 989:Generated_Source\PSoC4/capsense_CSHL.c ****     *  widget: widget number
 990:Generated_Source\PSoC4/capsense_CSHL.c ****     *
 991:Generated_Source\PSoC4/capsense_CSHL.c ****     * Return Value:
 992:Generated_Source\PSoC4/capsense_CSHL.c ****     *  None
 993:Generated_Source\PSoC4/capsense_CSHL.c ****     *
 994:Generated_Source\PSoC4/capsense_CSHL.c ****     * Global Variables:
 995:Generated_Source\PSoC4/capsense_CSHL.c ****     *  capsense_negativeNoiseThreshold  - This parameter specifies the negative
 996:Generated_Source\PSoC4/capsense_CSHL.c ****     *   difference between the raw count and baseline levels for Baseline resetting to
 997:Generated_Source\PSoC4/capsense_CSHL.c ****     *   the raw count level.
 998:Generated_Source\PSoC4/capsense_CSHL.c ****     *
 999:Generated_Source\PSoC4/capsense_CSHL.c ****     * Side Effects:
1000:Generated_Source\PSoC4/capsense_CSHL.c ****     *  None
1001:Generated_Source\PSoC4/capsense_CSHL.c ****     *
1002:Generated_Source\PSoC4/capsense_CSHL.c ****     *******************************************************************************/
1003:Generated_Source\PSoC4/capsense_CSHL.c ****     void capsense_SetNegativeNoiseThreshold(uint32 widget, uint8 value)
1004:Generated_Source\PSoC4/capsense_CSHL.c ****     {
 474              		.loc 1 1004 0
ARM GAS  C:\Users\Mykola\AppData\Local\Temp\ccSL9DbN.s 			page 27


 475              		.cfi_startproc
 476              	.LVL39:
1005:Generated_Source\PSoC4/capsense_CSHL.c ****         capsense_negativeNoiseThreshold[widget] = value;
 477              		.loc 1 1005 0
 478 0000 014B     		ldr	r3, .L50
 479 0002 1954     		strb	r1, [r3, r0]
1006:Generated_Source\PSoC4/capsense_CSHL.c ****     }
 480              		.loc 1 1006 0
 481              		@ sp needed
 482 0004 7047     		bx	lr
 483              	.L51:
 484 0006 C046     		.align	2
 485              	.L50:
 486 0008 00000000 		.word	capsense_negativeNoiseThreshold
 487              		.cfi_endproc
 488              	.LFE54:
 489              		.size	capsense_SetNegativeNoiseThreshold, .-capsense_SetNegativeNoiseThreshold
 490              		.section	.text.capsense_SetDebounce,"ax",%progbits
 491              		.align	2
 492              		.global	capsense_SetDebounce
 493              		.code	16
 494              		.thumb_func
 495              		.type	capsense_SetDebounce, %function
 496              	capsense_SetDebounce:
 497              	.LFB55:
1007:Generated_Source\PSoC4/capsense_CSHL.c **** 
1008:Generated_Source\PSoC4/capsense_CSHL.c **** 
1009:Generated_Source\PSoC4/capsense_CSHL.c ****     /*******************************************************************************
1010:Generated_Source\PSoC4/capsense_CSHL.c ****     * Function Name: capsense_SetDebounce
1011:Generated_Source\PSoC4/capsense_CSHL.c ****     ********************************************************************************
1012:Generated_Source\PSoC4/capsense_CSHL.c ****     *
1013:Generated_Source\PSoC4/capsense_CSHL.c ****     * Summary:
1014:Generated_Source\PSoC4/capsense_CSHL.c ****     *  This API sets the debounce value for a widget.
1015:Generated_Source\PSoC4/capsense_CSHL.c ****     *
1016:Generated_Source\PSoC4/capsense_CSHL.c ****     * Parameters:
1017:Generated_Source\PSoC4/capsense_CSHL.c ****     *  value:  Debounce value for widget.
1018:Generated_Source\PSoC4/capsense_CSHL.c ****     *  widget: widget index.
1019:Generated_Source\PSoC4/capsense_CSHL.c ****     *
1020:Generated_Source\PSoC4/capsense_CSHL.c ****     * Return Value:
1021:Generated_Source\PSoC4/capsense_CSHL.c ****     *  None
1022:Generated_Source\PSoC4/capsense_CSHL.c ****     *
1023:Generated_Source\PSoC4/capsense_CSHL.c ****     * Global Variables:
1024:Generated_Source\PSoC4/capsense_CSHL.c ****     *  capsense_debounce[] - This array contains the debounce value for each widget.
1025:Generated_Source\PSoC4/capsense_CSHL.c ****     *  capsense_widgetNumberSld - structure with dynamic sliders' parameters.
1026:Generated_Source\PSoC4/capsense_CSHL.c ****     *
1027:Generated_Source\PSoC4/capsense_CSHL.c ****     * Side Effects:
1028:Generated_Source\PSoC4/capsense_CSHL.c ****     *  None
1029:Generated_Source\PSoC4/capsense_CSHL.c ****     *
1030:Generated_Source\PSoC4/capsense_CSHL.c ****     *******************************************************************************/
1031:Generated_Source\PSoC4/capsense_CSHL.c ****     void capsense_SetDebounce(uint32 widget, uint8 value)
1032:Generated_Source\PSoC4/capsense_CSHL.c ****     {
 498              		.loc 1 1032 0
 499              		.cfi_startproc
 500              	.LVL40:
1033:Generated_Source\PSoC4/capsense_CSHL.c ****         capsense_debounce[widget] = value;
 501              		.loc 1 1033 0
 502 0000 014B     		ldr	r3, .L53
ARM GAS  C:\Users\Mykola\AppData\Local\Temp\ccSL9DbN.s 			page 28


 503 0002 1954     		strb	r1, [r3, r0]
1034:Generated_Source\PSoC4/capsense_CSHL.c ****     }
 504              		.loc 1 1034 0
 505              		@ sp needed
 506 0004 7047     		bx	lr
 507              	.L54:
 508 0006 C046     		.align	2
 509              	.L53:
 510 0008 00000000 		.word	.LANCHOR1
 511              		.cfi_endproc
 512              	.LFE55:
 513              		.size	capsense_SetDebounce, .-capsense_SetDebounce
 514              		.section	.text.capsense_SetLowBaselineReset,"ax",%progbits
 515              		.align	2
 516              		.global	capsense_SetLowBaselineReset
 517              		.code	16
 518              		.thumb_func
 519              		.type	capsense_SetLowBaselineReset, %function
 520              	capsense_SetLowBaselineReset:
 521              	.LFB56:
1035:Generated_Source\PSoC4/capsense_CSHL.c **** 
1036:Generated_Source\PSoC4/capsense_CSHL.c **** 
1037:Generated_Source\PSoC4/capsense_CSHL.c ****     /*******************************************************************************
1038:Generated_Source\PSoC4/capsense_CSHL.c ****     * Function Name: capsense_SetLowBaselineReset
1039:Generated_Source\PSoC4/capsense_CSHL.c ****     ********************************************************************************
1040:Generated_Source\PSoC4/capsense_CSHL.c ****     *
1041:Generated_Source\PSoC4/capsense_CSHL.c ****     * Summary:
1042:Generated_Source\PSoC4/capsense_CSHL.c ****     *  This API sets the low baseline reset threshold value for the sensor.
1043:Generated_Source\PSoC4/capsense_CSHL.c ****     *
1044:Generated_Source\PSoC4/capsense_CSHL.c ****     * Parameters:
1045:Generated_Source\PSoC4/capsense_CSHL.c ****     *  value: low baseline reset threshold value.
1046:Generated_Source\PSoC4/capsense_CSHL.c ****     *  sensor: Sensor index.
1047:Generated_Source\PSoC4/capsense_CSHL.c ****     *
1048:Generated_Source\PSoC4/capsense_CSHL.c ****     * Return Value:
1049:Generated_Source\PSoC4/capsense_CSHL.c ****     *  None
1050:Generated_Source\PSoC4/capsense_CSHL.c ****     *
1051:Generated_Source\PSoC4/capsense_CSHL.c ****     * Global Variables:
1052:Generated_Source\PSoC4/capsense_CSHL.c ****     *  capsense_lowBaselineReset[] - This array contains the Baseline update
1053:Generated_Source\PSoC4/capsense_CSHL.c ****     *  threshold value for each sensor.
1054:Generated_Source\PSoC4/capsense_CSHL.c ****     *
1055:Generated_Source\PSoC4/capsense_CSHL.c ****     * Side Effects:
1056:Generated_Source\PSoC4/capsense_CSHL.c ****     *  None
1057:Generated_Source\PSoC4/capsense_CSHL.c ****     *
1058:Generated_Source\PSoC4/capsense_CSHL.c ****     *******************************************************************************/
1059:Generated_Source\PSoC4/capsense_CSHL.c ****     void capsense_SetLowBaselineReset(uint32 sensor, uint8 value)
1060:Generated_Source\PSoC4/capsense_CSHL.c ****     {
 522              		.loc 1 1060 0
 523              		.cfi_startproc
 524              	.LVL41:
1061:Generated_Source\PSoC4/capsense_CSHL.c ****         capsense_lowBaselineReset[sensor] = value;
 525              		.loc 1 1061 0
 526 0000 014B     		ldr	r3, .L56
 527 0002 1818     		add	r0, r3, r0
 528              	.LVL42:
 529 0004 0171     		strb	r1, [r0, #4]
1062:Generated_Source\PSoC4/capsense_CSHL.c ****     }
 530              		.loc 1 1062 0
ARM GAS  C:\Users\Mykola\AppData\Local\Temp\ccSL9DbN.s 			page 29


 531              		@ sp needed
 532 0006 7047     		bx	lr
 533              	.L57:
 534              		.align	2
 535              	.L56:
 536 0008 00000000 		.word	.LANCHOR1
 537              		.cfi_endproc
 538              	.LFE56:
 539              		.size	capsense_SetLowBaselineReset, .-capsense_SetLowBaselineReset
 540              		.section	.text.capsense_CheckIsSensorActive,"ax",%progbits
 541              		.align	2
 542              		.global	capsense_CheckIsSensorActive
 543              		.code	16
 544              		.thumb_func
 545              		.type	capsense_CheckIsSensorActive, %function
 546              	capsense_CheckIsSensorActive:
 547              	.LFB57:
1063:Generated_Source\PSoC4/capsense_CSHL.c **** #endif /* (capsense_TUNING_METHOD != capsense__TUNING_NONE) */
1064:Generated_Source\PSoC4/capsense_CSHL.c **** 
1065:Generated_Source\PSoC4/capsense_CSHL.c **** 
1066:Generated_Source\PSoC4/capsense_CSHL.c **** /*******************************************************************************
1067:Generated_Source\PSoC4/capsense_CSHL.c **** * Function Name: capsense_CheckIsSensorActive
1068:Generated_Source\PSoC4/capsense_CSHL.c **** ********************************************************************************
1069:Generated_Source\PSoC4/capsense_CSHL.c **** *
1070:Generated_Source\PSoC4/capsense_CSHL.c **** * Summary:
1071:Generated_Source\PSoC4/capsense_CSHL.c **** *  Compares the capsense_sensorSignal[sensor] array element to the finger
1072:Generated_Source\PSoC4/capsense_CSHL.c **** *  threshold of the widget it belongs to. The hysteresis and debounce are taken into
1073:Generated_Source\PSoC4/capsense_CSHL.c **** *  account. The hysteresis is added or subtracted from the finger threshold
1074:Generated_Source\PSoC4/capsense_CSHL.c **** *  based on whether the sensor is currently active.
1075:Generated_Source\PSoC4/capsense_CSHL.c **** *  If the sensor is active, the threshold is lowered by the hysteresis amount.
1076:Generated_Source\PSoC4/capsense_CSHL.c **** *  If the sensor is inactive, the threshold is raised by the hysteresis amount.
1077:Generated_Source\PSoC4/capsense_CSHL.c **** *  The debounce counter is added to the sensor active transition.
1078:Generated_Source\PSoC4/capsense_CSHL.c **** *  This function updates the capsense_sensorOnMask[] array element.
1079:Generated_Source\PSoC4/capsense_CSHL.c **** *
1080:Generated_Source\PSoC4/capsense_CSHL.c **** * Parameters:
1081:Generated_Source\PSoC4/capsense_CSHL.c **** *  sensor:  Sensor number.
1082:Generated_Source\PSoC4/capsense_CSHL.c **** *
1083:Generated_Source\PSoC4/capsense_CSHL.c **** * Return:
1084:Generated_Source\PSoC4/capsense_CSHL.c **** *  Returns sensor state 1 if active, 0 if not active.
1085:Generated_Source\PSoC4/capsense_CSHL.c **** *
1086:Generated_Source\PSoC4/capsense_CSHL.c **** * Global Variables:
1087:Generated_Source\PSoC4/capsense_CSHL.c **** *  capsense_sensorSignal[] - used to store the difference between
1088:Generated_Source\PSoC4/capsense_CSHL.c **** *  the current value of raw data and a previous value of the baseline.
1089:Generated_Source\PSoC4/capsense_CSHL.c **** *  capsense_debounceCounter[]   - used to store the current debounce
1090:Generated_Source\PSoC4/capsense_CSHL.c **** *  counter of the sensor. the widget which have this parameter are buttons, matrix
1091:Generated_Source\PSoC4/capsense_CSHL.c **** *  buttons, proximity, and guard. All other widgets don't have the  debounce parameter
1092:Generated_Source\PSoC4/capsense_CSHL.c **** *  and use the last element of this array with value 0 (it means no debounce).
1093:Generated_Source\PSoC4/capsense_CSHL.c **** *  capsense_sensorOnMask[] - used to store the sensors on/off state.
1094:Generated_Source\PSoC4/capsense_CSHL.c **** *  capsense_sensorOnMask[0] contains the masked bits for sensors
1095:Generated_Source\PSoC4/capsense_CSHL.c **** *   0 through 7 (sensor 0 is bit 0, sensor 1 is bit 1).
1096:Generated_Source\PSoC4/capsense_CSHL.c **** *  capsense_sensorEnableMask[1] contains the masked bits for
1097:Generated_Source\PSoC4/capsense_CSHL.c **** *  sensors 8 through 15 (if needed), and so on.
1098:Generated_Source\PSoC4/capsense_CSHL.c **** *  0 - sensor is inactive.
1099:Generated_Source\PSoC4/capsense_CSHL.c **** *  1 - sensor is active.
1100:Generated_Source\PSoC4/capsense_CSHL.c **** *
1101:Generated_Source\PSoC4/capsense_CSHL.c **** * Side Effects:
1102:Generated_Source\PSoC4/capsense_CSHL.c **** *  None
ARM GAS  C:\Users\Mykola\AppData\Local\Temp\ccSL9DbN.s 			page 30


1103:Generated_Source\PSoC4/capsense_CSHL.c **** *
1104:Generated_Source\PSoC4/capsense_CSHL.c **** *******************************************************************************/
1105:Generated_Source\PSoC4/capsense_CSHL.c **** uint32 capsense_CheckIsSensorActive(uint32 sensor)
1106:Generated_Source\PSoC4/capsense_CSHL.c **** {
 548              		.loc 1 1106 0
 549              		.cfi_startproc
 550              	.LVL43:
 551 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 552              		.cfi_def_cfa_offset 24
 553              		.cfi_offset 3, -24
 554              		.cfi_offset 4, -20
 555              		.cfi_offset 5, -16
 556              		.cfi_offset 6, -12
 557              		.cfi_offset 7, -8
 558              		.cfi_offset 14, -4
 559 0002 041C     		mov	r4, r0
1107:Generated_Source\PSoC4/capsense_CSHL.c ****     uint8 widget;
1108:Generated_Source\PSoC4/capsense_CSHL.c ****     uint8 debounce;
1109:Generated_Source\PSoC4/capsense_CSHL.c ****     uint8 debounceIndex;
1110:Generated_Source\PSoC4/capsense_CSHL.c **** 
1111:Generated_Source\PSoC4/capsense_CSHL.c ****     uint8 fingerThreshold;
1112:Generated_Source\PSoC4/capsense_CSHL.c ****     uint8 hysteresis;
1113:Generated_Source\PSoC4/capsense_CSHL.c ****     static uint8 capsense_debounceCounter[] = {
1114:Generated_Source\PSoC4/capsense_CSHL.c ****     0u, 
1115:Generated_Source\PSoC4/capsense_CSHL.c **** };
1116:Generated_Source\PSoC4/capsense_CSHL.c **** 
1117:Generated_Source\PSoC4/capsense_CSHL.c **** 
1118:Generated_Source\PSoC4/capsense_CSHL.c **** 
1119:Generated_Source\PSoC4/capsense_CSHL.c ****     /* Prepare to find debounce counter index */
1120:Generated_Source\PSoC4/capsense_CSHL.c ****     widget = capsense_widgetNumber[sensor];
 560              		.loc 1 1120 0
 561 0004 1F4B     		ldr	r3, .L63
 562 0006 1B5C     		ldrb	r3, [r3, r0]
 563              	.LVL44:
1121:Generated_Source\PSoC4/capsense_CSHL.c **** 
1122:Generated_Source\PSoC4/capsense_CSHL.c ****     fingerThreshold = capsense_fingerThreshold[widget];
 564              		.loc 1 1122 0
 565 0008 1F4A     		ldr	r2, .L63+4
 566 000a D65C     		ldrb	r6, [r2, r3]
 567              	.LVL45:
1123:Generated_Source\PSoC4/capsense_CSHL.c ****     hysteresis = capsense_hysteresis[widget];
 568              		.loc 1 1123 0
 569 000c 1F4A     		ldr	r2, .L63+8
 570 000e D55C     		ldrb	r5, [r2, r3]
 571              	.LVL46:
1124:Generated_Source\PSoC4/capsense_CSHL.c ****     debounce = capsense_debounce[widget];
 572              		.loc 1 1124 0
 573 0010 1F4A     		ldr	r2, .L63+12
 574 0012 D75C     		ldrb	r7, [r2, r3]
 575              	.LVL47:
1125:Generated_Source\PSoC4/capsense_CSHL.c **** 
1126:Generated_Source\PSoC4/capsense_CSHL.c ****         debounceIndex = capsense_UNUSED_DEBOUNCE_COUNTER_INDEX;
1127:Generated_Source\PSoC4/capsense_CSHL.c ****     capsense_debounceCounter[debounceIndex] = 1u;
 576              		.loc 1 1127 0
 577 0014 1F48     		ldr	r0, .L63+16
 578              	.LVL48:
 579 0016 0123     		mov	r3, #1
ARM GAS  C:\Users\Mykola\AppData\Local\Temp\ccSL9DbN.s 			page 31


 580              	.LVL49:
 581 0018 0377     		strb	r3, [r0, #28]
1128:Generated_Source\PSoC4/capsense_CSHL.c **** 
1129:Generated_Source\PSoC4/capsense_CSHL.c **** 
1130:Generated_Source\PSoC4/capsense_CSHL.c ****     /* Was on */
1131:Generated_Source\PSoC4/capsense_CSHL.c ****     if (0u != capsense_GetBitValue(capsense_sensorOnMask, sensor))
 582              		.loc 1 1131 0
 583 001a 2030     		add	r0, r0, #32
 584 001c 211C     		mov	r1, r4
 585 001e FFF7FEFF 		bl	capsense_GetBitValue
 586              	.LVL50:
 587 0022 0028     		cmp	r0, #0
 588 0024 0ED0     		beq	.L59
1132:Generated_Source\PSoC4/capsense_CSHL.c ****     {
1133:Generated_Source\PSoC4/capsense_CSHL.c ****         /* Hysteresis minus */
1134:Generated_Source\PSoC4/capsense_CSHL.c ****         if (capsense_sensorSignal[sensor] < (fingerThreshold - hysteresis))
 589              		.loc 1 1134 0
 590 0026 1B4B     		ldr	r3, .L63+16
 591 0028 1B19     		add	r3, r3, r4
 592 002a 1B7D     		ldrb	r3, [r3, #20]
 593 002c 751B     		sub	r5, r6, r5
 594              	.LVL51:
 595 002e AB42     		cmp	r3, r5
 596 0030 1EDA     		bge	.L60
1135:Generated_Source\PSoC4/capsense_CSHL.c ****         {
1136:Generated_Source\PSoC4/capsense_CSHL.c ****             capsense_SetBitValue(capsense_sensorOnMask, sensor, 0u);
 597              		.loc 1 1136 0
 598 0032 184D     		ldr	r5, .L63+16
 599 0034 281C     		mov	r0, r5
 600 0036 2030     		add	r0, r0, #32
 601 0038 211C     		mov	r1, r4
 602 003a 0022     		mov	r2, #0
 603 003c FFF7FEFF 		bl	capsense_SetBitValue
 604              	.LVL52:
1137:Generated_Source\PSoC4/capsense_CSHL.c ****             /* Sensor inactive - reset Debounce counter */
1138:Generated_Source\PSoC4/capsense_CSHL.c ****             capsense_debounceCounter[debounceIndex] = debounce;
 605              		.loc 1 1138 0
 606 0040 2F77     		strb	r7, [r5, #28]
 607 0042 15E0     		b	.L60
 608              	.LVL53:
 609              	.L59:
1139:Generated_Source\PSoC4/capsense_CSHL.c ****         }
1140:Generated_Source\PSoC4/capsense_CSHL.c ****     }
1141:Generated_Source\PSoC4/capsense_CSHL.c ****     else    /* Was off */
1142:Generated_Source\PSoC4/capsense_CSHL.c ****     {
1143:Generated_Source\PSoC4/capsense_CSHL.c ****         /* Hysteresis plus */
1144:Generated_Source\PSoC4/capsense_CSHL.c ****         if (capsense_sensorSignal[sensor] >= (fingerThreshold + hysteresis))
 610              		.loc 1 1144 0
 611 0044 134B     		ldr	r3, .L63+16
 612 0046 1B19     		add	r3, r3, r4
 613 0048 1B7D     		ldrb	r3, [r3, #20]
 614 004a 7519     		add	r5, r6, r5
 615              	.LVL54:
 616 004c AB42     		cmp	r3, r5
 617 004e 0DDB     		blt	.L61
1145:Generated_Source\PSoC4/capsense_CSHL.c ****         {
1146:Generated_Source\PSoC4/capsense_CSHL.c ****             capsense_debounceCounter[debounceIndex]--;
ARM GAS  C:\Users\Mykola\AppData\Local\Temp\ccSL9DbN.s 			page 32


 618              		.loc 1 1146 0
 619 0050 104A     		ldr	r2, .L63+16
 620 0052 137F     		ldrb	r3, [r2, #28]
 621 0054 013B     		sub	r3, r3, #1
 622 0056 DBB2     		uxtb	r3, r3
 623 0058 1377     		strb	r3, [r2, #28]
1147:Generated_Source\PSoC4/capsense_CSHL.c ****             /* Sensor active, decrement debounce counter */
1148:Generated_Source\PSoC4/capsense_CSHL.c ****             if(capsense_debounceCounter[debounceIndex] == 0u)
 624              		.loc 1 1148 0
 625 005a 002B     		cmp	r3, #0
 626 005c 08D1     		bne	.L60
1149:Generated_Source\PSoC4/capsense_CSHL.c ****             {
1150:Generated_Source\PSoC4/capsense_CSHL.c ****                 capsense_SetBitValue(capsense_sensorOnMask, sensor, 1u);
 627              		.loc 1 1150 0
 628 005e 101C     		mov	r0, r2
 629 0060 2030     		add	r0, r0, #32
 630 0062 211C     		mov	r1, r4
 631 0064 0122     		mov	r2, #1
 632 0066 FFF7FEFF 		bl	capsense_SetBitValue
 633              	.LVL55:
 634 006a 01E0     		b	.L60
 635              	.L61:
1151:Generated_Source\PSoC4/capsense_CSHL.c ****             }
1152:Generated_Source\PSoC4/capsense_CSHL.c ****         }
1153:Generated_Source\PSoC4/capsense_CSHL.c ****         else
1154:Generated_Source\PSoC4/capsense_CSHL.c ****         {
1155:Generated_Source\PSoC4/capsense_CSHL.c ****             /* Sensor inactive - reset Debounce counter */
1156:Generated_Source\PSoC4/capsense_CSHL.c ****             capsense_debounceCounter[debounceIndex] = debounce;
 636              		.loc 1 1156 0
 637 006c 094B     		ldr	r3, .L63+16
 638 006e 1F77     		strb	r7, [r3, #28]
 639              	.L60:
1157:Generated_Source\PSoC4/capsense_CSHL.c ****         }
1158:Generated_Source\PSoC4/capsense_CSHL.c ****     }
1159:Generated_Source\PSoC4/capsense_CSHL.c **** 
1160:Generated_Source\PSoC4/capsense_CSHL.c ****     return ((uint32)((0u != capsense_GetBitValue(capsense_sensorOnMask, sensor)) ? 1u : 0u));
 640              		.loc 1 1160 0
 641 0070 0848     		ldr	r0, .L63+16
 642 0072 2030     		add	r0, r0, #32
 643 0074 211C     		mov	r1, r4
 644 0076 FFF7FEFF 		bl	capsense_GetBitValue
 645              	.LVL56:
 646 007a 0028     		cmp	r0, #0
 647 007c 00D0     		beq	.L62
 648 007e 0120     		mov	r0, #1
 649              	.L62:
1161:Generated_Source\PSoC4/capsense_CSHL.c **** }
 650              		.loc 1 1161 0 discriminator 4
 651              		@ sp needed
 652              	.LVL57:
 653              	.LVL58:
 654              	.LVL59:
 655 0080 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 656              	.L64:
 657 0082 C046     		.align	2
 658              	.L63:
 659 0084 00000000 		.word	capsense_widgetNumber
ARM GAS  C:\Users\Mykola\AppData\Local\Temp\ccSL9DbN.s 			page 33


 660 0088 00000000 		.word	capsense_fingerThreshold
 661 008c 00000000 		.word	capsense_hysteresis
 662 0090 00000000 		.word	.LANCHOR1
 663 0094 00000000 		.word	.LANCHOR0
 664              		.cfi_endproc
 665              	.LFE57:
 666              		.size	capsense_CheckIsSensorActive, .-capsense_CheckIsSensorActive
 667              		.section	.text.capsense_CheckIsWidgetActive,"ax",%progbits
 668              		.align	2
 669              		.global	capsense_CheckIsWidgetActive
 670              		.code	16
 671              		.thumb_func
 672              		.type	capsense_CheckIsWidgetActive, %function
 673              	capsense_CheckIsWidgetActive:
 674              	.LFB58:
1162:Generated_Source\PSoC4/capsense_CSHL.c **** 
1163:Generated_Source\PSoC4/capsense_CSHL.c **** 
1164:Generated_Source\PSoC4/capsense_CSHL.c **** /*******************************************************************************
1165:Generated_Source\PSoC4/capsense_CSHL.c **** * Function Name: capsense_CheckIsWidgetActive
1166:Generated_Source\PSoC4/capsense_CSHL.c **** ********************************************************************************
1167:Generated_Source\PSoC4/capsense_CSHL.c **** *
1168:Generated_Source\PSoC4/capsense_CSHL.c **** * Summary:
1169:Generated_Source\PSoC4/capsense_CSHL.c **** *  Compares the CapSense_sensorSignal[] array element to the finger threshold of
1170:Generated_Source\PSoC4/capsense_CSHL.c **** * the widget it belongs to. The hysteresis and debounce are taken into account.
1171:Generated_Source\PSoC4/capsense_CSHL.c **** * The hysteresis is added or subtracted from the finger threshold based on whether
1172:Generated_Source\PSoC4/capsense_CSHL.c **** *  the sensor is currently active. If the sensor is active, the threshold is
1173:Generated_Source\PSoC4/capsense_CSHL.c **** *  lowered by the hysteresis amount. If the sensor is inactive, the threshold
1174:Generated_Source\PSoC4/capsense_CSHL.c **** *  is raised by the hysteresis amount.
1175:Generated_Source\PSoC4/capsense_CSHL.c **** * The debounce counter added to the sensor active transition.
1176:Generated_Source\PSoC4/capsense_CSHL.c **** * This function updates CapSense_sensorOnMask[] array element
1177:Generated_Source\PSoC4/capsense_CSHL.c **** *
1178:Generated_Source\PSoC4/capsense_CSHL.c **** * Parameters:
1179:Generated_Source\PSoC4/capsense_CSHL.c **** *  widget:  widget number.
1180:Generated_Source\PSoC4/capsense_CSHL.c **** *
1181:Generated_Source\PSoC4/capsense_CSHL.c **** * Return:
1182:Generated_Source\PSoC4/capsense_CSHL.c **** *  Returns widget sensor state 1 if one or more sensors within widget is/are
1183:Generated_Source\PSoC4/capsense_CSHL.c **** *  active, 0 if all sensors within widget are inactive.
1184:Generated_Source\PSoC4/capsense_CSHL.c **** *
1185:Generated_Source\PSoC4/capsense_CSHL.c **** * Global Variables:
1186:Generated_Source\PSoC4/capsense_CSHL.c **** *  rawDataIndex[]: Contains the  1st sensor position in the widget
1187:Generated_Source\PSoC4/capsense_CSHL.c **** *
1188:Generated_Source\PSoC4/capsense_CSHL.c **** * Side Effects:
1189:Generated_Source\PSoC4/capsense_CSHL.c **** *  None
1190:Generated_Source\PSoC4/capsense_CSHL.c **** *
1191:Generated_Source\PSoC4/capsense_CSHL.c **** *******************************************************************************/
1192:Generated_Source\PSoC4/capsense_CSHL.c **** uint32 capsense_CheckIsWidgetActive(uint32 widget)
1193:Generated_Source\PSoC4/capsense_CSHL.c **** {
 675              		.loc 1 1193 0
 676              		.cfi_startproc
 677              	.LVL60:
 678 0000 38B5     		push	{r3, r4, r5, lr}
 679              		.cfi_def_cfa_offset 16
 680              		.cfi_offset 3, -16
 681              		.cfi_offset 4, -12
 682              		.cfi_offset 5, -8
 683              		.cfi_offset 14, -4
 684              	.LVL61:
ARM GAS  C:\Users\Mykola\AppData\Local\Temp\ccSL9DbN.s 			page 34


1194:Generated_Source\PSoC4/capsense_CSHL.c ****     uint32 rawIndex = (uint32)capsense_rawDataIndex[widget];
1195:Generated_Source\PSoC4/capsense_CSHL.c ****     uint32 numOfSensors = (uint32)capsense_numberOfSensors[widget] + rawIndex;
1196:Generated_Source\PSoC4/capsense_CSHL.c ****     uint32 state = 0u;
 685              		.loc 1 1196 0
 686 0002 0025     		mov	r5, #0
1194:Generated_Source\PSoC4/capsense_CSHL.c ****     uint32 rawIndex = (uint32)capsense_rawDataIndex[widget];
 687              		.loc 1 1194 0
 688 0004 0024     		mov	r4, #0
 689              	.LVL62:
 690              	.L67:
1197:Generated_Source\PSoC4/capsense_CSHL.c **** 
1198:Generated_Source\PSoC4/capsense_CSHL.c ****     /* Check all sensors of widget */
1199:Generated_Source\PSoC4/capsense_CSHL.c ****     do
1200:Generated_Source\PSoC4/capsense_CSHL.c ****     {
1201:Generated_Source\PSoC4/capsense_CSHL.c ****         if(capsense_CheckIsSensorActive((uint32)rawIndex) != 0u)
 691              		.loc 1 1201 0
 692 0006 201C     		mov	r0, r4
 693 0008 FFF7FEFF 		bl	capsense_CheckIsSensorActive
 694              	.LVL63:
 695 000c 0028     		cmp	r0, #0
 696 000e 00D0     		beq	.L66
1202:Generated_Source\PSoC4/capsense_CSHL.c ****         {
1203:Generated_Source\PSoC4/capsense_CSHL.c ****             state = capsense_SENSOR_IS_ACTIVE;
 697              		.loc 1 1203 0
 698 0010 0125     		mov	r5, #1
 699              	.LVL64:
 700              	.L66:
1204:Generated_Source\PSoC4/capsense_CSHL.c ****         }
1205:Generated_Source\PSoC4/capsense_CSHL.c ****         rawIndex++;
 701              		.loc 1 1205 0
 702 0012 0134     		add	r4, r4, #1
 703              	.LVL65:
1206:Generated_Source\PSoC4/capsense_CSHL.c ****     }
1207:Generated_Source\PSoC4/capsense_CSHL.c ****     while(rawIndex < numOfSensors);
 704              		.loc 1 1207 0
 705 0014 042C     		cmp	r4, #4
 706 0016 F6D9     		bls	.L67
1208:Generated_Source\PSoC4/capsense_CSHL.c **** 
1209:Generated_Source\PSoC4/capsense_CSHL.c **** 
1210:Generated_Source\PSoC4/capsense_CSHL.c **** 
1211:Generated_Source\PSoC4/capsense_CSHL.c ****     return state;
1212:Generated_Source\PSoC4/capsense_CSHL.c **** }
 707              		.loc 1 1212 0
 708 0018 281C     		mov	r0, r5
 709              		@ sp needed
 710              	.LVL66:
 711              	.LVL67:
 712 001a 38BD     		pop	{r3, r4, r5, pc}
 713              		.cfi_endproc
 714              	.LFE58:
 715              		.size	capsense_CheckIsWidgetActive, .-capsense_CheckIsWidgetActive
 716              		.section	.text.capsense_CheckIsAnyWidgetActive,"ax",%progbits
 717              		.align	2
 718              		.global	capsense_CheckIsAnyWidgetActive
 719              		.code	16
 720              		.thumb_func
 721              		.type	capsense_CheckIsAnyWidgetActive, %function
ARM GAS  C:\Users\Mykola\AppData\Local\Temp\ccSL9DbN.s 			page 35


 722              	capsense_CheckIsAnyWidgetActive:
 723              	.LFB59:
1213:Generated_Source\PSoC4/capsense_CSHL.c **** 
1214:Generated_Source\PSoC4/capsense_CSHL.c **** 
1215:Generated_Source\PSoC4/capsense_CSHL.c **** /*******************************************************************************
1216:Generated_Source\PSoC4/capsense_CSHL.c **** * Function Name: capsense_CheckIsAnyWidgetActive
1217:Generated_Source\PSoC4/capsense_CSHL.c **** ********************************************************************************
1218:Generated_Source\PSoC4/capsense_CSHL.c **** *
1219:Generated_Source\PSoC4/capsense_CSHL.c **** * Summary:
1220:Generated_Source\PSoC4/capsense_CSHL.c **** *  Compares all the sensors of the capsense_Signal[] array to their finger
1221:Generated_Source\PSoC4/capsense_CSHL.c **** *  threshold. Calls capsense_CheckIsWidgetActive() for each widget so
1222:Generated_Source\PSoC4/capsense_CSHL.c **** *  the capsense_sensorOnMask[] array is up to date after calling this
1223:Generated_Source\PSoC4/capsense_CSHL.c **** *  function.
1224:Generated_Source\PSoC4/capsense_CSHL.c **** *
1225:Generated_Source\PSoC4/capsense_CSHL.c **** * Parameters:
1226:Generated_Source\PSoC4/capsense_CSHL.c **** *  widget:  widget number.
1227:Generated_Source\PSoC4/capsense_CSHL.c **** *
1228:Generated_Source\PSoC4/capsense_CSHL.c **** * Return:
1229:Generated_Source\PSoC4/capsense_CSHL.c **** *  Returns 1 if any widget is active, 0 none of widgets are active.
1230:Generated_Source\PSoC4/capsense_CSHL.c **** *
1231:Generated_Source\PSoC4/capsense_CSHL.c **** * Global Variables:
1232:Generated_Source\PSoC4/capsense_CSHL.c **** *  None
1233:Generated_Source\PSoC4/capsense_CSHL.c **** *
1234:Generated_Source\PSoC4/capsense_CSHL.c **** * Side Effects:
1235:Generated_Source\PSoC4/capsense_CSHL.c **** *  None
1236:Generated_Source\PSoC4/capsense_CSHL.c **** *
1237:Generated_Source\PSoC4/capsense_CSHL.c **** *******************************************************************************/
1238:Generated_Source\PSoC4/capsense_CSHL.c **** uint32 capsense_CheckIsAnyWidgetActive(void)
1239:Generated_Source\PSoC4/capsense_CSHL.c **** {
 724              		.loc 1 1239 0
 725              		.cfi_startproc
 726 0000 38B5     		push	{r3, r4, r5, lr}
 727              		.cfi_def_cfa_offset 16
 728              		.cfi_offset 3, -16
 729              		.cfi_offset 4, -12
 730              		.cfi_offset 5, -8
 731              		.cfi_offset 14, -4
 732              	.LVL68:
1240:Generated_Source\PSoC4/capsense_CSHL.c **** 
1241:Generated_Source\PSoC4/capsense_CSHL.c ****         uint32 i;
1242:Generated_Source\PSoC4/capsense_CSHL.c ****     uint32 state = 0u;
 733              		.loc 1 1242 0
 734 0002 0025     		mov	r5, #0
1243:Generated_Source\PSoC4/capsense_CSHL.c ****     
1244:Generated_Source\PSoC4/capsense_CSHL.c ****     for(i = 0u; i < capsense_TOTAL_WIDGET_COUNT; i++)
 735              		.loc 1 1244 0
 736 0004 0024     		mov	r4, #0
 737 0006 06E0     		b	.L70
 738              	.LVL69:
 739              	.L72:
1245:Generated_Source\PSoC4/capsense_CSHL.c ****     {
1246:Generated_Source\PSoC4/capsense_CSHL.c ****         if (capsense_CheckIsWidgetActive(i) != 0u)
 740              		.loc 1 1246 0
 741 0008 201C     		mov	r0, r4
 742 000a FFF7FEFF 		bl	capsense_CheckIsWidgetActive
 743              	.LVL70:
 744 000e 0028     		cmp	r0, #0
ARM GAS  C:\Users\Mykola\AppData\Local\Temp\ccSL9DbN.s 			page 36


 745 0010 00D0     		beq	.L71
1247:Generated_Source\PSoC4/capsense_CSHL.c ****         {
1248:Generated_Source\PSoC4/capsense_CSHL.c ****             state = capsense_WIDGET_IS_ACTIVE;
 746              		.loc 1 1248 0
 747 0012 0125     		mov	r5, #1
 748              	.LVL71:
 749              	.L71:
1244:Generated_Source\PSoC4/capsense_CSHL.c ****     {
 750              		.loc 1 1244 0 discriminator 2
 751 0014 0134     		add	r4, r4, #1
 752              	.LVL72:
 753              	.L70:
1244:Generated_Source\PSoC4/capsense_CSHL.c ****     {
 754              		.loc 1 1244 0 is_stmt 0 discriminator 1
 755 0016 002C     		cmp	r4, #0
 756 0018 F6D0     		beq	.L72
1249:Generated_Source\PSoC4/capsense_CSHL.c ****         }
1250:Generated_Source\PSoC4/capsense_CSHL.c ****     }
1251:Generated_Source\PSoC4/capsense_CSHL.c ****     
1252:Generated_Source\PSoC4/capsense_CSHL.c **** 
1253:Generated_Source\PSoC4/capsense_CSHL.c **** 
1254:Generated_Source\PSoC4/capsense_CSHL.c ****     return state;
1255:Generated_Source\PSoC4/capsense_CSHL.c **** }
 757              		.loc 1 1255 0 is_stmt 1
 758 001a 281C     		mov	r0, r5
 759              		@ sp needed
 760              	.LVL73:
 761              	.LVL74:
 762 001c 38BD     		pop	{r3, r4, r5, pc}
 763              		.cfi_endproc
 764              	.LFE59:
 765              		.size	capsense_CheckIsAnyWidgetActive, .-capsense_CheckIsAnyWidgetActive
 766 001e C046     		.section	.text.capsense_EnableWidget,"ax",%progbits
 767              		.align	2
 768              		.global	capsense_EnableWidget
 769              		.code	16
 770              		.thumb_func
 771              		.type	capsense_EnableWidget, %function
 772              	capsense_EnableWidget:
 773              	.LFB60:
1256:Generated_Source\PSoC4/capsense_CSHL.c **** 
1257:Generated_Source\PSoC4/capsense_CSHL.c **** 
1258:Generated_Source\PSoC4/capsense_CSHL.c **** /*******************************************************************************
1259:Generated_Source\PSoC4/capsense_CSHL.c **** * Function Name: capsense_EnableWidget
1260:Generated_Source\PSoC4/capsense_CSHL.c **** ********************************************************************************
1261:Generated_Source\PSoC4/capsense_CSHL.c **** *
1262:Generated_Source\PSoC4/capsense_CSHL.c **** * Summary:
1263:Generated_Source\PSoC4/capsense_CSHL.c **** *  Enables all the widget elements (sensors) to the scanning process.
1264:Generated_Source\PSoC4/capsense_CSHL.c **** *
1265:Generated_Source\PSoC4/capsense_CSHL.c **** * Parameters:
1266:Generated_Source\PSoC4/capsense_CSHL.c **** *  widget:  widget number.
1267:Generated_Source\PSoC4/capsense_CSHL.c **** *
1268:Generated_Source\PSoC4/capsense_CSHL.c **** * Return:
1269:Generated_Source\PSoC4/capsense_CSHL.c **** *  None
1270:Generated_Source\PSoC4/capsense_CSHL.c **** *
1271:Generated_Source\PSoC4/capsense_CSHL.c **** * Global Variables:
1272:Generated_Source\PSoC4/capsense_CSHL.c **** *  capsense_sensorEnableMask[] - used to store the sensor scanning
ARM GAS  C:\Users\Mykola\AppData\Local\Temp\ccSL9DbN.s 			page 37


1273:Generated_Source\PSoC4/capsense_CSHL.c **** *  state.
1274:Generated_Source\PSoC4/capsense_CSHL.c **** *  capsense_sensorEnableMask[0] contains the masked bits for sensors
1275:Generated_Source\PSoC4/capsense_CSHL.c **** *  0 through 7 (sensor 0 is bit 0, sensor 1 is bit 1).
1276:Generated_Source\PSoC4/capsense_CSHL.c **** *  capsense_sensorEnableMask[1] contains the masked bits for
1277:Generated_Source\PSoC4/capsense_CSHL.c **** *  sensors 8 through 15 (if needed), and so on.
1278:Generated_Source\PSoC4/capsense_CSHL.c **** *  0 - sensor doesn't scan by capsense_ScanEnabledWidgets().
1279:Generated_Source\PSoC4/capsense_CSHL.c **** *  1 - sensor scans by capsense_ScanEnabledWidgets().
1280:Generated_Source\PSoC4/capsense_CSHL.c **** *
1281:Generated_Source\PSoC4/capsense_CSHL.c **** * Side Effects:
1282:Generated_Source\PSoC4/capsense_CSHL.c **** *  None
1283:Generated_Source\PSoC4/capsense_CSHL.c **** *
1284:Generated_Source\PSoC4/capsense_CSHL.c **** *******************************************************************************/
1285:Generated_Source\PSoC4/capsense_CSHL.c **** void capsense_EnableWidget(uint32 widget)
1286:Generated_Source\PSoC4/capsense_CSHL.c **** {
 774              		.loc 1 1286 0
 775              		.cfi_startproc
 776              	.LVL75:
 777 0000 10B5     		push	{r4, lr}
 778              		.cfi_def_cfa_offset 8
 779              		.cfi_offset 4, -8
 780              		.cfi_offset 14, -4
 781              	.LVL76:
1287:Generated_Source\PSoC4/capsense_CSHL.c **** 
1288:Generated_Source\PSoC4/capsense_CSHL.c ****     uint8 rawIndex = capsense_rawDataIndex[widget];
 782              		.loc 1 1288 0
 783 0002 0024     		mov	r4, #0
 784              	.LVL77:
 785              	.L75:
1289:Generated_Source\PSoC4/capsense_CSHL.c ****     uint8 numOfSensors = capsense_numberOfSensors[widget] + rawIndex;
1290:Generated_Source\PSoC4/capsense_CSHL.c **** 
1291:Generated_Source\PSoC4/capsense_CSHL.c ****     /* Enable all sensors of widget */
1292:Generated_Source\PSoC4/capsense_CSHL.c ****     do
1293:Generated_Source\PSoC4/capsense_CSHL.c ****     {
1294:Generated_Source\PSoC4/capsense_CSHL.c ****         capsense_SetBitValue(capsense_sensorEnableMask, (uint32)rawIndex, 1u);
 786              		.loc 1 1294 0 discriminator 1
 787 0004 0448     		ldr	r0, .L76
 788 0006 211C     		mov	r1, r4
 789 0008 0122     		mov	r2, #1
 790 000a FFF7FEFF 		bl	capsense_SetBitValue
 791              	.LVL78:
1295:Generated_Source\PSoC4/capsense_CSHL.c ****         rawIndex++;
 792              		.loc 1 1295 0 discriminator 1
 793 000e 0134     		add	r4, r4, #1
 794              	.LVL79:
 795 0010 E4B2     		uxtb	r4, r4
 796              	.LVL80:
1296:Generated_Source\PSoC4/capsense_CSHL.c ****     }
1297:Generated_Source\PSoC4/capsense_CSHL.c ****     while(rawIndex < numOfSensors);
 797              		.loc 1 1297 0 discriminator 1
 798 0012 042C     		cmp	r4, #4
 799 0014 F6D9     		bls	.L75
1298:Generated_Source\PSoC4/capsense_CSHL.c **** }
 800              		.loc 1 1298 0
 801              		@ sp needed
 802              	.LVL81:
 803 0016 10BD     		pop	{r4, pc}
 804              	.L77:
ARM GAS  C:\Users\Mykola\AppData\Local\Temp\ccSL9DbN.s 			page 38


 805              		.align	2
 806              	.L76:
 807 0018 00000000 		.word	capsense_sensorEnableMask
 808              		.cfi_endproc
 809              	.LFE60:
 810              		.size	capsense_EnableWidget, .-capsense_EnableWidget
 811              		.section	.text.capsense_DisableWidget,"ax",%progbits
 812              		.align	2
 813              		.global	capsense_DisableWidget
 814              		.code	16
 815              		.thumb_func
 816              		.type	capsense_DisableWidget, %function
 817              	capsense_DisableWidget:
 818              	.LFB61:
1299:Generated_Source\PSoC4/capsense_CSHL.c **** 
1300:Generated_Source\PSoC4/capsense_CSHL.c **** 
1301:Generated_Source\PSoC4/capsense_CSHL.c **** /*******************************************************************************
1302:Generated_Source\PSoC4/capsense_CSHL.c **** * Function Name: capsense_DisableWidget
1303:Generated_Source\PSoC4/capsense_CSHL.c **** ********************************************************************************
1304:Generated_Source\PSoC4/capsense_CSHL.c **** *
1305:Generated_Source\PSoC4/capsense_CSHL.c **** * Summary:
1306:Generated_Source\PSoC4/capsense_CSHL.c **** *  Disables all the widget elements (sensors) from the scanning process.
1307:Generated_Source\PSoC4/capsense_CSHL.c **** *
1308:Generated_Source\PSoC4/capsense_CSHL.c **** * Parameters:
1309:Generated_Source\PSoC4/capsense_CSHL.c **** *  widget:  widget number.
1310:Generated_Source\PSoC4/capsense_CSHL.c **** *
1311:Generated_Source\PSoC4/capsense_CSHL.c **** * Return:
1312:Generated_Source\PSoC4/capsense_CSHL.c **** *  None
1313:Generated_Source\PSoC4/capsense_CSHL.c **** *
1314:Generated_Source\PSoC4/capsense_CSHL.c **** * Global Variables:
1315:Generated_Source\PSoC4/capsense_CSHL.c **** *  capsense_sensorEnableMask[] - used to store the sensor scanning
1316:Generated_Source\PSoC4/capsense_CSHL.c **** *  state.
1317:Generated_Source\PSoC4/capsense_CSHL.c **** *  capsense_sensorEnableMask[0] contains the masked bits for sensors
1318:Generated_Source\PSoC4/capsense_CSHL.c **** *  0 through 7 (sensor 0 is bit 0, sensor 1 is bit 1).
1319:Generated_Source\PSoC4/capsense_CSHL.c **** *  capsense_sensorEnableMask[1] contains the masked bits for
1320:Generated_Source\PSoC4/capsense_CSHL.c **** *  sensors 8 through 15 (if needed), and so on.
1321:Generated_Source\PSoC4/capsense_CSHL.c **** *  0 - sensor isn't scanned by capsense_ScanEnabledWidgets().
1322:Generated_Source\PSoC4/capsense_CSHL.c **** *  1 - sensor is scanned by capsense_ScanEnabledWidgets().
1323:Generated_Source\PSoC4/capsense_CSHL.c **** *
1324:Generated_Source\PSoC4/capsense_CSHL.c **** * Side Effects:
1325:Generated_Source\PSoC4/capsense_CSHL.c **** *  None
1326:Generated_Source\PSoC4/capsense_CSHL.c **** *
1327:Generated_Source\PSoC4/capsense_CSHL.c **** *******************************************************************************/
1328:Generated_Source\PSoC4/capsense_CSHL.c **** void capsense_DisableWidget(uint32 widget)
1329:Generated_Source\PSoC4/capsense_CSHL.c **** {
 819              		.loc 1 1329 0
 820              		.cfi_startproc
 821              	.LVL82:
 822 0000 10B5     		push	{r4, lr}
 823              		.cfi_def_cfa_offset 8
 824              		.cfi_offset 4, -8
 825              		.cfi_offset 14, -4
 826              	.LVL83:
1330:Generated_Source\PSoC4/capsense_CSHL.c ****     uint8 rawIndex = capsense_rawDataIndex[widget];
 827              		.loc 1 1330 0
 828 0002 0024     		mov	r4, #0
 829              	.LVL84:
ARM GAS  C:\Users\Mykola\AppData\Local\Temp\ccSL9DbN.s 			page 39


 830              	.L79:
1331:Generated_Source\PSoC4/capsense_CSHL.c ****     uint8 numOfSensors = capsense_numberOfSensors[widget] + rawIndex;
1332:Generated_Source\PSoC4/capsense_CSHL.c **** 
1333:Generated_Source\PSoC4/capsense_CSHL.c ****     /* Disable all sensors of widget */
1334:Generated_Source\PSoC4/capsense_CSHL.c ****     do
1335:Generated_Source\PSoC4/capsense_CSHL.c ****     {
1336:Generated_Source\PSoC4/capsense_CSHL.c **** 
1337:Generated_Source\PSoC4/capsense_CSHL.c ****         capsense_SetBitValue(capsense_sensorEnableMask, (uint32)rawIndex, 0u);
 831              		.loc 1 1337 0 discriminator 1
 832 0004 0448     		ldr	r0, .L80
 833 0006 211C     		mov	r1, r4
 834 0008 0022     		mov	r2, #0
 835 000a FFF7FEFF 		bl	capsense_SetBitValue
 836              	.LVL85:
1338:Generated_Source\PSoC4/capsense_CSHL.c ****         rawIndex++;
 837              		.loc 1 1338 0 discriminator 1
 838 000e 0134     		add	r4, r4, #1
 839              	.LVL86:
 840 0010 E4B2     		uxtb	r4, r4
 841              	.LVL87:
1339:Generated_Source\PSoC4/capsense_CSHL.c ****     }
1340:Generated_Source\PSoC4/capsense_CSHL.c ****     while(rawIndex < numOfSensors);
 842              		.loc 1 1340 0 discriminator 1
 843 0012 042C     		cmp	r4, #4
 844 0014 F6D9     		bls	.L79
1341:Generated_Source\PSoC4/capsense_CSHL.c **** }
 845              		.loc 1 1341 0
 846              		@ sp needed
 847              	.LVL88:
 848 0016 10BD     		pop	{r4, pc}
 849              	.L81:
 850              		.align	2
 851              	.L80:
 852 0018 00000000 		.word	capsense_sensorEnableMask
 853              		.cfi_endproc
 854              	.LFE61:
 855              		.size	capsense_DisableWidget, .-capsense_DisableWidget
 856              		.section	.text.capsense_FindMaximum,"ax",%progbits
 857              		.align	2
 858              		.global	capsense_FindMaximum
 859              		.code	16
 860              		.thumb_func
 861              		.type	capsense_FindMaximum, %function
 862              	capsense_FindMaximum:
 863              	.LFB62:
1342:Generated_Source\PSoC4/capsense_CSHL.c **** 
1343:Generated_Source\PSoC4/capsense_CSHL.c **** 
1344:Generated_Source\PSoC4/capsense_CSHL.c **** #if(capsense_TOTAL_CENTROIDS_BASIC_COUNT)
1345:Generated_Source\PSoC4/capsense_CSHL.c ****     /*******************************************************************************
1346:Generated_Source\PSoC4/capsense_CSHL.c ****     * Function Name: capsense_FindMaximum
1347:Generated_Source\PSoC4/capsense_CSHL.c ****     ********************************************************************************
1348:Generated_Source\PSoC4/capsense_CSHL.c ****     *
1349:Generated_Source\PSoC4/capsense_CSHL.c ****     * Summary:
1350:Generated_Source\PSoC4/capsense_CSHL.c ****     *  Finds the index of the maximum element within a defined centroid. Checks
1351:Generated_Source\PSoC4/capsense_CSHL.c ****     *  capsense_sensorSignal[] within a defined centroid and
1352:Generated_Source\PSoC4/capsense_CSHL.c ****     *  returns the index of the maximum element. The values below the finger threshold are
1353:Generated_Source\PSoC4/capsense_CSHL.c ****     *  ignored.
ARM GAS  C:\Users\Mykola\AppData\Local\Temp\ccSL9DbN.s 			page 40


1354:Generated_Source\PSoC4/capsense_CSHL.c ****     *  The centroid is defined by offset of the first element and a number of elements - count.
1355:Generated_Source\PSoC4/capsense_CSHL.c ****     *  The diplexed centroid requires at least two consecutive elements above
1356:Generated_Source\PSoC4/capsense_CSHL.c ****     *  FingerThreshold to find the index of the maximum element.
1357:Generated_Source\PSoC4/capsense_CSHL.c ****     *
1358:Generated_Source\PSoC4/capsense_CSHL.c ****     * Parameters:
1359:Generated_Source\PSoC4/capsense_CSHL.c ****     *  offset:  Start index of centroid in capsense_sensorSignal[] array.
1360:Generated_Source\PSoC4/capsense_CSHL.c ****     *  count:   number of elements within centroid.
1361:Generated_Source\PSoC4/capsense_CSHL.c ****     *  fingerThreshold:  Finger threshold.
1362:Generated_Source\PSoC4/capsense_CSHL.c ****     *  diplex:   pointer to diplex table.
1363:Generated_Source\PSoC4/capsense_CSHL.c ****     *
1364:Generated_Source\PSoC4/capsense_CSHL.c ****     * Return:
1365:Generated_Source\PSoC4/capsense_CSHL.c ****     *  Returns the index of the maximum element within a defined centroid.
1366:Generated_Source\PSoC4/capsense_CSHL.c ****     *  If the index of the maximum element isn't found it returns 0xFF.
1367:Generated_Source\PSoC4/capsense_CSHL.c ****     *
1368:Generated_Source\PSoC4/capsense_CSHL.c ****     * Global Variables:
1369:Generated_Source\PSoC4/capsense_CSHL.c ****     *  capsense_startOfSlider[] - contains the index of the first slider element
1370:Generated_Source\PSoC4/capsense_CSHL.c ****     *
1371:Generated_Source\PSoC4/capsense_CSHL.c ****     * Side Effects:
1372:Generated_Source\PSoC4/capsense_CSHL.c ****     *  None
1373:Generated_Source\PSoC4/capsense_CSHL.c ****     *
1374:Generated_Source\PSoC4/capsense_CSHL.c ****     *******************************************************************************/
1375:Generated_Source\PSoC4/capsense_CSHL.c ****     #if (capsense_IS_DIPLEX_SLIDER)
1376:Generated_Source\PSoC4/capsense_CSHL.c ****         uint8 capsense_FindMaximum(uint8 offset, uint8 count, uint8 fingerThreshold, const uint8 *d
1377:Generated_Source\PSoC4/capsense_CSHL.c ****     #else
1378:Generated_Source\PSoC4/capsense_CSHL.c ****         uint8 capsense_FindMaximum(uint8 offset, uint8 count, uint8 fingerThreshold)
1379:Generated_Source\PSoC4/capsense_CSHL.c ****     #endif /* (capsense_IS_DIPLEX_SLIDER) */
1380:Generated_Source\PSoC4/capsense_CSHL.c ****     {
 864              		.loc 1 1380 0
 865              		.cfi_startproc
 866              	.LVL89:
 867 0000 70B5     		push	{r4, r5, r6, lr}
 868              		.cfi_def_cfa_offset 16
 869              		.cfi_offset 4, -16
 870              		.cfi_offset 5, -12
 871              		.cfi_offset 6, -8
 872              		.cfi_offset 14, -4
 873              	.LVL90:
1381:Generated_Source\PSoC4/capsense_CSHL.c ****         uint8 i;
1382:Generated_Source\PSoC4/capsense_CSHL.c ****         #if (capsense_IS_DIPLEX_SLIDER)
1383:Generated_Source\PSoC4/capsense_CSHL.c ****             uint8 curPos = 0u;
1384:Generated_Source\PSoC4/capsense_CSHL.c ****             /* No centroid at Start */
1385:Generated_Source\PSoC4/capsense_CSHL.c ****             uint8 curCntrdSize = 0u;
1386:Generated_Source\PSoC4/capsense_CSHL.c ****             uint8 curCtrdStartPos = capsense_MAXIMUM_CENTROID;
1387:Generated_Source\PSoC4/capsense_CSHL.c ****             /* Biggest centroid is zero */
1388:Generated_Source\PSoC4/capsense_CSHL.c ****             uint8 biggestCtrdSize = 0u;
1389:Generated_Source\PSoC4/capsense_CSHL.c ****             uint8 biggestCtrdStartPos = 0u;
1390:Generated_Source\PSoC4/capsense_CSHL.c ****         #endif /* (capsense_IS_DIPLEX_SLIDER) */
1391:Generated_Source\PSoC4/capsense_CSHL.c ****         uint8 maximum = capsense_MAXIMUM_CENTROID;
1392:Generated_Source\PSoC4/capsense_CSHL.c **** 
1393:Generated_Source\PSoC4/capsense_CSHL.c ****         uint8 temp = 0u;
1394:Generated_Source\PSoC4/capsense_CSHL.c ****         uint8 *startOfSlider = &capsense_sensorSignal[offset];
 874              		.loc 1 1394 0
 875 0002 094D     		ldr	r5, .L87
 876 0004 1435     		add	r5, r5, #20
 877 0006 2D18     		add	r5, r5, r0
 878              	.LVL91:
1393:Generated_Source\PSoC4/capsense_CSHL.c ****         uint8 *startOfSlider = &capsense_sensorSignal[offset];
ARM GAS  C:\Users\Mykola\AppData\Local\Temp\ccSL9DbN.s 			page 41


 879              		.loc 1 1393 0
 880 0008 0026     		mov	r6, #0
1391:Generated_Source\PSoC4/capsense_CSHL.c **** 
 881              		.loc 1 1391 0
 882 000a FF20     		mov	r0, #255
 883              	.LVL92:
1395:Generated_Source\PSoC4/capsense_CSHL.c **** 
1396:Generated_Source\PSoC4/capsense_CSHL.c ****         #if (capsense_IS_DIPLEX_SLIDER)
1397:Generated_Source\PSoC4/capsense_CSHL.c ****             if(diplex != 0u)
1398:Generated_Source\PSoC4/capsense_CSHL.c ****             {
1399:Generated_Source\PSoC4/capsense_CSHL.c ****                 /* Initialize */
1400:Generated_Source\PSoC4/capsense_CSHL.c ****                 i = 0u;
1401:Generated_Source\PSoC4/capsense_CSHL.c **** 
1402:Generated_Source\PSoC4/capsense_CSHL.c ****                 /* Make slider x2 as Diplexed */
1403:Generated_Source\PSoC4/capsense_CSHL.c ****                 count <<= 1u;
1404:Generated_Source\PSoC4/capsense_CSHL.c ****                 while(1u)
1405:Generated_Source\PSoC4/capsense_CSHL.c ****                 {
1406:Generated_Source\PSoC4/capsense_CSHL.c ****                     if (startOfSlider[curPos] > 0u)    /* Looking for centroids */
1407:Generated_Source\PSoC4/capsense_CSHL.c ****                     {
1408:Generated_Source\PSoC4/capsense_CSHL.c ****                         if (curCtrdStartPos == capsense_MAXIMUM_CENTROID)
1409:Generated_Source\PSoC4/capsense_CSHL.c ****                         {
1410:Generated_Source\PSoC4/capsense_CSHL.c ****                             /* Start of centroid */
1411:Generated_Source\PSoC4/capsense_CSHL.c ****                             curCtrdStartPos = i;
1412:Generated_Source\PSoC4/capsense_CSHL.c ****                             curCntrdSize++;
1413:Generated_Source\PSoC4/capsense_CSHL.c ****                         }
1414:Generated_Source\PSoC4/capsense_CSHL.c ****                         else
1415:Generated_Source\PSoC4/capsense_CSHL.c ****                         {
1416:Generated_Source\PSoC4/capsense_CSHL.c ****                             curCntrdSize++;
1417:Generated_Source\PSoC4/capsense_CSHL.c ****                         }
1418:Generated_Source\PSoC4/capsense_CSHL.c ****                     }
1419:Generated_Source\PSoC4/capsense_CSHL.c ****                     else   /* Select biggest and indicate zero start */
1420:Generated_Source\PSoC4/capsense_CSHL.c ****                     {
1421:Generated_Source\PSoC4/capsense_CSHL.c ****                         if(curCntrdSize > 0u)
1422:Generated_Source\PSoC4/capsense_CSHL.c ****                         {
1423:Generated_Source\PSoC4/capsense_CSHL.c ****                             /* We are at the end of current */
1424:Generated_Source\PSoC4/capsense_CSHL.c ****                             if(curCntrdSize > biggestCtrdSize)
1425:Generated_Source\PSoC4/capsense_CSHL.c ****                             {
1426:Generated_Source\PSoC4/capsense_CSHL.c ****                                 biggestCtrdSize = curCntrdSize;
1427:Generated_Source\PSoC4/capsense_CSHL.c ****                                 biggestCtrdStartPos = curCtrdStartPos;
1428:Generated_Source\PSoC4/capsense_CSHL.c ****                             }
1429:Generated_Source\PSoC4/capsense_CSHL.c **** 
1430:Generated_Source\PSoC4/capsense_CSHL.c ****                             curCntrdSize = 0u;
1431:Generated_Source\PSoC4/capsense_CSHL.c ****                             curCtrdStartPos = capsense_MAXIMUM_CENTROID;
1432:Generated_Source\PSoC4/capsense_CSHL.c ****                         }
1433:Generated_Source\PSoC4/capsense_CSHL.c ****                     }
1434:Generated_Source\PSoC4/capsense_CSHL.c **** 
1435:Generated_Source\PSoC4/capsense_CSHL.c ****                     i++;
1436:Generated_Source\PSoC4/capsense_CSHL.c ****                     curPos = diplex[i];
1437:Generated_Source\PSoC4/capsense_CSHL.c ****                     if(i == count)
1438:Generated_Source\PSoC4/capsense_CSHL.c ****                     {
1439:Generated_Source\PSoC4/capsense_CSHL.c ****                         break;
1440:Generated_Source\PSoC4/capsense_CSHL.c ****                     }
1441:Generated_Source\PSoC4/capsense_CSHL.c ****                 }
1442:Generated_Source\PSoC4/capsense_CSHL.c **** 
1443:Generated_Source\PSoC4/capsense_CSHL.c ****                     /* Find biggest centroid if two are same size, last one wins
1444:Generated_Source\PSoC4/capsense_CSHL.c ****                        We are at the end of current */
1445:Generated_Source\PSoC4/capsense_CSHL.c ****                 if (curCntrdSize >= biggestCtrdSize)
ARM GAS  C:\Users\Mykola\AppData\Local\Temp\ccSL9DbN.s 			page 42


1446:Generated_Source\PSoC4/capsense_CSHL.c ****                 {
1447:Generated_Source\PSoC4/capsense_CSHL.c ****                     biggestCtrdSize = curCntrdSize;
1448:Generated_Source\PSoC4/capsense_CSHL.c ****                     biggestCtrdStartPos = curCtrdStartPos;
1449:Generated_Source\PSoC4/capsense_CSHL.c ****                 }
1450:Generated_Source\PSoC4/capsense_CSHL.c ****             }
1451:Generated_Source\PSoC4/capsense_CSHL.c ****             else
1452:Generated_Source\PSoC4/capsense_CSHL.c ****             {
1453:Generated_Source\PSoC4/capsense_CSHL.c ****                 /* Without diplexing */
1454:Generated_Source\PSoC4/capsense_CSHL.c ****                 biggestCtrdSize = count;
1455:Generated_Source\PSoC4/capsense_CSHL.c ****             }
1456:Generated_Source\PSoC4/capsense_CSHL.c **** 
1457:Generated_Source\PSoC4/capsense_CSHL.c **** 
1458:Generated_Source\PSoC4/capsense_CSHL.c ****             /* Check centroid size */
1459:Generated_Source\PSoC4/capsense_CSHL.c ****             #if (capsense_IS_NON_DIPLEX_SLIDER)
1460:Generated_Source\PSoC4/capsense_CSHL.c ****                 if((biggestCtrdSize >= 2u) || ((biggestCtrdSize == 1u) && (diplex == 0u)))
1461:Generated_Source\PSoC4/capsense_CSHL.c ****             #else
1462:Generated_Source\PSoC4/capsense_CSHL.c ****                 if(biggestCtrdSize >= 2u)
1463:Generated_Source\PSoC4/capsense_CSHL.c ****             #endif /* (capsense_IS_NON_DIPLEX_SLIDER) */
1464:Generated_Source\PSoC4/capsense_CSHL.c ****                 {
1465:Generated_Source\PSoC4/capsense_CSHL.c ****                     for (i = biggestCtrdStartPos; i < (biggestCtrdStartPos + biggestCtrdSize); i++)
1466:Generated_Source\PSoC4/capsense_CSHL.c ****                     {
1467:Generated_Source\PSoC4/capsense_CSHL.c ****                         #if (capsense_IS_DIPLEX_SLIDER && capsense_IS_NON_DIPLEX_SLIDER)
1468:Generated_Source\PSoC4/capsense_CSHL.c ****                             if (diplex == 0u)
1469:Generated_Source\PSoC4/capsense_CSHL.c ****                             {
1470:Generated_Source\PSoC4/capsense_CSHL.c ****                                 curPos = i;
1471:Generated_Source\PSoC4/capsense_CSHL.c ****                             }
1472:Generated_Source\PSoC4/capsense_CSHL.c ****                             else
1473:Generated_Source\PSoC4/capsense_CSHL.c ****                             {
1474:Generated_Source\PSoC4/capsense_CSHL.c ****                                 curPos = diplex[i];
1475:Generated_Source\PSoC4/capsense_CSHL.c ****                             }
1476:Generated_Source\PSoC4/capsense_CSHL.c ****                         #elif (capsense_IS_DIPLEX_SLIDER)
1477:Generated_Source\PSoC4/capsense_CSHL.c ****                             curPos = diplex[i];
1478:Generated_Source\PSoC4/capsense_CSHL.c ****                         #endif /* (capsense_IS_DIPLEX_SLIDER && capsense_IS_NON_DIPLEX_SLIDER) */
1479:Generated_Source\PSoC4/capsense_CSHL.c ****                         /* Looking for greater element within centroid */
1480:Generated_Source\PSoC4/capsense_CSHL.c ****                         if(startOfSlider[curPos] > fingerThreshold)
1481:Generated_Source\PSoC4/capsense_CSHL.c ****                         {
1482:Generated_Source\PSoC4/capsense_CSHL.c ****                             if(startOfSlider[curPos] > temp)
1483:Generated_Source\PSoC4/capsense_CSHL.c ****                             {
1484:Generated_Source\PSoC4/capsense_CSHL.c ****                                 maximum = i;
1485:Generated_Source\PSoC4/capsense_CSHL.c ****                                 temp = startOfSlider[curPos];
1486:Generated_Source\PSoC4/capsense_CSHL.c ****                             }
1487:Generated_Source\PSoC4/capsense_CSHL.c ****                         }
1488:Generated_Source\PSoC4/capsense_CSHL.c ****                     }
1489:Generated_Source\PSoC4/capsense_CSHL.c ****                 }
1490:Generated_Source\PSoC4/capsense_CSHL.c ****         #else
1491:Generated_Source\PSoC4/capsense_CSHL.c ****             for (i = 0u; i < count; i++)
 884              		.loc 1 1491 0
 885 000c 0023     		mov	r3, #0
 886 000e 08E0     		b	.L83
 887              	.LVL93:
 888              	.L85:
1492:Generated_Source\PSoC4/capsense_CSHL.c ****             {
1493:Generated_Source\PSoC4/capsense_CSHL.c ****                 /* Looking for greater element within centroid */
1494:Generated_Source\PSoC4/capsense_CSHL.c ****                 if(startOfSlider[i] > fingerThreshold)
 889              		.loc 1 1494 0
 890 0010 EC5C     		ldrb	r4, [r5, r3]
 891 0012 9442     		cmp	r4, r2
ARM GAS  C:\Users\Mykola\AppData\Local\Temp\ccSL9DbN.s 			page 43


 892 0014 03D9     		bls	.L84
1495:Generated_Source\PSoC4/capsense_CSHL.c ****                 {
1496:Generated_Source\PSoC4/capsense_CSHL.c ****                     if(startOfSlider[i] > temp)
 893              		.loc 1 1496 0
 894 0016 A642     		cmp	r6, r4
 895 0018 01D2     		bcs	.L84
1497:Generated_Source\PSoC4/capsense_CSHL.c ****                     {
1498:Generated_Source\PSoC4/capsense_CSHL.c ****                         maximum = i;
1499:Generated_Source\PSoC4/capsense_CSHL.c ****                         temp = startOfSlider[i];
 896              		.loc 1 1499 0
 897 001a 261C     		mov	r6, r4
 898              	.LVL94:
1498:Generated_Source\PSoC4/capsense_CSHL.c ****                         temp = startOfSlider[i];
 899              		.loc 1 1498 0
 900 001c 181C     		mov	r0, r3
 901              	.LVL95:
 902              	.L84:
1491:Generated_Source\PSoC4/capsense_CSHL.c ****             {
 903              		.loc 1 1491 0 discriminator 2
 904 001e 0133     		add	r3, r3, #1
 905              	.LVL96:
 906 0020 DBB2     		uxtb	r3, r3
 907              	.LVL97:
 908              	.L83:
1491:Generated_Source\PSoC4/capsense_CSHL.c ****             {
 909              		.loc 1 1491 0 is_stmt 0 discriminator 1
 910 0022 8B42     		cmp	r3, r1
 911 0024 F4D3     		bcc	.L85
1500:Generated_Source\PSoC4/capsense_CSHL.c ****                     }
1501:Generated_Source\PSoC4/capsense_CSHL.c ****                 }
1502:Generated_Source\PSoC4/capsense_CSHL.c ****             }
1503:Generated_Source\PSoC4/capsense_CSHL.c ****         #endif /* (capsense_IS_DIPLEX_SLIDER) */
1504:Generated_Source\PSoC4/capsense_CSHL.c ****         return (maximum);
1505:Generated_Source\PSoC4/capsense_CSHL.c ****     }
 912              		.loc 1 1505 0 is_stmt 1
 913              		@ sp needed
 914              	.LVL98:
 915              	.LVL99:
 916 0026 70BD     		pop	{r4, r5, r6, pc}
 917              	.L88:
 918              		.align	2
 919              	.L87:
 920 0028 00000000 		.word	.LANCHOR0
 921              		.cfi_endproc
 922              	.LFE62:
 923              		.size	capsense_FindMaximum, .-capsense_FindMaximum
 924              		.global	__aeabi_idiv
 925              		.section	.text.capsense_CalcCentroid,"ax",%progbits
 926              		.align	2
 927              		.global	capsense_CalcCentroid
 928              		.code	16
 929              		.thumb_func
 930              		.type	capsense_CalcCentroid, %function
 931              	capsense_CalcCentroid:
 932              	.LFB63:
1506:Generated_Source\PSoC4/capsense_CSHL.c **** 
1507:Generated_Source\PSoC4/capsense_CSHL.c **** 
ARM GAS  C:\Users\Mykola\AppData\Local\Temp\ccSL9DbN.s 			page 44


1508:Generated_Source\PSoC4/capsense_CSHL.c ****     /*******************************************************************************
1509:Generated_Source\PSoC4/capsense_CSHL.c ****     * Function Name: capsense_CalcCentroid
1510:Generated_Source\PSoC4/capsense_CSHL.c ****     ********************************************************************************
1511:Generated_Source\PSoC4/capsense_CSHL.c ****     *
1512:Generated_Source\PSoC4/capsense_CSHL.c ****     * Summary:
1513:Generated_Source\PSoC4/capsense_CSHL.c ****     *  Returns a position value calculated according to the index of the maximum element and API
1514:Generated_Source\PSoC4/capsense_CSHL.c ****     *  resolution.
1515:Generated_Source\PSoC4/capsense_CSHL.c ****     *
1516:Generated_Source\PSoC4/capsense_CSHL.c ****     * Parameters:
1517:Generated_Source\PSoC4/capsense_CSHL.c ****     *  type:  widget type.
1518:Generated_Source\PSoC4/capsense_CSHL.c ****     *  diplex:  pointer to diplex table.
1519:Generated_Source\PSoC4/capsense_CSHL.c ****     *  maximum:  Index of maximum element within centroid.
1520:Generated_Source\PSoC4/capsense_CSHL.c ****     *  offset:   Start index of centroid in capsense_sensorSignal[] array.
1521:Generated_Source\PSoC4/capsense_CSHL.c ****     *  count:    Number of elements within centroid.
1522:Generated_Source\PSoC4/capsense_CSHL.c ****     *  resolution:  multiplicator calculated according to centroid type and
1523:Generated_Source\PSoC4/capsense_CSHL.c ****     *  API resolution.
1524:Generated_Source\PSoC4/capsense_CSHL.c ****     *  noiseThreshold:  Noise threshold.
1525:Generated_Source\PSoC4/capsense_CSHL.c ****     *
1526:Generated_Source\PSoC4/capsense_CSHL.c ****     * Return:
1527:Generated_Source\PSoC4/capsense_CSHL.c ****     *  Returns a position value of the slider.
1528:Generated_Source\PSoC4/capsense_CSHL.c ****     *
1529:Generated_Source\PSoC4/capsense_CSHL.c ****     * Side Effects:
1530:Generated_Source\PSoC4/capsense_CSHL.c ****     *  None
1531:Generated_Source\PSoC4/capsense_CSHL.c ****     *
1532:Generated_Source\PSoC4/capsense_CSHL.c ****     *******************************************************************************/
1533:Generated_Source\PSoC4/capsense_CSHL.c **** #if (capsense_TOTAL_TRACKPAD_GESTURES_COUNT > 0u)
1534:Generated_Source\PSoC4/capsense_CSHL.c ****     uint8 capsense_CalcCentroid(uint8 maximum, uint8 offset,
1535:Generated_Source\PSoC4/capsense_CSHL.c ****                                         uint8 count, uint32 resolution, uint8 noiseThreshold)
1536:Generated_Source\PSoC4/capsense_CSHL.c **** #else
1537:Generated_Source\PSoC4/capsense_CSHL.c ****     uint8 capsense_CalcCentroid(uint8 maximum, uint8 offset,
1538:Generated_Source\PSoC4/capsense_CSHL.c ****                                         uint8 count, uint16 resolution, uint8 noiseThreshold)
1539:Generated_Source\PSoC4/capsense_CSHL.c **** #endif /* (capsense_TOTAL_TRACKPAD_GESTURES_COUNT > 0u) */
1540:Generated_Source\PSoC4/capsense_CSHL.c ****     {
 933              		.loc 1 1540 0
 934              		.cfi_startproc
 935              	.LVL100:
 936 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 937              		.cfi_def_cfa_offset 20
 938              		.cfi_offset 4, -20
 939              		.cfi_offset 5, -16
 940              		.cfi_offset 6, -12
 941              		.cfi_offset 7, -8
 942              		.cfi_offset 14, -4
 943 0002 83B0     		sub	sp, sp, #12
 944              		.cfi_def_cfa_offset 32
 945 0004 041C     		mov	r4, r0
 946 0006 0192     		str	r2, [sp, #4]
 947 0008 0093     		str	r3, [sp]
 948 000a 08AB     		add	r3, sp, #32
 949              	.LVL101:
 950 000c 1878     		ldrb	r0, [r3]
 951              	.LVL102:
1541:Generated_Source\PSoC4/capsense_CSHL.c ****         #if ((capsense_TOTAL_LINEAR_SLIDERS_COUNT > 0u) || (capsense_TOTAL_TOUCH_PADS_BASIC_COUNT >
1542:Generated_Source\PSoC4/capsense_CSHL.c ****             uint8 posPrev;
1543:Generated_Source\PSoC4/capsense_CSHL.c ****             uint8 posNext;
1544:Generated_Source\PSoC4/capsense_CSHL.c ****         #endif /* ((capsense_TOTAL_LINEAR_SLIDERS_COUNT>0u) || (capsense_TOTAL_TOUCH_PADS_BASIC_COU
1545:Generated_Source\PSoC4/capsense_CSHL.c **** 
ARM GAS  C:\Users\Mykola\AppData\Local\Temp\ccSL9DbN.s 			page 45


1546:Generated_Source\PSoC4/capsense_CSHL.c ****         /* Helps during centroid calculation */
1547:Generated_Source\PSoC4/capsense_CSHL.c ****         #if (capsense_TOTAL_CENTROIDS_BASIC_COUNT)
1548:Generated_Source\PSoC4/capsense_CSHL.c ****             static uint8 capsense_centroid[3u];
1549:Generated_Source\PSoC4/capsense_CSHL.c ****         #endif  /* (capsense_TOTAL_CENTROIDS_BASIC_COUNT) */
1550:Generated_Source\PSoC4/capsense_CSHL.c **** 
1551:Generated_Source\PSoC4/capsense_CSHL.c ****         #if (capsense_IS_DIPLEX_SLIDER)
1552:Generated_Source\PSoC4/capsense_CSHL.c ****             uint8 pos;
1553:Generated_Source\PSoC4/capsense_CSHL.c ****         #endif /* (capsense_IS_DIPLEX_SLIDER) */
1554:Generated_Source\PSoC4/capsense_CSHL.c **** 
1555:Generated_Source\PSoC4/capsense_CSHL.c ****         uint8 position;
1556:Generated_Source\PSoC4/capsense_CSHL.c ****         uint32 numerator;
1557:Generated_Source\PSoC4/capsense_CSHL.c ****         int32 denominator;
1558:Generated_Source\PSoC4/capsense_CSHL.c **** 
1559:Generated_Source\PSoC4/capsense_CSHL.c ****         uint8  *startOfSlider = &capsense_sensorSignal[offset];
 952              		.loc 1 1559 0
 953 000e 344B     		ldr	r3, .L99
 954              	.LVL103:
 955 0010 1433     		add	r3, r3, #20
 956 0012 5918     		add	r1, r3, r1
 957              	.LVL104:
1560:Generated_Source\PSoC4/capsense_CSHL.c **** 
1561:Generated_Source\PSoC4/capsense_CSHL.c ****         #if ((capsense_TOTAL_LINEAR_SLIDERS_COUNT > 0u) || (capsense_TOTAL_TOUCH_PADS_BASIC_COUNT >
1562:Generated_Source\PSoC4/capsense_CSHL.c ****             posPrev = 0u;
1563:Generated_Source\PSoC4/capsense_CSHL.c ****         #endif /* ((capsense_TOTAL_LINEAR_SLIDERS_COUNT>0u) || (capsense_TOTAL_TOUCH_PADS_BASIC_COU
1564:Generated_Source\PSoC4/capsense_CSHL.c **** 
1565:Generated_Source\PSoC4/capsense_CSHL.c ****         #if (capsense_ADD_SLIDER_TYPE)
1566:Generated_Source\PSoC4/capsense_CSHL.c ****             if(type == capsense_TYPE_RADIAL_SLIDER)
1567:Generated_Source\PSoC4/capsense_CSHL.c ****             {
1568:Generated_Source\PSoC4/capsense_CSHL.c ****         #endif /* (capsense_ADD_SLIDER_TYPE) */
1569:Generated_Source\PSoC4/capsense_CSHL.c **** 
1570:Generated_Source\PSoC4/capsense_CSHL.c ****             #if (capsense_TOTAL_RADIAL_SLIDERS_COUNT > 0u)
1571:Generated_Source\PSoC4/capsense_CSHL.c ****                 /* Copy Signal to the centroid array */
1572:Generated_Source\PSoC4/capsense_CSHL.c ****                 capsense_centroid[capsense_POS] = startOfSlider[maximum];
1573:Generated_Source\PSoC4/capsense_CSHL.c **** 
1574:Generated_Source\PSoC4/capsense_CSHL.c ****                 /* Check borders for ROTARY Slider */
1575:Generated_Source\PSoC4/capsense_CSHL.c ****                 if (maximum == 0u)                   /* Start of centroid */
1576:Generated_Source\PSoC4/capsense_CSHL.c ****                 {
1577:Generated_Source\PSoC4/capsense_CSHL.c ****                     capsense_centroid[capsense_POS_PREV] = startOfSlider[count - 1u];
1578:Generated_Source\PSoC4/capsense_CSHL.c ****                     capsense_centroid[capsense_POS_NEXT] = startOfSlider[1u];
1579:Generated_Source\PSoC4/capsense_CSHL.c ****                 }
1580:Generated_Source\PSoC4/capsense_CSHL.c ****                 else if (maximum == (count - 1u))    /* End of centroid */
1581:Generated_Source\PSoC4/capsense_CSHL.c ****                 {
1582:Generated_Source\PSoC4/capsense_CSHL.c ****                     capsense_centroid[capsense_POS_PREV] = startOfSlider[maximum - 1u];
1583:Generated_Source\PSoC4/capsense_CSHL.c ****                     capsense_centroid[capsense_POS_NEXT] = startOfSlider[0u];
1584:Generated_Source\PSoC4/capsense_CSHL.c ****                 }
1585:Generated_Source\PSoC4/capsense_CSHL.c ****                 else                                /* Not first Not last */
1586:Generated_Source\PSoC4/capsense_CSHL.c ****                 {
1587:Generated_Source\PSoC4/capsense_CSHL.c ****                     capsense_centroid[capsense_POS_PREV] = startOfSlider[maximum - 1u];
1588:Generated_Source\PSoC4/capsense_CSHL.c ****                     capsense_centroid[capsense_POS_NEXT] = startOfSlider[maximum + 1u];
1589:Generated_Source\PSoC4/capsense_CSHL.c ****                 }
1590:Generated_Source\PSoC4/capsense_CSHL.c ****             #endif /* (capsense_TOTAL_RADIAL_SLIDERS_COUNT > 0u) */
1591:Generated_Source\PSoC4/capsense_CSHL.c **** 
1592:Generated_Source\PSoC4/capsense_CSHL.c ****         #if (capsense_ADD_SLIDER_TYPE)
1593:Generated_Source\PSoC4/capsense_CSHL.c ****             }
1594:Generated_Source\PSoC4/capsense_CSHL.c ****             else
1595:Generated_Source\PSoC4/capsense_CSHL.c ****             {
1596:Generated_Source\PSoC4/capsense_CSHL.c ****         #endif /* (capsense_ADD_SLIDER_TYPE) */
ARM GAS  C:\Users\Mykola\AppData\Local\Temp\ccSL9DbN.s 			page 46


1597:Generated_Source\PSoC4/capsense_CSHL.c **** 
1598:Generated_Source\PSoC4/capsense_CSHL.c ****             #if ((capsense_TOTAL_LINEAR_SLIDERS_COUNT > 0u) || (capsense_TOTAL_TOUCH_PADS_BASIC_COU
1599:Generated_Source\PSoC4/capsense_CSHL.c ****                 #if (capsense_IS_DIPLEX_SLIDER && capsense_IS_NON_DIPLEX_SLIDER)
1600:Generated_Source\PSoC4/capsense_CSHL.c ****                     /* Calculate next and previous near to maximum */
1601:Generated_Source\PSoC4/capsense_CSHL.c ****                     if(diplex == 0u)
1602:Generated_Source\PSoC4/capsense_CSHL.c ****                     {
1603:Generated_Source\PSoC4/capsense_CSHL.c ****                         pos     = maximum;
1604:Generated_Source\PSoC4/capsense_CSHL.c ****                         posPrev = maximum - 1u;
1605:Generated_Source\PSoC4/capsense_CSHL.c ****                         posNext = maximum + 1u;
1606:Generated_Source\PSoC4/capsense_CSHL.c ****                     }
1607:Generated_Source\PSoC4/capsense_CSHL.c ****                     else
1608:Generated_Source\PSoC4/capsense_CSHL.c ****                     {
1609:Generated_Source\PSoC4/capsense_CSHL.c ****                         pos     = diplex[maximum];
1610:Generated_Source\PSoC4/capsense_CSHL.c ****                         posPrev = diplex[maximum - 1u];
1611:Generated_Source\PSoC4/capsense_CSHL.c ****                         posNext = diplex[maximum + 1u];
1612:Generated_Source\PSoC4/capsense_CSHL.c ****                         count <<= 1u;
1613:Generated_Source\PSoC4/capsense_CSHL.c ****                     }
1614:Generated_Source\PSoC4/capsense_CSHL.c ****                 #elif (capsense_IS_DIPLEX_SLIDER)
1615:Generated_Source\PSoC4/capsense_CSHL.c ****                     /* Calculate next and previous near to maximum */
1616:Generated_Source\PSoC4/capsense_CSHL.c ****                     pos     = diplex[maximum];
1617:Generated_Source\PSoC4/capsense_CSHL.c ****                     posPrev = diplex[maximum - 1u];
1618:Generated_Source\PSoC4/capsense_CSHL.c ****                     posNext = diplex[maximum + 1u];
1619:Generated_Source\PSoC4/capsense_CSHL.c ****                     count <<= 1u;
1620:Generated_Source\PSoC4/capsense_CSHL.c ****                 #else
1621:Generated_Source\PSoC4/capsense_CSHL.c ****                     /* Calculate next and previous near to maximum */
1622:Generated_Source\PSoC4/capsense_CSHL.c ****                     if (maximum >= 1u)
 958              		.loc 1 1622 0
 959 0014 002C     		cmp	r4, #0
 960 0016 02D0     		beq	.L98
1623:Generated_Source\PSoC4/capsense_CSHL.c ****                     {
1624:Generated_Source\PSoC4/capsense_CSHL.c ****                         posPrev = maximum - 1u;
 961              		.loc 1 1624 0
 962 0018 661E     		sub	r6, r4, #1
 963 001a F6B2     		uxtb	r6, r6
 964              	.LVL105:
 965 001c 00E0     		b	.L90
 966              	.LVL106:
 967              	.L98:
1562:Generated_Source\PSoC4/capsense_CSHL.c ****         #endif /* ((capsense_TOTAL_LINEAR_SLIDERS_COUNT>0u) || (capsense_TOTAL_TOUCH_PADS_BASIC_COU
 968              		.loc 1 1562 0
 969 001e 0026     		mov	r6, #0
 970              	.LVL107:
 971              	.L90:
1625:Generated_Source\PSoC4/capsense_CSHL.c ****                     }
1626:Generated_Source\PSoC4/capsense_CSHL.c ****                     posNext = maximum + 1u;
 972              		.loc 1 1626 0
 973 0020 631C     		add	r3, r4, #1
 974 0022 DDB2     		uxtb	r5, r3
 975              	.LVL108:
1627:Generated_Source\PSoC4/capsense_CSHL.c ****                 #endif /* (capsense_IS_DIPLEX_SLIDER && capsense_IS_NON_DIPLEX_SLIDER) */
1628:Generated_Source\PSoC4/capsense_CSHL.c **** 
1629:Generated_Source\PSoC4/capsense_CSHL.c ****                 /* Copy Signal to the centroid array */
1630:Generated_Source\PSoC4/capsense_CSHL.c ****                 #if (capsense_IS_DIPLEX_SLIDER)
1631:Generated_Source\PSoC4/capsense_CSHL.c ****                     capsense_centroid[capsense_POS] = startOfSlider[pos];
1632:Generated_Source\PSoC4/capsense_CSHL.c ****                 #else
1633:Generated_Source\PSoC4/capsense_CSHL.c ****                     capsense_centroid[capsense_POS] = startOfSlider[maximum];
 976              		.loc 1 1633 0
ARM GAS  C:\Users\Mykola\AppData\Local\Temp\ccSL9DbN.s 			page 47


 977 0024 0B5D     		ldrb	r3, [r1, r4]
 978 0026 9C46     		mov	ip, r3
 979 0028 2D4B     		ldr	r3, .L99
 980 002a 2433     		add	r3, r3, #36
 981 002c 6246     		mov	r2, ip
 982              	.LVL109:
 983 002e 5A70     		strb	r2, [r3, #1]
1634:Generated_Source\PSoC4/capsense_CSHL.c ****                 #endif /* (capsense_IS_DIPLEX_SLIDER) */
1635:Generated_Source\PSoC4/capsense_CSHL.c **** 
1636:Generated_Source\PSoC4/capsense_CSHL.c ****                 /* Check borders for LINEAR Slider */
1637:Generated_Source\PSoC4/capsense_CSHL.c ****                 if (maximum == 0u)                   /* Start of centroid */
 984              		.loc 1 1637 0
 985 0030 002C     		cmp	r4, #0
 986 0032 07D1     		bne	.L91
1638:Generated_Source\PSoC4/capsense_CSHL.c ****                 {
1639:Generated_Source\PSoC4/capsense_CSHL.c ****                     capsense_centroid[capsense_POS_PREV] = 0u;
 987              		.loc 1 1639 0
 988 0034 2A4B     		ldr	r3, .L99
 989 0036 0026     		mov	r6, #0
 990              	.LVL110:
 991 0038 2422     		mov	r2, #36
 992 003a 9E54     		strb	r6, [r3, r2]
1640:Generated_Source\PSoC4/capsense_CSHL.c ****                     capsense_centroid[capsense_POS_NEXT] = startOfSlider[posNext];
 993              		.loc 1 1640 0
 994 003c 4A5D     		ldrb	r2, [r1, r5]
 995 003e 2433     		add	r3, r3, #36
 996 0040 9A70     		strb	r2, [r3, #2]
 997 0042 12E0     		b	.L92
 998              	.LVL111:
 999              	.L91:
1641:Generated_Source\PSoC4/capsense_CSHL.c ****                 }
1642:Generated_Source\PSoC4/capsense_CSHL.c ****                 else if (maximum == ((count) - 1u)) /* End of centroid */
 1000              		.loc 1 1642 0
 1001 0044 019A     		ldr	r2, [sp, #4]
 1002 0046 013A     		sub	r2, r2, #1
 1003 0048 9442     		cmp	r4, r2
 1004 004a 07D1     		bne	.L93
1643:Generated_Source\PSoC4/capsense_CSHL.c ****                 {
1644:Generated_Source\PSoC4/capsense_CSHL.c ****                     capsense_centroid[capsense_POS_PREV] = startOfSlider[posPrev];
 1005              		.loc 1 1644 0
 1006 004c 895D     		ldrb	r1, [r1, r6]
 1007              	.LVL112:
 1008 004e 244B     		ldr	r3, .L99
 1009 0050 2422     		mov	r2, #36
 1010 0052 9954     		strb	r1, [r3, r2]
1645:Generated_Source\PSoC4/capsense_CSHL.c ****                     capsense_centroid[capsense_POS_NEXT] = 0u;
 1011              		.loc 1 1645 0
 1012 0054 2433     		add	r3, r3, #36
 1013 0056 0022     		mov	r2, #0
 1014 0058 9A70     		strb	r2, [r3, #2]
 1015 005a 06E0     		b	.L92
 1016              	.LVL113:
 1017              	.L93:
1646:Generated_Source\PSoC4/capsense_CSHL.c ****                 }
1647:Generated_Source\PSoC4/capsense_CSHL.c ****                 else                                /* Not first Not last */
1648:Generated_Source\PSoC4/capsense_CSHL.c ****                 {
1649:Generated_Source\PSoC4/capsense_CSHL.c ****                     capsense_centroid[capsense_POS_PREV] = startOfSlider[posPrev];
ARM GAS  C:\Users\Mykola\AppData\Local\Temp\ccSL9DbN.s 			page 48


 1018              		.loc 1 1649 0
 1019 005c 8E5D     		ldrb	r6, [r1, r6]
 1020              	.LVL114:
 1021 005e 204B     		ldr	r3, .L99
 1022 0060 2422     		mov	r2, #36
 1023 0062 9E54     		strb	r6, [r3, r2]
1650:Generated_Source\PSoC4/capsense_CSHL.c ****                     capsense_centroid[capsense_POS_NEXT] = startOfSlider[posNext];
 1024              		.loc 1 1650 0
 1025 0064 4A5D     		ldrb	r2, [r1, r5]
 1026 0066 2433     		add	r3, r3, #36
 1027 0068 9A70     		strb	r2, [r3, #2]
 1028              	.LVL115:
 1029              	.L92:
1651:Generated_Source\PSoC4/capsense_CSHL.c ****                 }
1652:Generated_Source\PSoC4/capsense_CSHL.c ****             #endif /* ((capsense_TOTAL_LINEAR_SLIDERS_COUNT>0u)||(capsense_TOTAL_TOUCH_PADS_BASIC_C
1653:Generated_Source\PSoC4/capsense_CSHL.c **** 
1654:Generated_Source\PSoC4/capsense_CSHL.c ****         #if (capsense_ADD_SLIDER_TYPE)
1655:Generated_Source\PSoC4/capsense_CSHL.c ****             }
1656:Generated_Source\PSoC4/capsense_CSHL.c ****         #endif /* (capsense_ADD_SLIDER_TYPE) */
1657:Generated_Source\PSoC4/capsense_CSHL.c **** 
1658:Generated_Source\PSoC4/capsense_CSHL.c ****         /* Subtract noiseThreshold */
1659:Generated_Source\PSoC4/capsense_CSHL.c ****         if(capsense_centroid[capsense_POS_PREV] > noiseThreshold)
 1030              		.loc 1 1659 0
 1031 006a 2423     		mov	r3, #36
 1032 006c 1C4A     		ldr	r2, .L99
 1033 006e D35C     		ldrb	r3, [r2, r3]
 1034 0070 8342     		cmp	r3, r0
 1035 0072 04D9     		bls	.L94
1660:Generated_Source\PSoC4/capsense_CSHL.c ****         {
1661:Generated_Source\PSoC4/capsense_CSHL.c ****             capsense_centroid[capsense_POS_PREV] -= noiseThreshold;
 1036              		.loc 1 1661 0
 1037 0074 1B1A     		sub	r3, r3, r0
 1038 0076 2422     		mov	r2, #36
 1039 0078 1949     		ldr	r1, .L99
 1040 007a 8B54     		strb	r3, [r1, r2]
 1041 007c 03E0     		b	.L95
 1042              	.L94:
1662:Generated_Source\PSoC4/capsense_CSHL.c ****         }
1663:Generated_Source\PSoC4/capsense_CSHL.c ****         else
1664:Generated_Source\PSoC4/capsense_CSHL.c ****         {
1665:Generated_Source\PSoC4/capsense_CSHL.c ****             capsense_centroid[capsense_POS_PREV] = 0u;
 1043              		.loc 1 1665 0
 1044 007e 0021     		mov	r1, #0
 1045 0080 2423     		mov	r3, #36
 1046 0082 174A     		ldr	r2, .L99
 1047 0084 D154     		strb	r1, [r2, r3]
 1048              	.L95:
1666:Generated_Source\PSoC4/capsense_CSHL.c ****         }
1667:Generated_Source\PSoC4/capsense_CSHL.c **** 
1668:Generated_Source\PSoC4/capsense_CSHL.c ****         /* Maximum always greater than fingerThreshold, so greater than noiseThreshold */
1669:Generated_Source\PSoC4/capsense_CSHL.c ****         capsense_centroid[capsense_POS] -= noiseThreshold;
 1049              		.loc 1 1669 0
 1050 0086 164A     		ldr	r2, .L99
 1051 0088 2432     		add	r2, r2, #36
 1052 008a 5378     		ldrb	r3, [r2, #1]
 1053 008c 1B1A     		sub	r3, r3, r0
 1054 008e DBB2     		uxtb	r3, r3
ARM GAS  C:\Users\Mykola\AppData\Local\Temp\ccSL9DbN.s 			page 49


 1055 0090 5370     		strb	r3, [r2, #1]
1670:Generated_Source\PSoC4/capsense_CSHL.c **** 
1671:Generated_Source\PSoC4/capsense_CSHL.c ****         /* Subtract noiseThreshold */
1672:Generated_Source\PSoC4/capsense_CSHL.c ****         if(capsense_centroid[capsense_POS_NEXT] > noiseThreshold)
 1056              		.loc 1 1672 0
 1057 0092 9278     		ldrb	r2, [r2, #2]
 1058 0094 8242     		cmp	r2, r0
 1059 0096 04D9     		bls	.L96
1673:Generated_Source\PSoC4/capsense_CSHL.c ****         {
1674:Generated_Source\PSoC4/capsense_CSHL.c ****             capsense_centroid[capsense_POS_NEXT] -= noiseThreshold;
 1060              		.loc 1 1674 0
 1061 0098 101A     		sub	r0, r2, r0
 1062 009a 114A     		ldr	r2, .L99
 1063 009c 2432     		add	r2, r2, #36
 1064 009e 9070     		strb	r0, [r2, #2]
 1065 00a0 03E0     		b	.L97
 1066              	.L96:
1675:Generated_Source\PSoC4/capsense_CSHL.c ****         }
1676:Generated_Source\PSoC4/capsense_CSHL.c ****         else
1677:Generated_Source\PSoC4/capsense_CSHL.c ****         {
1678:Generated_Source\PSoC4/capsense_CSHL.c ****             capsense_centroid[capsense_POS_NEXT] = 0u;
 1067              		.loc 1 1678 0
 1068 00a2 0021     		mov	r1, #0
 1069 00a4 0E4A     		ldr	r2, .L99
 1070 00a6 2432     		add	r2, r2, #36
 1071 00a8 9170     		strb	r1, [r2, #2]
 1072              	.L97:
1679:Generated_Source\PSoC4/capsense_CSHL.c ****         }
1680:Generated_Source\PSoC4/capsense_CSHL.c **** 
1681:Generated_Source\PSoC4/capsense_CSHL.c **** 
1682:Generated_Source\PSoC4/capsense_CSHL.c ****         /* Si+1 - Si-1 */
1683:Generated_Source\PSoC4/capsense_CSHL.c ****         numerator = (uint32) capsense_centroid[capsense_POS_NEXT] -
 1073              		.loc 1 1683 0
 1074 00aa 0D49     		ldr	r1, .L99
 1075 00ac 0A1C     		mov	r2, r1
 1076 00ae 2432     		add	r2, r2, #36
 1077 00b0 9278     		ldrb	r2, [r2, #2]
1684:Generated_Source\PSoC4/capsense_CSHL.c ****                     (uint32) capsense_centroid[capsense_POS_PREV];
 1078              		.loc 1 1684 0
 1079 00b2 2420     		mov	r0, #36
 1080 00b4 095C     		ldrb	r1, [r1, r0]
1683:Generated_Source\PSoC4/capsense_CSHL.c ****                     (uint32) capsense_centroid[capsense_POS_PREV];
 1081              		.loc 1 1683 0
 1082 00b6 501A     		sub	r0, r2, r1
 1083              	.LVL116:
1685:Generated_Source\PSoC4/capsense_CSHL.c **** 
1686:Generated_Source\PSoC4/capsense_CSHL.c ****         /* Si+1 + Si + Si-1 */
1687:Generated_Source\PSoC4/capsense_CSHL.c ****         denominator = (int32) capsense_centroid[capsense_POS_PREV] +
 1084              		.loc 1 1687 0
 1085 00b8 C918     		add	r1, r1, r3
 1086 00ba 8918     		add	r1, r1, r2
 1087              	.LVL117:
1688:Generated_Source\PSoC4/capsense_CSHL.c ****                       (int32) capsense_centroid[capsense_POS] +
1689:Generated_Source\PSoC4/capsense_CSHL.c ****                       (int32) capsense_centroid[capsense_POS_NEXT];
1690:Generated_Source\PSoC4/capsense_CSHL.c **** 
1691:Generated_Source\PSoC4/capsense_CSHL.c ****         /* (numerator/denominator) + maximum */
1692:Generated_Source\PSoC4/capsense_CSHL.c ****         denominator = (((int32)(uint32)((uint32)numerator << 8u)/denominator) + (int32)(uint32)((ui
ARM GAS  C:\Users\Mykola\AppData\Local\Temp\ccSL9DbN.s 			page 50


 1088              		.loc 1 1692 0
 1089 00bc 0002     		lsl	r0, r0, #8
 1090              	.LVL118:
 1091 00be FFF7FEFF 		bl	__aeabi_idiv
 1092              	.LVL119:
 1093 00c2 2402     		lsl	r4, r4, #8
 1094 00c4 0419     		add	r4, r0, r4
 1095              	.LVL120:
1693:Generated_Source\PSoC4/capsense_CSHL.c **** 
1694:Generated_Source\PSoC4/capsense_CSHL.c ****         #if(capsense_TOTAL_RADIAL_SLIDERS_COUNT > 0u)
1695:Generated_Source\PSoC4/capsense_CSHL.c ****             /* Only required for RADIAL Slider */
1696:Generated_Source\PSoC4/capsense_CSHL.c ****             if(denominator < 0)
1697:Generated_Source\PSoC4/capsense_CSHL.c ****             {
1698:Generated_Source\PSoC4/capsense_CSHL.c ****                 denominator += (int32)((uint16)((uint16) count << 8u));
1699:Generated_Source\PSoC4/capsense_CSHL.c ****             }
1700:Generated_Source\PSoC4/capsense_CSHL.c ****         #endif /* (capsense_TOTAL_RADIAL_SLIDERS_COUNT > 0u) */
1701:Generated_Source\PSoC4/capsense_CSHL.c **** 
1702:Generated_Source\PSoC4/capsense_CSHL.c ****         denominator *= (int16)resolution;
 1096              		.loc 1 1702 0
 1097 00c6 6B46     		mov	r3, sp
 1098 00c8 0020     		mov	r0, #0
 1099 00ca 185E     		ldrsh	r0, [r3, r0]
 1100 00cc 6043     		mul	r0, r4
 1101              	.LVL121:
1703:Generated_Source\PSoC4/capsense_CSHL.c **** 
1704:Generated_Source\PSoC4/capsense_CSHL.c ****         /* Round result and put it to uint8 */
1705:Generated_Source\PSoC4/capsense_CSHL.c ****         position = ((uint8) HI16((uint32)denominator + capsense_CENTROID_ROUND_VALUE));
 1102              		.loc 1 1705 0
 1103 00ce FE23     		mov	r3, #254
 1104 00d0 DB01     		lsl	r3, r3, #7
 1105 00d2 9C46     		mov	ip, r3
 1106 00d4 6044     		add	r0, r0, ip
 1107              	.LVL122:
 1108 00d6 000C     		lsr	r0, r0, #16
 1109              	.LVL123:
 1110 00d8 C0B2     		uxtb	r0, r0
 1111              	.LVL124:
1706:Generated_Source\PSoC4/capsense_CSHL.c **** 
1707:Generated_Source\PSoC4/capsense_CSHL.c ****         return (position);
1708:Generated_Source\PSoC4/capsense_CSHL.c ****     }
 1112              		.loc 1 1708 0
 1113 00da 03B0     		add	sp, sp, #12
 1114              	.LVL125:
 1115              		@ sp needed
 1116              	.LVL126:
 1117              	.LVL127:
 1118 00dc F0BD     		pop	{r4, r5, r6, r7, pc}
 1119              	.L100:
 1120 00de C046     		.align	2
 1121              	.L99:
 1122 00e0 00000000 		.word	.LANCHOR0
 1123              		.cfi_endproc
 1124              	.LFE63:
 1125              		.size	capsense_CalcCentroid, .-capsense_CalcCentroid
 1126              		.section	.text.capsense_GetRadialCentroidPos,"ax",%progbits
 1127              		.align	2
 1128              		.global	capsense_GetRadialCentroidPos
ARM GAS  C:\Users\Mykola\AppData\Local\Temp\ccSL9DbN.s 			page 51


 1129              		.code	16
 1130              		.thumb_func
 1131              		.type	capsense_GetRadialCentroidPos, %function
 1132              	capsense_GetRadialCentroidPos:
 1133              	.LFB65:
1709:Generated_Source\PSoC4/capsense_CSHL.c **** #endif /* (capsense_TOTAL_CENTROIDS_BASIC_COUNT) */
1710:Generated_Source\PSoC4/capsense_CSHL.c **** 
1711:Generated_Source\PSoC4/capsense_CSHL.c **** 
1712:Generated_Source\PSoC4/capsense_CSHL.c **** #if((capsense_TOTAL_RADIAL_SLIDERS_COUNT > 0u) || (capsense_TOTAL_LINEAR_SLIDERS_COUNT > 0u))
1713:Generated_Source\PSoC4/capsense_CSHL.c ****     /*******************************************************************************
1714:Generated_Source\PSoC4/capsense_CSHL.c ****     * Function Name: capsense_GetCentroidPos
1715:Generated_Source\PSoC4/capsense_CSHL.c ****     ********************************************************************************
1716:Generated_Source\PSoC4/capsense_CSHL.c ****     *
1717:Generated_Source\PSoC4/capsense_CSHL.c ****     * Summary:
1718:Generated_Source\PSoC4/capsense_CSHL.c ****     *  Checks the capsense_Signal[ ] array for a centroid within
1719:Generated_Source\PSoC4/capsense_CSHL.c ****     *  a slider specified range. The centroid position is calculated according to the resolution
1720:Generated_Source\PSoC4/capsense_CSHL.c ****     *  specified in the CapSense customizer. The position filters are applied to the
1721:Generated_Source\PSoC4/capsense_CSHL.c ****     *  result if enabled.
1722:Generated_Source\PSoC4/capsense_CSHL.c ****     *
1723:Generated_Source\PSoC4/capsense_CSHL.c ****     * Parameters:
1724:Generated_Source\PSoC4/capsense_CSHL.c ****     *  widget:  Widget number.
1725:Generated_Source\PSoC4/capsense_CSHL.c ****     *  For every linear slider widget there are defines in this format:
1726:Generated_Source\PSoC4/capsense_CSHL.c ****     *  #define capsense_"widget_name"__LS           5
1727:Generated_Source\PSoC4/capsense_CSHL.c ****     *
1728:Generated_Source\PSoC4/capsense_CSHL.c ****     * Return:
1729:Generated_Source\PSoC4/capsense_CSHL.c ****     *  Returns a position value of the linear slider.
1730:Generated_Source\PSoC4/capsense_CSHL.c ****     *
1731:Generated_Source\PSoC4/capsense_CSHL.c ****     * Global Variables:
1732:Generated_Source\PSoC4/capsense_CSHL.c ****     *  None
1733:Generated_Source\PSoC4/capsense_CSHL.c ****     *
1734:Generated_Source\PSoC4/capsense_CSHL.c ****     * Side Effects:
1735:Generated_Source\PSoC4/capsense_CSHL.c ****     *  If any sensor within the slider widget is active, the function returns values
1736:Generated_Source\PSoC4/capsense_CSHL.c ****     *  from zero to the API resolution value set in the CapSense customizer. If no
1737:Generated_Source\PSoC4/capsense_CSHL.c ****     *  sensors are active, the function returns 0xFFFF. If an error occurs during
1738:Generated_Source\PSoC4/capsense_CSHL.c ****     *  execution of the centroid/diplexing algorithm, the function returns 0xFFFF.
1739:Generated_Source\PSoC4/capsense_CSHL.c ****     *  There are no checks of the widget type argument provided to this function.
1740:Generated_Source\PSoC4/capsense_CSHL.c ****     *  The unproper widget type provided will cause unexpected position calculations.
1741:Generated_Source\PSoC4/capsense_CSHL.c ****     *
1742:Generated_Source\PSoC4/capsense_CSHL.c ****     * Note:
1743:Generated_Source\PSoC4/capsense_CSHL.c ****     *  If noise counts on the slider segments are greater than the noise
1744:Generated_Source\PSoC4/capsense_CSHL.c ****     *  threshold, this subroutine may generate a false centroid result. The noise
1745:Generated_Source\PSoC4/capsense_CSHL.c ****     *  threshold should be set carefully (high enough above the noise level) so
1746:Generated_Source\PSoC4/capsense_CSHL.c ****     *  that noise will not generate a false centroid.
1747:Generated_Source\PSoC4/capsense_CSHL.c ****     *******************************************************************************/
1748:Generated_Source\PSoC4/capsense_CSHL.c ****     uint16 capsense_GetCentroidPos(uint32 widget)
1749:Generated_Source\PSoC4/capsense_CSHL.c ****     {
1750:Generated_Source\PSoC4/capsense_CSHL.c ****         #if (capsense_IS_DIPLEX_SLIDER)
1751:Generated_Source\PSoC4/capsense_CSHL.c ****             const uint8 *diplex;
1752:Generated_Source\PSoC4/capsense_CSHL.c ****         #endif /* (capsense_IS_DIPLEX_SLIDER) */
1753:Generated_Source\PSoC4/capsense_CSHL.c **** 
1754:Generated_Source\PSoC4/capsense_CSHL.c ****         #if (0u != capsense_LINEAR_SLIDERS_POS_FILTERS_MASK)
1755:Generated_Source\PSoC4/capsense_CSHL.c ****             uint8 posIndex;
1756:Generated_Source\PSoC4/capsense_CSHL.c ****             uint8 firstTimeIndex = capsense_posFiltersData[widget];
1757:Generated_Source\PSoC4/capsense_CSHL.c ****             uint8 posFiltersMask = capsense_posFiltersMask[widget];
1758:Generated_Source\PSoC4/capsense_CSHL.c ****         #endif /* (0u != capsense_LINEAR_SLIDERS_POS_FILTERS_MASK) */
1759:Generated_Source\PSoC4/capsense_CSHL.c **** 
1760:Generated_Source\PSoC4/capsense_CSHL.c ****         #if ((0u != (capsense_MEDIAN_FILTER & capsense_LINEAR_SLIDERS_POS_FILTERS_MASK)) || \
ARM GAS  C:\Users\Mykola\AppData\Local\Temp\ccSL9DbN.s 			page 52


1761:Generated_Source\PSoC4/capsense_CSHL.c ****              (0u != (capsense_AVERAGING_FILTER & capsense_LINEAR_SLIDERS_POS_FILTERS_MASK)))
1762:Generated_Source\PSoC4/capsense_CSHL.c ****             uint8 tempPos;
1763:Generated_Source\PSoC4/capsense_CSHL.c ****         #endif /* ((0u != (capsense_MEDIAN_FILTER & capsense_LINEAR_SLIDERS_POS_FILTERS_MASK)) || \
1764:Generated_Source\PSoC4/capsense_CSHL.c ****                *   (0u != (capsense_AVERAGING_FILTER & capsense_LINEAR_SLIDERS_POS_FILTERS_MASK)))
1765:Generated_Source\PSoC4/capsense_CSHL.c ****                */
1766:Generated_Source\PSoC4/capsense_CSHL.c **** 
1767:Generated_Source\PSoC4/capsense_CSHL.c ****         uint8 maximum;
1768:Generated_Source\PSoC4/capsense_CSHL.c ****         uint16 position;
1769:Generated_Source\PSoC4/capsense_CSHL.c ****         uint8 offset = capsense_rawDataIndex[widget];
1770:Generated_Source\PSoC4/capsense_CSHL.c ****         uint8 count = capsense_numberOfSensors[widget];
1771:Generated_Source\PSoC4/capsense_CSHL.c **** 
1772:Generated_Source\PSoC4/capsense_CSHL.c ****         #if (capsense_IS_DIPLEX_SLIDER)
1773:Generated_Source\PSoC4/capsense_CSHL.c ****             if(widget < capsense_TOTAL_DIPLEXED_SLIDERS_COUNT)
1774:Generated_Source\PSoC4/capsense_CSHL.c ****             {
1775:Generated_Source\PSoC4/capsense_CSHL.c ****                 maximum = capsense_diplexTable[widget];
1776:Generated_Source\PSoC4/capsense_CSHL.c ****                 diplex = &capsense_diplexTable[maximum];
1777:Generated_Source\PSoC4/capsense_CSHL.c ****             }
1778:Generated_Source\PSoC4/capsense_CSHL.c ****             else
1779:Generated_Source\PSoC4/capsense_CSHL.c ****             {
1780:Generated_Source\PSoC4/capsense_CSHL.c ****                 diplex = 0u;
1781:Generated_Source\PSoC4/capsense_CSHL.c ****             }
1782:Generated_Source\PSoC4/capsense_CSHL.c ****         #endif /* (capsense_IS_DIPLEX_SLIDER) */
1783:Generated_Source\PSoC4/capsense_CSHL.c **** 
1784:Generated_Source\PSoC4/capsense_CSHL.c ****         /* Find Maximum within centroid */
1785:Generated_Source\PSoC4/capsense_CSHL.c ****         #if (capsense_IS_DIPLEX_SLIDER)
1786:Generated_Source\PSoC4/capsense_CSHL.c ****             maximum = capsense_FindMaximum(offset, count, (uint8)capsense_fingerThreshold[widget], 
1787:Generated_Source\PSoC4/capsense_CSHL.c ****         #else
1788:Generated_Source\PSoC4/capsense_CSHL.c ****             maximum = capsense_FindMaximum(offset, count, (uint8)capsense_fingerThreshold[widget]);
1789:Generated_Source\PSoC4/capsense_CSHL.c ****         #endif /* (capsense_IS_DIPLEX_SLIDER) */
1790:Generated_Source\PSoC4/capsense_CSHL.c **** 
1791:Generated_Source\PSoC4/capsense_CSHL.c ****         if (maximum != 0xFFu)
1792:Generated_Source\PSoC4/capsense_CSHL.c ****         {
1793:Generated_Source\PSoC4/capsense_CSHL.c ****             /* Calculate centroid */
1794:Generated_Source\PSoC4/capsense_CSHL.c ****             position = (uint16) capsense_CalcCentroid(maximum,
1795:Generated_Source\PSoC4/capsense_CSHL.c ****                          offset, count, capsense_centroidMult[widget], capsense_noiseThreshold[widg
1796:Generated_Source\PSoC4/capsense_CSHL.c **** 
1797:Generated_Source\PSoC4/capsense_CSHL.c ****             #if (0u != capsense_LINEAR_SLIDERS_POS_FILTERS_MASK)
1798:Generated_Source\PSoC4/capsense_CSHL.c ****                 /* Check if this linear slider has enabled filters */
1799:Generated_Source\PSoC4/capsense_CSHL.c ****                 if (0u != (posFiltersMask & capsense_ANY_POS_FILTER))
1800:Generated_Source\PSoC4/capsense_CSHL.c ****                 {
1801:Generated_Source\PSoC4/capsense_CSHL.c ****                     /* Calculate position to store filters data */
1802:Generated_Source\PSoC4/capsense_CSHL.c ****                     posIndex  = firstTimeIndex + 1u;
1803:Generated_Source\PSoC4/capsense_CSHL.c **** 
1804:Generated_Source\PSoC4/capsense_CSHL.c ****                     if (0u == capsense_posFiltersData[firstTimeIndex])
1805:Generated_Source\PSoC4/capsense_CSHL.c ****                     {
1806:Generated_Source\PSoC4/capsense_CSHL.c ****                         /* Init filters */
1807:Generated_Source\PSoC4/capsense_CSHL.c ****                         capsense_posFiltersData[posIndex] = (uint8) position;
1808:Generated_Source\PSoC4/capsense_CSHL.c ****                         #if ((0u != (capsense_MEDIAN_FILTER & \
1809:Generated_Source\PSoC4/capsense_CSHL.c ****                                      capsense_LINEAR_SLIDERS_POS_FILTERS_MASK)) || \
1810:Generated_Source\PSoC4/capsense_CSHL.c ****                              (0u != (capsense_AVERAGING_FILTER & \
1811:Generated_Source\PSoC4/capsense_CSHL.c ****                                      capsense_LINEAR_SLIDERS_POS_FILTERS_MASK)))
1812:Generated_Source\PSoC4/capsense_CSHL.c **** 
1813:Generated_Source\PSoC4/capsense_CSHL.c ****                             if ( (0u != (posFiltersMask & capsense_MEDIAN_FILTER)) ||
1814:Generated_Source\PSoC4/capsense_CSHL.c ****                                  (0u != (posFiltersMask & capsense_AVERAGING_FILTER)) )
1815:Generated_Source\PSoC4/capsense_CSHL.c ****                             {
1816:Generated_Source\PSoC4/capsense_CSHL.c ****                                 capsense_posFiltersData[posIndex + 1u] = (uint8) position;
1817:Generated_Source\PSoC4/capsense_CSHL.c ****                             }
ARM GAS  C:\Users\Mykola\AppData\Local\Temp\ccSL9DbN.s 			page 53


1818:Generated_Source\PSoC4/capsense_CSHL.c ****                         #endif /* ((0u != (capsense_MEDIAN_FILTER & \
1819:Generated_Source\PSoC4/capsense_CSHL.c ****                                *           capsense_LINEAR_SLIDERS_POS_FILTERS_MASK)) || \
1820:Generated_Source\PSoC4/capsense_CSHL.c ****                                *   (0u != (capsense_AVERAGING_FILTER & \
1821:Generated_Source\PSoC4/capsense_CSHL.c ****                                *           capsense_LINEAR_SLIDERS_POS_FILTERS_MASK)))
1822:Generated_Source\PSoC4/capsense_CSHL.c ****                                */
1823:Generated_Source\PSoC4/capsense_CSHL.c **** 
1824:Generated_Source\PSoC4/capsense_CSHL.c ****                         capsense_posFiltersData[firstTimeIndex] = 1u;
1825:Generated_Source\PSoC4/capsense_CSHL.c ****                     }
1826:Generated_Source\PSoC4/capsense_CSHL.c ****                     else
1827:Generated_Source\PSoC4/capsense_CSHL.c ****                     {
1828:Generated_Source\PSoC4/capsense_CSHL.c ****                         /* Do filtering */
1829:Generated_Source\PSoC4/capsense_CSHL.c ****                         #if (0u != (capsense_MEDIAN_FILTER & capsense_LINEAR_SLIDERS_POS_FILTERS_MA
1830:Generated_Source\PSoC4/capsense_CSHL.c ****                             if (0u != (posFiltersMask & capsense_MEDIAN_FILTER))
1831:Generated_Source\PSoC4/capsense_CSHL.c ****                             {
1832:Generated_Source\PSoC4/capsense_CSHL.c ****                                 tempPos = (uint8) position;
1833:Generated_Source\PSoC4/capsense_CSHL.c ****                                 position = capsense_MedianFilter(position,
1834:Generated_Source\PSoC4/capsense_CSHL.c ****                                                                 (uint16)capsense_posFiltersData[pos
1835:Generated_Source\PSoC4/capsense_CSHL.c ****                                                                 (uint16)capsense_posFiltersData[pos
1836:Generated_Source\PSoC4/capsense_CSHL.c ****                                 capsense_posFiltersData[posIndex + 1u] =
1837:Generated_Source\PSoC4/capsense_CSHL.c ****                                                                              capsense_posFiltersDat
1838:Generated_Source\PSoC4/capsense_CSHL.c ****                                 capsense_posFiltersData[posIndex] = tempPos;
1839:Generated_Source\PSoC4/capsense_CSHL.c ****                             }
1840:Generated_Source\PSoC4/capsense_CSHL.c ****                         #endif /*(0u != (capsense_MEDIAN_FILTER &
1841:Generated_Source\PSoC4/capsense_CSHL.c ****                                *         capsense_LINEAR_SLIDERS_POS_FILTERS_MASK))
1842:Generated_Source\PSoC4/capsense_CSHL.c ****                                */
1843:Generated_Source\PSoC4/capsense_CSHL.c **** 
1844:Generated_Source\PSoC4/capsense_CSHL.c ****                         #if(0u!=(capsense_AVERAGING_FILTER & capsense_LINEAR_SLIDERS_POS_FILTERS_MA
1845:Generated_Source\PSoC4/capsense_CSHL.c ****                             if (0u != (posFiltersMask & capsense_AVERAGING_FILTER))
1846:Generated_Source\PSoC4/capsense_CSHL.c ****                             {
1847:Generated_Source\PSoC4/capsense_CSHL.c ****                                 tempPos = (uint8) position;
1848:Generated_Source\PSoC4/capsense_CSHL.c ****                                 position = capsense_AveragingFilter(position,
1849:Generated_Source\PSoC4/capsense_CSHL.c ****                                                                 (uint16)capsense_posFiltersData[pos
1850:Generated_Source\PSoC4/capsense_CSHL.c ****                                                                 (uint16)capsense_posFiltersData[pos
1851:Generated_Source\PSoC4/capsense_CSHL.c ****                                 capsense_posFiltersData[posIndex+1u]=capsense_posFiltersData[posInd
1852:Generated_Source\PSoC4/capsense_CSHL.c ****                                 capsense_posFiltersData[posIndex] = tempPos;
1853:Generated_Source\PSoC4/capsense_CSHL.c ****                             }
1854:Generated_Source\PSoC4/capsense_CSHL.c ****                         #endif /* (0u != (capsense_AVERAGING_FILTER & \
1855:Generated_Source\PSoC4/capsense_CSHL.c ****                                *           capsense_LINEAR_SLIDERS_POS_FILTERS_MASK))
1856:Generated_Source\PSoC4/capsense_CSHL.c ****                                */
1857:Generated_Source\PSoC4/capsense_CSHL.c **** 
1858:Generated_Source\PSoC4/capsense_CSHL.c ****                         #if (0u != (capsense_IIR2_FILTER & capsense_LINEAR_SLIDERS_POS_FILTERS_MASK
1859:Generated_Source\PSoC4/capsense_CSHL.c ****                             if (0u != (posFiltersMask & capsense_IIR2_FILTER))
1860:Generated_Source\PSoC4/capsense_CSHL.c ****                             {
1861:Generated_Source\PSoC4/capsense_CSHL.c ****                                 position = capsense_IIR2Filter(position,
1862:Generated_Source\PSoC4/capsense_CSHL.c ****                                                                     (uint16)capsense_posFiltersData
1863:Generated_Source\PSoC4/capsense_CSHL.c ****                                 capsense_posFiltersData[posIndex] = (uint8) position;
1864:Generated_Source\PSoC4/capsense_CSHL.c ****                             }
1865:Generated_Source\PSoC4/capsense_CSHL.c ****                         #endif /* (0u != (capsense_IIR2_FILTER & \
1866:Generated_Source\PSoC4/capsense_CSHL.c ****                                *          capsense_LINEAR_SLIDERS_POS_FILTERS_MASK))
1867:Generated_Source\PSoC4/capsense_CSHL.c ****                                */
1868:Generated_Source\PSoC4/capsense_CSHL.c **** 
1869:Generated_Source\PSoC4/capsense_CSHL.c ****                         #if (0u != (capsense_IIR4_FILTER & capsense_LINEAR_SLIDERS_POS_FILTERS_MASK
1870:Generated_Source\PSoC4/capsense_CSHL.c ****                             if (0u != (posFiltersMask & capsense_IIR4_FILTER))
1871:Generated_Source\PSoC4/capsense_CSHL.c ****                             {
1872:Generated_Source\PSoC4/capsense_CSHL.c ****                                 position = capsense_IIR4Filter(position,
1873:Generated_Source\PSoC4/capsense_CSHL.c ****                                                                     (uint16)capsense_posFiltersData
1874:Generated_Source\PSoC4/capsense_CSHL.c ****                                 capsense_posFiltersData[posIndex] = (uint8) position;
ARM GAS  C:\Users\Mykola\AppData\Local\Temp\ccSL9DbN.s 			page 54


1875:Generated_Source\PSoC4/capsense_CSHL.c ****                             }
1876:Generated_Source\PSoC4/capsense_CSHL.c ****                         #endif /* (0u != (capsense_IIR4_FILTER & \
1877:Generated_Source\PSoC4/capsense_CSHL.c ****                                *          capsense_LINEAR_SLIDERS_POS_FILTERS_MASK))
1878:Generated_Source\PSoC4/capsense_CSHL.c ****                                */
1879:Generated_Source\PSoC4/capsense_CSHL.c **** 
1880:Generated_Source\PSoC4/capsense_CSHL.c ****                         #if (0u != (capsense_JITTER_FILTER & capsense_LINEAR_SLIDERS_POS_FILTERS_MA
1881:Generated_Source\PSoC4/capsense_CSHL.c ****                             if (0u != (posFiltersMask & capsense_JITTER_FILTER))
1882:Generated_Source\PSoC4/capsense_CSHL.c ****                             {
1883:Generated_Source\PSoC4/capsense_CSHL.c ****                                 position = capsense_JitterFilter(position,
1884:Generated_Source\PSoC4/capsense_CSHL.c ****                                                                     (uint16)capsense_posFiltersData
1885:Generated_Source\PSoC4/capsense_CSHL.c ****                                 capsense_posFiltersData[posIndex] = (uint8) position;
1886:Generated_Source\PSoC4/capsense_CSHL.c ****                             }
1887:Generated_Source\PSoC4/capsense_CSHL.c ****                         #endif /* (0u != (capsense_JITTER_FILTER & \
1888:Generated_Source\PSoC4/capsense_CSHL.c ****                                *           capsense_LINEAR_SLIDERS_POS_FILTERS_MASK))
1889:Generated_Source\PSoC4/capsense_CSHL.c ****                                */
1890:Generated_Source\PSoC4/capsense_CSHL.c ****                     }
1891:Generated_Source\PSoC4/capsense_CSHL.c ****                 }
1892:Generated_Source\PSoC4/capsense_CSHL.c ****             #endif /* (0u != capsense_LINEAR_SLIDERS_POS_FILTERS_MASK) */
1893:Generated_Source\PSoC4/capsense_CSHL.c **** 
1894:Generated_Source\PSoC4/capsense_CSHL.c ****         }
1895:Generated_Source\PSoC4/capsense_CSHL.c ****         else
1896:Generated_Source\PSoC4/capsense_CSHL.c ****         {
1897:Generated_Source\PSoC4/capsense_CSHL.c ****             /* Maximum wasn't found */
1898:Generated_Source\PSoC4/capsense_CSHL.c ****             position = 0xFFFFu;
1899:Generated_Source\PSoC4/capsense_CSHL.c **** 
1900:Generated_Source\PSoC4/capsense_CSHL.c ****             #if(0u != capsense_LINEAR_SLIDERS_POS_FILTERS_MASK)
1901:Generated_Source\PSoC4/capsense_CSHL.c ****                 /* Reset filters */
1902:Generated_Source\PSoC4/capsense_CSHL.c ****                 if(0u != (posFiltersMask & capsense_ANY_POS_FILTER))
1903:Generated_Source\PSoC4/capsense_CSHL.c ****                 {
1904:Generated_Source\PSoC4/capsense_CSHL.c ****                     capsense_posFiltersData[firstTimeIndex] = 0u;
1905:Generated_Source\PSoC4/capsense_CSHL.c ****                 }
1906:Generated_Source\PSoC4/capsense_CSHL.c ****             #endif /* (0u != capsense_LINEAR_SLIDERS_POS_FILTERS_MASK) */
1907:Generated_Source\PSoC4/capsense_CSHL.c ****         }
1908:Generated_Source\PSoC4/capsense_CSHL.c **** 
1909:Generated_Source\PSoC4/capsense_CSHL.c **** 
1910:Generated_Source\PSoC4/capsense_CSHL.c ****         return (position);
1911:Generated_Source\PSoC4/capsense_CSHL.c ****     }
1912:Generated_Source\PSoC4/capsense_CSHL.c **** #endif /* ((capsense_TOTAL_RADIAL_SLIDERS_COUNT > 0u) || (capsense_TOTAL_LINEAR_SLIDERS_COUNT > 0u)
1913:Generated_Source\PSoC4/capsense_CSHL.c **** 
1914:Generated_Source\PSoC4/capsense_CSHL.c **** 
1915:Generated_Source\PSoC4/capsense_CSHL.c **** #if((capsense_TOTAL_RADIAL_SLIDERS_COUNT > 0u) || (capsense_TOTAL_LINEAR_SLIDERS_COUNT > 0u))
1916:Generated_Source\PSoC4/capsense_CSHL.c ****     /*******************************************************************************
1917:Generated_Source\PSoC4/capsense_CSHL.c ****     * Function Name: capsense_GetRadialCentroidPos
1918:Generated_Source\PSoC4/capsense_CSHL.c ****     ********************************************************************************
1919:Generated_Source\PSoC4/capsense_CSHL.c ****     *
1920:Generated_Source\PSoC4/capsense_CSHL.c ****     * Summary:
1921:Generated_Source\PSoC4/capsense_CSHL.c ****     *  Checks the capsense_Signal[ ] array for a centroid within
1922:Generated_Source\PSoC4/capsense_CSHL.c ****     *  a slider specified range. The centroid position is calculated according to the resolution
1923:Generated_Source\PSoC4/capsense_CSHL.c ****     *  specified in the CapSense customizer. The position filters are applied to the
1924:Generated_Source\PSoC4/capsense_CSHL.c ****     *  result if enabled.
1925:Generated_Source\PSoC4/capsense_CSHL.c ****     *
1926:Generated_Source\PSoC4/capsense_CSHL.c ****     * Parameters:
1927:Generated_Source\PSoC4/capsense_CSHL.c ****     *  widget:  Widget number.
1928:Generated_Source\PSoC4/capsense_CSHL.c ****     *  For every radial slider widget there are defines in this format:
1929:Generated_Source\PSoC4/capsense_CSHL.c ****     *  #define capsense_"widget_name"__RS           5
1930:Generated_Source\PSoC4/capsense_CSHL.c ****     *
1931:Generated_Source\PSoC4/capsense_CSHL.c ****     * Return:
ARM GAS  C:\Users\Mykola\AppData\Local\Temp\ccSL9DbN.s 			page 55


1932:Generated_Source\PSoC4/capsense_CSHL.c ****     *  Returns a position value of the radial slider.
1933:Generated_Source\PSoC4/capsense_CSHL.c ****     *
1934:Generated_Source\PSoC4/capsense_CSHL.c ****     * Global Variables:
1935:Generated_Source\PSoC4/capsense_CSHL.c ****     *  None.
1936:Generated_Source\PSoC4/capsense_CSHL.c ****     *
1937:Generated_Source\PSoC4/capsense_CSHL.c ****     * Side Effects:
1938:Generated_Source\PSoC4/capsense_CSHL.c ****     *  If any sensor within the slider widget is active, the function returns values
1939:Generated_Source\PSoC4/capsense_CSHL.c ****     *  from zero to the API resolution value set in the CapSense customizer. If no
1940:Generated_Source\PSoC4/capsense_CSHL.c ****     *  sensors are active, the function returns 0xFFFF.
1941:Generated_Source\PSoC4/capsense_CSHL.c ****     *  There are no checks of the widget type argument provided to this function.
1942:Generated_Source\PSoC4/capsense_CSHL.c ****     *  The unproper widget type provided will cause unexpected position calculations.
1943:Generated_Source\PSoC4/capsense_CSHL.c ****     *
1944:Generated_Source\PSoC4/capsense_CSHL.c ****     * Note:
1945:Generated_Source\PSoC4/capsense_CSHL.c ****     *  If noise counts on the slider segments are greater than the noise
1946:Generated_Source\PSoC4/capsense_CSHL.c ****     *  threshold, this subroutine may generate a false centroid result. The noise
1947:Generated_Source\PSoC4/capsense_CSHL.c ****     *  threshold should be set carefully (high enough above the noise level) so
1948:Generated_Source\PSoC4/capsense_CSHL.c ****     *  that noise will not generate a false centroid.
1949:Generated_Source\PSoC4/capsense_CSHL.c ****     *
1950:Generated_Source\PSoC4/capsense_CSHL.c ****     *******************************************************************************/
1951:Generated_Source\PSoC4/capsense_CSHL.c ****      uint16 capsense_GetRadialCentroidPos(uint32 widget)
1952:Generated_Source\PSoC4/capsense_CSHL.c ****     {
 1134              		.loc 1 1952 0
 1135              		.cfi_startproc
 1136              	.LVL128:
 1137 0000 10B5     		push	{r4, lr}
 1138              		.cfi_def_cfa_offset 8
 1139              		.cfi_offset 4, -8
 1140              		.cfi_offset 14, -4
 1141 0002 82B0     		sub	sp, sp, #8
 1142              		.cfi_def_cfa_offset 16
 1143 0004 041C     		mov	r4, r0
 1144              	.LVL129:
1953:Generated_Source\PSoC4/capsense_CSHL.c ****         #if (0u != capsense_RADIAL_SLIDERS_POS_FILTERS_MASK)
1954:Generated_Source\PSoC4/capsense_CSHL.c ****             uint8 posIndex;
1955:Generated_Source\PSoC4/capsense_CSHL.c ****             uint8 firstTimeIndex = capsense_posFiltersData[widget];
1956:Generated_Source\PSoC4/capsense_CSHL.c ****             uint8 posFiltersMask = capsense_posFiltersMask[widget];
1957:Generated_Source\PSoC4/capsense_CSHL.c ****         #endif /* (0u != capsense_RADIAL_SLIDERS_POS_FILTERS_MASK) */
1958:Generated_Source\PSoC4/capsense_CSHL.c **** 
1959:Generated_Source\PSoC4/capsense_CSHL.c ****         #if ((0u != (capsense_MEDIAN_FILTER & capsense_RADIAL_SLIDERS_POS_FILTERS_MASK)) || \
1960:Generated_Source\PSoC4/capsense_CSHL.c ****              (0u != (capsense_AVERAGING_FILTER & capsense_RADIAL_SLIDERS_POS_FILTERS_MASK)))
1961:Generated_Source\PSoC4/capsense_CSHL.c ****             uint8 tempPos;
1962:Generated_Source\PSoC4/capsense_CSHL.c ****         #endif /* ((0u != (capsense_MEDIAN_FILTER & capsense_RADIAL_SLIDERS_POS_FILTERS_MASK)) || \
1963:Generated_Source\PSoC4/capsense_CSHL.c ****                *   (0u != (capsense_AVERAGING_FILTER & capsense_RADIAL_SLIDERS_POS_FILTERS_MASK)))
1964:Generated_Source\PSoC4/capsense_CSHL.c ****                */
1965:Generated_Source\PSoC4/capsense_CSHL.c **** 
1966:Generated_Source\PSoC4/capsense_CSHL.c ****         uint8 maximum;
1967:Generated_Source\PSoC4/capsense_CSHL.c ****         uint16 position;
1968:Generated_Source\PSoC4/capsense_CSHL.c ****         uint8 offset = capsense_rawDataIndex[widget];
1969:Generated_Source\PSoC4/capsense_CSHL.c ****         uint8 count = capsense_numberOfSensors[widget];
1970:Generated_Source\PSoC4/capsense_CSHL.c **** 
1971:Generated_Source\PSoC4/capsense_CSHL.c ****         /* Find Maximum within centroid */
1972:Generated_Source\PSoC4/capsense_CSHL.c ****         #if (capsense_IS_DIPLEX_SLIDER)
1973:Generated_Source\PSoC4/capsense_CSHL.c ****             maximum = capsense_FindMaximum(offset, count, (uint8)capsense_fingerThreshold[widget], 
1974:Generated_Source\PSoC4/capsense_CSHL.c ****         #else
1975:Generated_Source\PSoC4/capsense_CSHL.c ****             maximum = capsense_FindMaximum(offset, count, (uint8)capsense_fingerThreshold[widget]);
 1145              		.loc 1 1975 0
 1146 0006 0B4B     		ldr	r3, .L104
ARM GAS  C:\Users\Mykola\AppData\Local\Temp\ccSL9DbN.s 			page 56


 1147 0008 1A5C     		ldrb	r2, [r3, r0]
 1148 000a 0020     		mov	r0, #0
 1149              	.LVL130:
 1150 000c 0521     		mov	r1, #5
 1151 000e FFF7FEFF 		bl	capsense_FindMaximum
 1152              	.LVL131:
1976:Generated_Source\PSoC4/capsense_CSHL.c ****         #endif /* (capsense_IS_DIPLEX_SLIDER) */
1977:Generated_Source\PSoC4/capsense_CSHL.c **** 
1978:Generated_Source\PSoC4/capsense_CSHL.c ****         if (maximum != capsense_MAXIMUM_CENTROID)
 1153              		.loc 1 1978 0
 1154 0012 FF28     		cmp	r0, #255
 1155 0014 0AD0     		beq	.L103
1979:Generated_Source\PSoC4/capsense_CSHL.c ****         {
1980:Generated_Source\PSoC4/capsense_CSHL.c ****             /* Calculate centroid */
1981:Generated_Source\PSoC4/capsense_CSHL.c ****             position = (uint16) capsense_CalcCentroid(maximum,
 1156              		.loc 1 1981 0
 1157 0016 084B     		ldr	r3, .L104+4
 1158 0018 1B5D     		ldrb	r3, [r3, r4]
 1159 001a 0093     		str	r3, [sp]
 1160 001c 0021     		mov	r1, #0
 1161 001e 0522     		mov	r2, #5
 1162 0020 C823     		mov	r3, #200
 1163 0022 5B01     		lsl	r3, r3, #5
 1164 0024 FFF7FEFF 		bl	capsense_CalcCentroid
 1165              	.LVL132:
 1166 0028 80B2     		uxth	r0, r0
 1167              	.LVL133:
 1168 002a 00E0     		b	.L102
 1169              	.LVL134:
 1170              	.L103:
1982:Generated_Source\PSoC4/capsense_CSHL.c ****                          offset, count, capsense_centroidMult[widget], capsense_noiseThreshold[widg
1983:Generated_Source\PSoC4/capsense_CSHL.c **** 
1984:Generated_Source\PSoC4/capsense_CSHL.c ****             #if (0u != capsense_RADIAL_SLIDERS_POS_FILTERS_MASK)
1985:Generated_Source\PSoC4/capsense_CSHL.c ****                 /* Check if this Radial slider has enabled filters */
1986:Generated_Source\PSoC4/capsense_CSHL.c ****                 if (0u != (posFiltersMask & capsense_ANY_POS_FILTER))
1987:Generated_Source\PSoC4/capsense_CSHL.c ****                 {
1988:Generated_Source\PSoC4/capsense_CSHL.c ****                     /* Calculate position to store filters data */
1989:Generated_Source\PSoC4/capsense_CSHL.c ****                     posIndex  = firstTimeIndex + 1u;
1990:Generated_Source\PSoC4/capsense_CSHL.c **** 
1991:Generated_Source\PSoC4/capsense_CSHL.c ****                     if (0u == capsense_posFiltersData[firstTimeIndex])
1992:Generated_Source\PSoC4/capsense_CSHL.c ****                     {
1993:Generated_Source\PSoC4/capsense_CSHL.c ****                         /* Init filters */
1994:Generated_Source\PSoC4/capsense_CSHL.c ****                         capsense_posFiltersData[posIndex] = (uint8) position;
1995:Generated_Source\PSoC4/capsense_CSHL.c ****                         #if ((0u != (capsense_MEDIAN_FILTER & \
1996:Generated_Source\PSoC4/capsense_CSHL.c ****                                      capsense_RADIAL_SLIDERS_POS_FILTERS_MASK)) || \
1997:Generated_Source\PSoC4/capsense_CSHL.c ****                              (0u != (capsense_AVERAGING_FILTER & \
1998:Generated_Source\PSoC4/capsense_CSHL.c ****                                      capsense_RADIAL_SLIDERS_POS_FILTERS_MASK)))
1999:Generated_Source\PSoC4/capsense_CSHL.c **** 
2000:Generated_Source\PSoC4/capsense_CSHL.c ****                             if ( (0u != (posFiltersMask & capsense_MEDIAN_FILTER))  ||
2001:Generated_Source\PSoC4/capsense_CSHL.c ****                                  (0u != (posFiltersMask & capsense_AVERAGING_FILTER)) )
2002:Generated_Source\PSoC4/capsense_CSHL.c ****                             {
2003:Generated_Source\PSoC4/capsense_CSHL.c ****                                 capsense_posFiltersData[posIndex + 1u] = (uint8) position;
2004:Generated_Source\PSoC4/capsense_CSHL.c ****                             }
2005:Generated_Source\PSoC4/capsense_CSHL.c ****                         #endif /* ((0u != (capsense_MEDIAN_FILTER & \
2006:Generated_Source\PSoC4/capsense_CSHL.c ****                                *           capsense_RADIAL_SLIDERS_POS_FILTERS_MASK)) || \
2007:Generated_Source\PSoC4/capsense_CSHL.c ****                                *   (0u != (capsense_AVERAGING_FILTER & \
2008:Generated_Source\PSoC4/capsense_CSHL.c ****                                *           capsense_RADIAL_SLIDERS_POS_FILTERS_MASK)))
ARM GAS  C:\Users\Mykola\AppData\Local\Temp\ccSL9DbN.s 			page 57


2009:Generated_Source\PSoC4/capsense_CSHL.c ****                                */
2010:Generated_Source\PSoC4/capsense_CSHL.c **** 
2011:Generated_Source\PSoC4/capsense_CSHL.c ****                         capsense_posFiltersData[firstTimeIndex] = 1u;
2012:Generated_Source\PSoC4/capsense_CSHL.c ****                     }
2013:Generated_Source\PSoC4/capsense_CSHL.c ****                     else
2014:Generated_Source\PSoC4/capsense_CSHL.c ****                     {
2015:Generated_Source\PSoC4/capsense_CSHL.c ****                         /* Do filtering */
2016:Generated_Source\PSoC4/capsense_CSHL.c ****                         #if (0u != (capsense_MEDIAN_FILTER & capsense_RADIAL_SLIDERS_POS_FILTERS_MA
2017:Generated_Source\PSoC4/capsense_CSHL.c ****                             if (0u != (posFiltersMask & capsense_MEDIAN_FILTER))
2018:Generated_Source\PSoC4/capsense_CSHL.c ****                             {
2019:Generated_Source\PSoC4/capsense_CSHL.c ****                                 tempPos = (uint8) position;
2020:Generated_Source\PSoC4/capsense_CSHL.c ****                                 position = capsense_MedianFilter(position,
2021:Generated_Source\PSoC4/capsense_CSHL.c ****                                                                         capsense_posFiltersData[pos
2022:Generated_Source\PSoC4/capsense_CSHL.c ****                                                                         capsense_posFiltersData[pos
2023:Generated_Source\PSoC4/capsense_CSHL.c ****                                 capsense_posFiltersData[posIndex + 1u] =
2024:Generated_Source\PSoC4/capsense_CSHL.c ****                                                                               capsense_posFiltersDa
2025:Generated_Source\PSoC4/capsense_CSHL.c ****                                 capsense_posFiltersData[posIndex] = tempPos;
2026:Generated_Source\PSoC4/capsense_CSHL.c ****                             }
2027:Generated_Source\PSoC4/capsense_CSHL.c ****                         #endif /* (0u != (capsense_MEDIAN_FILTER &
2028:Generated_Source\PSoC4/capsense_CSHL.c ****                                *          capsense_RADIAL_SLIDERS_POS_FILTERS_MASK))
2029:Generated_Source\PSoC4/capsense_CSHL.c ****                                */
2030:Generated_Source\PSoC4/capsense_CSHL.c **** 
2031:Generated_Source\PSoC4/capsense_CSHL.c ****                         #if (0u != (capsense_AVERAGING_FILTER & \
2032:Generated_Source\PSoC4/capsense_CSHL.c ****                                     capsense_RADIAL_SLIDERS_POS_FILTERS_MASK))
2033:Generated_Source\PSoC4/capsense_CSHL.c ****                             if (0u != (posFiltersMask & capsense_AVERAGING_FILTER))
2034:Generated_Source\PSoC4/capsense_CSHL.c ****                             {
2035:Generated_Source\PSoC4/capsense_CSHL.c ****                                 tempPos = (uint8) position;
2036:Generated_Source\PSoC4/capsense_CSHL.c ****                                 position = capsense_AveragingFilter(position,
2037:Generated_Source\PSoC4/capsense_CSHL.c ****                                                                        capsense_posFiltersData[posI
2038:Generated_Source\PSoC4/capsense_CSHL.c ****                                                                        capsense_posFiltersData[posI
2039:Generated_Source\PSoC4/capsense_CSHL.c ****                                 capsense_posFiltersData[posIndex+1u]= capsense_posFiltersData[posIn
2040:Generated_Source\PSoC4/capsense_CSHL.c ****                                 capsense_posFiltersData[posIndex] = tempPos;
2041:Generated_Source\PSoC4/capsense_CSHL.c ****                             }
2042:Generated_Source\PSoC4/capsense_CSHL.c ****                         #endif /* (0u != (capsense_AVERAGING_FILTER & \
2043:Generated_Source\PSoC4/capsense_CSHL.c ****                                *          capsense_RADIAL_SLIDERS_POS_FILTERS_MASK))
2044:Generated_Source\PSoC4/capsense_CSHL.c ****                                */
2045:Generated_Source\PSoC4/capsense_CSHL.c **** 
2046:Generated_Source\PSoC4/capsense_CSHL.c ****                         #if (0u != (capsense_IIR2_FILTER & capsense_RADIAL_SLIDERS_POS_FILTERS_MASK
2047:Generated_Source\PSoC4/capsense_CSHL.c ****                             if (0u != (posFiltersMask & capsense_IIR2_FILTER))
2048:Generated_Source\PSoC4/capsense_CSHL.c ****                             {
2049:Generated_Source\PSoC4/capsense_CSHL.c ****                                 position = capsense_IIR2Filter(position,
2050:Generated_Source\PSoC4/capsense_CSHL.c ****                                                                     (uint16)capsense_posFiltersData
2051:Generated_Source\PSoC4/capsense_CSHL.c ****                                 capsense_posFiltersData[posIndex] = (uint8) position;
2052:Generated_Source\PSoC4/capsense_CSHL.c ****                             }
2053:Generated_Source\PSoC4/capsense_CSHL.c ****                         #endif /* (0u != (capsense_IIR2_FILTER &
2054:Generated_Source\PSoC4/capsense_CSHL.c ****                                *          capsense_RADIAL_SLIDERS_POS_FILTERS_MASK))
2055:Generated_Source\PSoC4/capsense_CSHL.c ****                                */
2056:Generated_Source\PSoC4/capsense_CSHL.c **** 
2057:Generated_Source\PSoC4/capsense_CSHL.c ****                         #if (0u != (capsense_IIR4_FILTER & capsense_RADIAL_SLIDERS_POS_FILTERS_MASK
2058:Generated_Source\PSoC4/capsense_CSHL.c ****                             if (0u != (posFiltersMask & capsense_IIR4_FILTER))
2059:Generated_Source\PSoC4/capsense_CSHL.c ****                             {
2060:Generated_Source\PSoC4/capsense_CSHL.c ****                                 position = capsense_IIR4Filter(position,
2061:Generated_Source\PSoC4/capsense_CSHL.c ****                                                                     (uint16)capsense_posFiltersData
2062:Generated_Source\PSoC4/capsense_CSHL.c ****                                 capsense_posFiltersData[posIndex] = (uint8) position;
2063:Generated_Source\PSoC4/capsense_CSHL.c ****                             }
2064:Generated_Source\PSoC4/capsense_CSHL.c ****                         #endif /* (0u != (capsense_IIR4_FILTER &
2065:Generated_Source\PSoC4/capsense_CSHL.c ****                                *          capsense_RADIAL_SLIDERS_POS_FILTERS_MASK))
ARM GAS  C:\Users\Mykola\AppData\Local\Temp\ccSL9DbN.s 			page 58


2066:Generated_Source\PSoC4/capsense_CSHL.c ****                                */
2067:Generated_Source\PSoC4/capsense_CSHL.c **** 
2068:Generated_Source\PSoC4/capsense_CSHL.c ****                         #if (0u != (capsense_JITTER_FILTER & capsense_RADIAL_SLIDERS_POS_FILTERS_MA
2069:Generated_Source\PSoC4/capsense_CSHL.c ****                             if (0u != (posFiltersMask & capsense_JITTER_FILTER))
2070:Generated_Source\PSoC4/capsense_CSHL.c ****                             {
2071:Generated_Source\PSoC4/capsense_CSHL.c ****                                 position = capsense_JitterFilter(position,
2072:Generated_Source\PSoC4/capsense_CSHL.c ****                                                                          capsense_posFiltersData[po
2073:Generated_Source\PSoC4/capsense_CSHL.c ****                                 capsense_posFiltersData[posIndex] = (uint8) position;
2074:Generated_Source\PSoC4/capsense_CSHL.c ****                             }
2075:Generated_Source\PSoC4/capsense_CSHL.c ****                         #endif /* (0u != (capsense_JITTER_FILTER &
2076:Generated_Source\PSoC4/capsense_CSHL.c ****                                *           capsense_RADIAL_SLIDERS_POS_FILTERS_MASK))
2077:Generated_Source\PSoC4/capsense_CSHL.c ****                                */
2078:Generated_Source\PSoC4/capsense_CSHL.c ****                     }
2079:Generated_Source\PSoC4/capsense_CSHL.c ****                 }
2080:Generated_Source\PSoC4/capsense_CSHL.c ****             #endif /* (0u != capsense_RADIAL_SLIDERS_POS_FILTERS_MASK) */
2081:Generated_Source\PSoC4/capsense_CSHL.c **** 
2082:Generated_Source\PSoC4/capsense_CSHL.c ****         }
2083:Generated_Source\PSoC4/capsense_CSHL.c ****         else
2084:Generated_Source\PSoC4/capsense_CSHL.c ****         {
2085:Generated_Source\PSoC4/capsense_CSHL.c ****             /* Maximum was not found */
2086:Generated_Source\PSoC4/capsense_CSHL.c ****             position = 0xFFFFu;
 1171              		.loc 1 2086 0
 1172 002c 0348     		ldr	r0, .L104+8
 1173              	.LVL135:
 1174              	.L102:
2087:Generated_Source\PSoC4/capsense_CSHL.c **** 
2088:Generated_Source\PSoC4/capsense_CSHL.c ****             #if (0u != capsense_RADIAL_SLIDERS_POS_FILTERS_MASK)
2089:Generated_Source\PSoC4/capsense_CSHL.c ****                 /* Reset filters */
2090:Generated_Source\PSoC4/capsense_CSHL.c ****                 if((posFiltersMask & capsense_ANY_POS_FILTER) != 0u)
2091:Generated_Source\PSoC4/capsense_CSHL.c ****                 {
2092:Generated_Source\PSoC4/capsense_CSHL.c ****                     capsense_posFiltersData[firstTimeIndex] = 0u;
2093:Generated_Source\PSoC4/capsense_CSHL.c ****                 }
2094:Generated_Source\PSoC4/capsense_CSHL.c ****             #endif /* (0u != capsense_RADIAL_SLIDERS_POS_FILTERS_MASK) */
2095:Generated_Source\PSoC4/capsense_CSHL.c ****         }
2096:Generated_Source\PSoC4/capsense_CSHL.c **** 
2097:Generated_Source\PSoC4/capsense_CSHL.c ****         return (position);
2098:Generated_Source\PSoC4/capsense_CSHL.c ****     }
 1175              		.loc 1 2098 0
 1176 002e 02B0     		add	sp, sp, #8
 1177              		@ sp needed
 1178              	.LVL136:
 1179 0030 10BD     		pop	{r4, pc}
 1180              	.L105:
 1181 0032 C046     		.align	2
 1182              	.L104:
 1183 0034 00000000 		.word	capsense_fingerThreshold
 1184 0038 00000000 		.word	capsense_noiseThreshold
 1185 003c FFFF0000 		.word	65535
 1186              		.cfi_endproc
 1187              	.LFE65:
 1188              		.size	capsense_GetRadialCentroidPos, .-capsense_GetRadialCentroidPos
 1189              		.section	.text.capsense_MedianFilter,"ax",%progbits
 1190              		.align	2
 1191              		.global	capsense_MedianFilter
 1192              		.code	16
 1193              		.thumb_func
 1194              		.type	capsense_MedianFilter, %function
ARM GAS  C:\Users\Mykola\AppData\Local\Temp\ccSL9DbN.s 			page 59


 1195              	capsense_MedianFilter:
 1196              	.LFB66:
2099:Generated_Source\PSoC4/capsense_CSHL.c **** #endif /* ((capsense_TOTAL_RADIAL_SLIDERS_COUNT > 0u) || (capsense_TOTAL_LINEAR_SLIDERS_COUNT > 0u)
2100:Generated_Source\PSoC4/capsense_CSHL.c **** 
2101:Generated_Source\PSoC4/capsense_CSHL.c **** 
2102:Generated_Source\PSoC4/capsense_CSHL.c **** #if(capsense_TOTAL_TOUCH_PADS_BASIC_COUNT > 0u)
2103:Generated_Source\PSoC4/capsense_CSHL.c ****     /*******************************************************************************
2104:Generated_Source\PSoC4/capsense_CSHL.c ****     * Function Name: capsense_GetTouchCentroidPos
2105:Generated_Source\PSoC4/capsense_CSHL.c ****     ********************************************************************************
2106:Generated_Source\PSoC4/capsense_CSHL.c ****     *
2107:Generated_Source\PSoC4/capsense_CSHL.c ****     * Summary:
2108:Generated_Source\PSoC4/capsense_CSHL.c ****     *  If a finger is present on a touchpad, this function calculates the X and Y
2109:Generated_Source\PSoC4/capsense_CSHL.c ****     *  position of the finger by calculating the centroids within touchpad specified
2110:Generated_Source\PSoC4/capsense_CSHL.c ****     *  range. The X and Y positions are calculated according to the API resolutions set in the
2111:Generated_Source\PSoC4/capsense_CSHL.c ****     *  CapSense customizer. Returns 1 if a finger is on the touchpad.
2112:Generated_Source\PSoC4/capsense_CSHL.c ****     *  The position filter is applied to the result if enabled.
2113:Generated_Source\PSoC4/capsense_CSHL.c ****     *  This function is available only if a touch pad is defined by the CapSense
2114:Generated_Source\PSoC4/capsense_CSHL.c ****     *  customizer.
2115:Generated_Source\PSoC4/capsense_CSHL.c ****     *
2116:Generated_Source\PSoC4/capsense_CSHL.c ****     * Parameters:
2117:Generated_Source\PSoC4/capsense_CSHL.c ****     *  widget:  Widget number.
2118:Generated_Source\PSoC4/capsense_CSHL.c ****     *  For every touchpad widget there are defines in this format:
2119:Generated_Source\PSoC4/capsense_CSHL.c ****     *  #define capsense_"widget_name"__TP            5
2120:Generated_Source\PSoC4/capsense_CSHL.c ****     *
2121:Generated_Source\PSoC4/capsense_CSHL.c ****     *  pos:     Pointer to the array of two uint16 elements, where result
2122:Generated_Source\PSoC4/capsense_CSHL.c ****     *  result of calculation of X and Y position are stored.
2123:Generated_Source\PSoC4/capsense_CSHL.c ****     *  pos[0u]  - position of X
2124:Generated_Source\PSoC4/capsense_CSHL.c ****     *  pos[1u]  - position of Y
2125:Generated_Source\PSoC4/capsense_CSHL.c ****     *
2126:Generated_Source\PSoC4/capsense_CSHL.c ****     * Return:
2127:Generated_Source\PSoC4/capsense_CSHL.c ****     *  Returns a 1 if a finger is on the touch pad, 0 - if not.
2128:Generated_Source\PSoC4/capsense_CSHL.c ****     *
2129:Generated_Source\PSoC4/capsense_CSHL.c ****     * Global Variables:
2130:Generated_Source\PSoC4/capsense_CSHL.c ****     *  None.
2131:Generated_Source\PSoC4/capsense_CSHL.c ****     *
2132:Generated_Source\PSoC4/capsense_CSHL.c ****     * Side Effects:
2133:Generated_Source\PSoC4/capsense_CSHL.c ****     *   There are no checks of the widget type argument provided to this function.
2134:Generated_Source\PSoC4/capsense_CSHL.c ****     *   The unproper widget type provided will cause unexpected position
2135:Generated_Source\PSoC4/capsense_CSHL.c ****     *   calculations.
2136:Generated_Source\PSoC4/capsense_CSHL.c ****     *
2137:Generated_Source\PSoC4/capsense_CSHL.c ****     *******************************************************************************/
2138:Generated_Source\PSoC4/capsense_CSHL.c ****     uint32 capsense_GetTouchCentroidPos(uint32 widget, uint16* pos)
2139:Generated_Source\PSoC4/capsense_CSHL.c ****     {
2140:Generated_Source\PSoC4/capsense_CSHL.c ****         #if (0u != capsense_TOUCH_PADS_POS_FILTERS_MASK)
2141:Generated_Source\PSoC4/capsense_CSHL.c ****             uint8 posXIndex;
2142:Generated_Source\PSoC4/capsense_CSHL.c ****             uint8 posYIndex;
2143:Generated_Source\PSoC4/capsense_CSHL.c ****             uint8 firstTimeIndex = capsense_posFiltersData[widget];
2144:Generated_Source\PSoC4/capsense_CSHL.c ****             uint8 posFiltersMask = capsense_posFiltersMask[widget];
2145:Generated_Source\PSoC4/capsense_CSHL.c ****         #endif /* (0u != capsense_TOUCH_PADS_POS_FILTERS_MASK) */
2146:Generated_Source\PSoC4/capsense_CSHL.c **** 
2147:Generated_Source\PSoC4/capsense_CSHL.c ****         #if ((0u != (capsense_MEDIAN_FILTER & capsense_TOUCH_PADS_POS_FILTERS_MASK)) || \
2148:Generated_Source\PSoC4/capsense_CSHL.c ****              (0u != (capsense_AVERAGING_FILTER & capsense_TOUCH_PADS_POS_FILTERS_MASK)))
2149:Generated_Source\PSoC4/capsense_CSHL.c ****             uint16 tempPos;
2150:Generated_Source\PSoC4/capsense_CSHL.c ****         #endif /* ((0u != (capsense_MEDIAN_FILTER & capsense_TOUCH_PADS_POS_FILTERS_MASK)) || \
2151:Generated_Source\PSoC4/capsense_CSHL.c ****                *   (0u != (capsense_AVERAGING_FILTER & capsense_TOUCH_PADS_POS_FILTERS_MASK)))
2152:Generated_Source\PSoC4/capsense_CSHL.c ****                */
2153:Generated_Source\PSoC4/capsense_CSHL.c **** 
ARM GAS  C:\Users\Mykola\AppData\Local\Temp\ccSL9DbN.s 			page 60


2154:Generated_Source\PSoC4/capsense_CSHL.c ****         uint8 MaxX;
2155:Generated_Source\PSoC4/capsense_CSHL.c ****         uint8 MaxY;
2156:Generated_Source\PSoC4/capsense_CSHL.c ****         uint8 posX;
2157:Generated_Source\PSoC4/capsense_CSHL.c ****         uint8 posY;
2158:Generated_Source\PSoC4/capsense_CSHL.c ****         uint32 touch = 0u;
2159:Generated_Source\PSoC4/capsense_CSHL.c ****         uint8 offset = capsense_rawDataIndex[widget];
2160:Generated_Source\PSoC4/capsense_CSHL.c ****         uint8 count = capsense_numberOfSensors[widget];
2161:Generated_Source\PSoC4/capsense_CSHL.c **** 
2162:Generated_Source\PSoC4/capsense_CSHL.c ****         /* Find Maximum within X centroid */
2163:Generated_Source\PSoC4/capsense_CSHL.c ****         #if (capsense_IS_DIPLEX_SLIDER)
2164:Generated_Source\PSoC4/capsense_CSHL.c ****             MaxX = capsense_FindMaximum(offset, count, capsense_fingerThreshold[widget], 0u);
2165:Generated_Source\PSoC4/capsense_CSHL.c ****         #else
2166:Generated_Source\PSoC4/capsense_CSHL.c ****             MaxX = capsense_FindMaximum(offset, count, capsense_fingerThreshold[widget]);
2167:Generated_Source\PSoC4/capsense_CSHL.c ****         #endif /* (capsense_IS_DIPLEX_SLIDER) */
2168:Generated_Source\PSoC4/capsense_CSHL.c **** 
2169:Generated_Source\PSoC4/capsense_CSHL.c ****         if (MaxX != capsense_MAXIMUM_CENTROID)
2170:Generated_Source\PSoC4/capsense_CSHL.c ****         {
2171:Generated_Source\PSoC4/capsense_CSHL.c ****             offset = capsense_rawDataIndex[widget + 1u];
2172:Generated_Source\PSoC4/capsense_CSHL.c ****             count = capsense_numberOfSensors[widget + 1u];
2173:Generated_Source\PSoC4/capsense_CSHL.c **** 
2174:Generated_Source\PSoC4/capsense_CSHL.c ****             /* Find Maximum within Y centroid */
2175:Generated_Source\PSoC4/capsense_CSHL.c ****             #if (capsense_IS_DIPLEX_SLIDER)
2176:Generated_Source\PSoC4/capsense_CSHL.c ****                 MaxY = capsense_FindMaximum(offset, count, capsense_fingerThreshold[widget + 1u], 0
2177:Generated_Source\PSoC4/capsense_CSHL.c ****             #else
2178:Generated_Source\PSoC4/capsense_CSHL.c ****                 MaxY = capsense_FindMaximum(offset, count, capsense_fingerThreshold[widget + 1u]);
2179:Generated_Source\PSoC4/capsense_CSHL.c ****             #endif /* (capsense_IS_DIPLEX_SLIDER) */
2180:Generated_Source\PSoC4/capsense_CSHL.c **** 
2181:Generated_Source\PSoC4/capsense_CSHL.c ****             if (MaxY != capsense_MAXIMUM_CENTROID)
2182:Generated_Source\PSoC4/capsense_CSHL.c ****             {
2183:Generated_Source\PSoC4/capsense_CSHL.c ****                 /* X and Y maximums are found = true touch */
2184:Generated_Source\PSoC4/capsense_CSHL.c ****                 touch = 1u;
2185:Generated_Source\PSoC4/capsense_CSHL.c **** 
2186:Generated_Source\PSoC4/capsense_CSHL.c ****                 /* Calculate Y centroid */
2187:Generated_Source\PSoC4/capsense_CSHL.c ****                 posY = capsense_CalcCentroid(MaxY, offset, count,
2188:Generated_Source\PSoC4/capsense_CSHL.c ****                             capsense_centroidMult[widget + 1u], capsense_noiseThreshold[widget + 1u
2189:Generated_Source\PSoC4/capsense_CSHL.c **** 
2190:Generated_Source\PSoC4/capsense_CSHL.c ****                 /* Calculate X centroid */
2191:Generated_Source\PSoC4/capsense_CSHL.c ****                 offset = capsense_rawDataIndex[widget];
2192:Generated_Source\PSoC4/capsense_CSHL.c ****                 count = capsense_numberOfSensors[widget];
2193:Generated_Source\PSoC4/capsense_CSHL.c **** 
2194:Generated_Source\PSoC4/capsense_CSHL.c ****                 posX = capsense_CalcCentroid(MaxX, offset, count,
2195:Generated_Source\PSoC4/capsense_CSHL.c ****                             capsense_centroidMult[widget],capsense_noiseThreshold[widget]);
2196:Generated_Source\PSoC4/capsense_CSHL.c **** 
2197:Generated_Source\PSoC4/capsense_CSHL.c ****                 #if (0u != capsense_TOUCH_PADS_POS_FILTERS_MASK)
2198:Generated_Source\PSoC4/capsense_CSHL.c ****                     /* Check if this TP has enabled filters */
2199:Generated_Source\PSoC4/capsense_CSHL.c ****                     if (0u != (posFiltersMask & capsense_ANY_POS_FILTER))
2200:Generated_Source\PSoC4/capsense_CSHL.c ****                     {
2201:Generated_Source\PSoC4/capsense_CSHL.c ****                         /* Calculate position to store filters data */
2202:Generated_Source\PSoC4/capsense_CSHL.c ****                         posXIndex  = firstTimeIndex + 1u;
2203:Generated_Source\PSoC4/capsense_CSHL.c ****                         posYIndex  = capsense_posFiltersData[widget + 1u];
2204:Generated_Source\PSoC4/capsense_CSHL.c **** 
2205:Generated_Source\PSoC4/capsense_CSHL.c ****                         if (0u == capsense_posFiltersData[firstTimeIndex])
2206:Generated_Source\PSoC4/capsense_CSHL.c ****                         {
2207:Generated_Source\PSoC4/capsense_CSHL.c ****                             /* Init filters */
2208:Generated_Source\PSoC4/capsense_CSHL.c ****                             capsense_posFiltersData[posXIndex] = posX;
2209:Generated_Source\PSoC4/capsense_CSHL.c ****                             capsense_posFiltersData[posYIndex] = posY;
2210:Generated_Source\PSoC4/capsense_CSHL.c **** 
ARM GAS  C:\Users\Mykola\AppData\Local\Temp\ccSL9DbN.s 			page 61


2211:Generated_Source\PSoC4/capsense_CSHL.c ****                             #if((0u != (capsense_MEDIAN_FILTER & \
2212:Generated_Source\PSoC4/capsense_CSHL.c ****                                         capsense_TOUCH_PADS_POS_FILTERS_MASK))|| \
2213:Generated_Source\PSoC4/capsense_CSHL.c ****                                 (0u != (capsense_AVERAGING_FILTER & \
2214:Generated_Source\PSoC4/capsense_CSHL.c ****                                         capsense_TOUCH_PADS_POS_FILTERS_MASK)))
2215:Generated_Source\PSoC4/capsense_CSHL.c **** 
2216:Generated_Source\PSoC4/capsense_CSHL.c ****                                 if ( (0u != (posFiltersMask & capsense_MEDIAN_FILTER)) ||
2217:Generated_Source\PSoC4/capsense_CSHL.c ****                                      (0u != (posFiltersMask & capsense_AVERAGING_FILTER)) )
2218:Generated_Source\PSoC4/capsense_CSHL.c ****                                 {
2219:Generated_Source\PSoC4/capsense_CSHL.c ****                                     capsense_posFiltersData[posXIndex + 1u] = posX;
2220:Generated_Source\PSoC4/capsense_CSHL.c ****                                     capsense_posFiltersData[posYIndex + 1u] = posY;
2221:Generated_Source\PSoC4/capsense_CSHL.c ****                                 }
2222:Generated_Source\PSoC4/capsense_CSHL.c ****                             #endif /* ((0u != (capsense_MEDIAN_FILTER & \
2223:Generated_Source\PSoC4/capsense_CSHL.c ****                                    *           capsense_TOUCH_PADS_POS_FILTERS_MASK)) || \
2224:Generated_Source\PSoC4/capsense_CSHL.c ****                                    *    (0u != (capsense_AVERAGING_FILTER & \
2225:Generated_Source\PSoC4/capsense_CSHL.c ****                                    *            capsense_TOUCH_PADS_POS_FILTERS_MASK)))
2226:Generated_Source\PSoC4/capsense_CSHL.c ****                                    */
2227:Generated_Source\PSoC4/capsense_CSHL.c **** 
2228:Generated_Source\PSoC4/capsense_CSHL.c ****                             capsense_posFiltersData[firstTimeIndex] = 1u;
2229:Generated_Source\PSoC4/capsense_CSHL.c ****                         }
2230:Generated_Source\PSoC4/capsense_CSHL.c ****                         else
2231:Generated_Source\PSoC4/capsense_CSHL.c ****                         {
2232:Generated_Source\PSoC4/capsense_CSHL.c ****                             /* Do filtering */
2233:Generated_Source\PSoC4/capsense_CSHL.c ****                             #if (0u != (capsense_MEDIAN_FILTER & capsense_TOUCH_PADS_POS_FILTERS_MA
2234:Generated_Source\PSoC4/capsense_CSHL.c ****                                 if (0u != (posFiltersMask & capsense_MEDIAN_FILTER))
2235:Generated_Source\PSoC4/capsense_CSHL.c ****                                 {
2236:Generated_Source\PSoC4/capsense_CSHL.c ****                                     tempPos = posX;
2237:Generated_Source\PSoC4/capsense_CSHL.c ****                                     posX = (uint8) capsense_MedianFilter(posX,
2238:Generated_Source\PSoC4/capsense_CSHL.c ****                                                                       capsense_posFiltersData[posXI
2239:Generated_Source\PSoC4/capsense_CSHL.c ****                                                                       capsense_posFiltersData[posXI
2240:Generated_Source\PSoC4/capsense_CSHL.c ****                                     capsense_posFiltersData[posXIndex + 1u] =
2241:Generated_Source\PSoC4/capsense_CSHL.c ****                                                                              capsense_posFiltersDat
2242:Generated_Source\PSoC4/capsense_CSHL.c ****                                     capsense_posFiltersData[posXIndex] = tempPos;
2243:Generated_Source\PSoC4/capsense_CSHL.c **** 
2244:Generated_Source\PSoC4/capsense_CSHL.c ****                                     tempPos = posY;
2245:Generated_Source\PSoC4/capsense_CSHL.c ****                                     posY = (uint8) capsense_MedianFilter(posY,
2246:Generated_Source\PSoC4/capsense_CSHL.c ****                                                                        capsense_posFiltersData[posY
2247:Generated_Source\PSoC4/capsense_CSHL.c ****                                                                        capsense_posFiltersData[posY
2248:Generated_Source\PSoC4/capsense_CSHL.c ****                                     capsense_posFiltersData[posYIndex + 1u] =
2249:Generated_Source\PSoC4/capsense_CSHL.c ****                                                                              capsense_posFiltersDat
2250:Generated_Source\PSoC4/capsense_CSHL.c ****                                     capsense_posFiltersData[posYIndex] = tempPos;
2251:Generated_Source\PSoC4/capsense_CSHL.c ****                                 }
2252:Generated_Source\PSoC4/capsense_CSHL.c **** 
2253:Generated_Source\PSoC4/capsense_CSHL.c ****                             #endif /* (0u != (capsense_MEDIAN_FILTER & \
2254:Generated_Source\PSoC4/capsense_CSHL.c ****                                    *          capsense_TOUCH_PADS_POS_FILTERS_MASK))
2255:Generated_Source\PSoC4/capsense_CSHL.c ****                                    */
2256:Generated_Source\PSoC4/capsense_CSHL.c **** 
2257:Generated_Source\PSoC4/capsense_CSHL.c ****                             #if(0u !=(capsense_AVERAGING_FILTER & capsense_TOUCH_PADS_POS_FILTERS_M
2258:Generated_Source\PSoC4/capsense_CSHL.c ****                                 if (0u != (posFiltersMask & capsense_AVERAGING_FILTER))
2259:Generated_Source\PSoC4/capsense_CSHL.c ****                                 {
2260:Generated_Source\PSoC4/capsense_CSHL.c ****                                     tempPos = posX;
2261:Generated_Source\PSoC4/capsense_CSHL.c ****                                     posX = (uint8) capsense_AveragingFilter(posX,
2262:Generated_Source\PSoC4/capsense_CSHL.c ****                                                                        capsense_posFiltersData[posX
2263:Generated_Source\PSoC4/capsense_CSHL.c ****                                                                        capsense_posFiltersData[posX
2264:Generated_Source\PSoC4/capsense_CSHL.c ****                                     capsense_posFiltersData[posXIndex + 1u] =
2265:Generated_Source\PSoC4/capsense_CSHL.c ****                                                                              capsense_posFiltersDat
2266:Generated_Source\PSoC4/capsense_CSHL.c ****                                     capsense_posFiltersData[posXIndex] = tempPos;
2267:Generated_Source\PSoC4/capsense_CSHL.c **** 
ARM GAS  C:\Users\Mykola\AppData\Local\Temp\ccSL9DbN.s 			page 62


2268:Generated_Source\PSoC4/capsense_CSHL.c ****                                     tempPos = posY;
2269:Generated_Source\PSoC4/capsense_CSHL.c ****                                     posY = (uint8) capsense_AveragingFilter(posY,
2270:Generated_Source\PSoC4/capsense_CSHL.c ****                                                                       capsense_posFiltersData[posYI
2271:Generated_Source\PSoC4/capsense_CSHL.c ****                                                                       capsense_posFiltersData[posYI
2272:Generated_Source\PSoC4/capsense_CSHL.c ****                                     capsense_posFiltersData[posYIndex + 1u] =
2273:Generated_Source\PSoC4/capsense_CSHL.c ****                                                                             capsense_posFiltersData
2274:Generated_Source\PSoC4/capsense_CSHL.c ****                                     capsense_posFiltersData[posYIndex] = tempPos;
2275:Generated_Source\PSoC4/capsense_CSHL.c ****                                 }
2276:Generated_Source\PSoC4/capsense_CSHL.c **** 
2277:Generated_Source\PSoC4/capsense_CSHL.c ****                             #endif /* (0u != (capsense_AVERAGING_FILTER & \
2278:Generated_Source\PSoC4/capsense_CSHL.c ****                                    *           capsense_TOUCH_PADS_POS_FILTERS_MASK))
2279:Generated_Source\PSoC4/capsense_CSHL.c ****                                    */
2280:Generated_Source\PSoC4/capsense_CSHL.c **** 
2281:Generated_Source\PSoC4/capsense_CSHL.c ****                             #if (0u != (capsense_IIR2_FILTER & capsense_TOUCH_PADS_POS_FILTERS_MASK
2282:Generated_Source\PSoC4/capsense_CSHL.c ****                                 if (0u != (posFiltersMask & capsense_IIR2_FILTER))
2283:Generated_Source\PSoC4/capsense_CSHL.c ****                                 {
2284:Generated_Source\PSoC4/capsense_CSHL.c ****                                     posX = (uint8) capsense_IIR2Filter(posX,
2285:Generated_Source\PSoC4/capsense_CSHL.c ****                                                                            capsense_posFiltersData[
2286:Generated_Source\PSoC4/capsense_CSHL.c ****                                     capsense_posFiltersData[posXIndex] = posX;
2287:Generated_Source\PSoC4/capsense_CSHL.c **** 
2288:Generated_Source\PSoC4/capsense_CSHL.c ****                                     posY = (uint8) capsense_IIR2Filter(posY,
2289:Generated_Source\PSoC4/capsense_CSHL.c ****                                                                             capsense_posFiltersData
2290:Generated_Source\PSoC4/capsense_CSHL.c ****                                     capsense_posFiltersData[posYIndex] = posY;
2291:Generated_Source\PSoC4/capsense_CSHL.c ****                                 }
2292:Generated_Source\PSoC4/capsense_CSHL.c **** 
2293:Generated_Source\PSoC4/capsense_CSHL.c ****                             #endif /* (0u != (capsense_IIR2_FILTER & \
2294:Generated_Source\PSoC4/capsense_CSHL.c ****                                    *          capsense_TOUCH_PADS_POS_FILTERS_MASK))
2295:Generated_Source\PSoC4/capsense_CSHL.c ****                                    */
2296:Generated_Source\PSoC4/capsense_CSHL.c **** 
2297:Generated_Source\PSoC4/capsense_CSHL.c ****                             #if (0u != (capsense_IIR4_FILTER & capsense_TOUCH_PADS_POS_FILTERS_MASK
2298:Generated_Source\PSoC4/capsense_CSHL.c ****                                 if (0u != (posFiltersMask & capsense_IIR4_FILTER))
2299:Generated_Source\PSoC4/capsense_CSHL.c ****                                 {
2300:Generated_Source\PSoC4/capsense_CSHL.c ****                                     posX = (uint8) capsense_IIR4Filter((uint16)posX,
2301:Generated_Source\PSoC4/capsense_CSHL.c ****                                                                     (uint16)capsense_posFiltersData
2302:Generated_Source\PSoC4/capsense_CSHL.c ****                                     capsense_posFiltersData[posXIndex] = posX;
2303:Generated_Source\PSoC4/capsense_CSHL.c **** 
2304:Generated_Source\PSoC4/capsense_CSHL.c ****                                     posY = (uint8) capsense_IIR4Filter((uint16)posY,
2305:Generated_Source\PSoC4/capsense_CSHL.c ****                                                                     (uint16)capsense_posFiltersData
2306:Generated_Source\PSoC4/capsense_CSHL.c ****                                     capsense_posFiltersData[posYIndex] = posY;
2307:Generated_Source\PSoC4/capsense_CSHL.c ****                                 }
2308:Generated_Source\PSoC4/capsense_CSHL.c **** 
2309:Generated_Source\PSoC4/capsense_CSHL.c ****                             #endif /* (0u != (capsense_IIR4_FILTER & \
2310:Generated_Source\PSoC4/capsense_CSHL.c ****                                    *           capsense_TOUCH_PADS_POS_FILTERS_MASK))
2311:Generated_Source\PSoC4/capsense_CSHL.c ****                                    */
2312:Generated_Source\PSoC4/capsense_CSHL.c **** 
2313:Generated_Source\PSoC4/capsense_CSHL.c ****                             #if (0u != (capsense_JITTER_FILTER & capsense_TOUCH_PADS_POS_FILTERS_MA
2314:Generated_Source\PSoC4/capsense_CSHL.c ****                                 if (0u != (posFiltersMask & capsense_JITTER_FILTER))
2315:Generated_Source\PSoC4/capsense_CSHL.c ****                                     {
2316:Generated_Source\PSoC4/capsense_CSHL.c ****                                         posX = (uint8) capsense_JitterFilter(posX,
2317:Generated_Source\PSoC4/capsense_CSHL.c ****                                                                             capsense_posFiltersData
2318:Generated_Source\PSoC4/capsense_CSHL.c ****                                         capsense_posFiltersData[posXIndex] = posX;
2319:Generated_Source\PSoC4/capsense_CSHL.c **** 
2320:Generated_Source\PSoC4/capsense_CSHL.c ****                                         posY = (uint8) capsense_JitterFilter(posY,
2321:Generated_Source\PSoC4/capsense_CSHL.c ****                                                                             capsense_posFiltersData
2322:Generated_Source\PSoC4/capsense_CSHL.c ****                                         capsense_posFiltersData[posYIndex] = posY;
2323:Generated_Source\PSoC4/capsense_CSHL.c ****                                     }
2324:Generated_Source\PSoC4/capsense_CSHL.c ****                             #endif /* (0u != (capsense_JITTER_FILTER & \
ARM GAS  C:\Users\Mykola\AppData\Local\Temp\ccSL9DbN.s 			page 63


2325:Generated_Source\PSoC4/capsense_CSHL.c ****                                    *           capsense_TOUCH_PADS_POS_FILTERS_MASK))
2326:Generated_Source\PSoC4/capsense_CSHL.c ****                                    */
2327:Generated_Source\PSoC4/capsense_CSHL.c ****                         }
2328:Generated_Source\PSoC4/capsense_CSHL.c ****                     }
2329:Generated_Source\PSoC4/capsense_CSHL.c ****                 #endif /* (0u != capsense_TOUCH_PADS_POS_FILTERS_MASK) */
2330:Generated_Source\PSoC4/capsense_CSHL.c **** 
2331:Generated_Source\PSoC4/capsense_CSHL.c ****                 /* Save positions */
2332:Generated_Source\PSoC4/capsense_CSHL.c ****                 pos[0u] = posX;
2333:Generated_Source\PSoC4/capsense_CSHL.c ****                 pos[1u] = posY;
2334:Generated_Source\PSoC4/capsense_CSHL.c ****             }
2335:Generated_Source\PSoC4/capsense_CSHL.c ****         }
2336:Generated_Source\PSoC4/capsense_CSHL.c **** 
2337:Generated_Source\PSoC4/capsense_CSHL.c ****         #if (0u != capsense_TOUCH_PADS_POS_FILTERS_MASK)
2338:Generated_Source\PSoC4/capsense_CSHL.c ****             if(touch == 0u)
2339:Generated_Source\PSoC4/capsense_CSHL.c ****             {
2340:Generated_Source\PSoC4/capsense_CSHL.c ****                 /* Reset filters */
2341:Generated_Source\PSoC4/capsense_CSHL.c ****                 if ((posFiltersMask & capsense_ANY_POS_FILTER) != 0u)
2342:Generated_Source\PSoC4/capsense_CSHL.c ****                 {
2343:Generated_Source\PSoC4/capsense_CSHL.c ****                     capsense_posFiltersData[firstTimeIndex] = 0u;
2344:Generated_Source\PSoC4/capsense_CSHL.c ****                 }
2345:Generated_Source\PSoC4/capsense_CSHL.c ****             }
2346:Generated_Source\PSoC4/capsense_CSHL.c ****         #endif /* (0u != capsense_TOUCH_PADS_POS_FILTERS_MASK) */
2347:Generated_Source\PSoC4/capsense_CSHL.c **** 
2348:Generated_Source\PSoC4/capsense_CSHL.c ****         return (touch);
2349:Generated_Source\PSoC4/capsense_CSHL.c ****     }
2350:Generated_Source\PSoC4/capsense_CSHL.c **** #endif /* (capsense_TOTAL_TOUCH_PADS_BASIC_COUNT > 0u) */
2351:Generated_Source\PSoC4/capsense_CSHL.c **** 
2352:Generated_Source\PSoC4/capsense_CSHL.c **** 
2353:Generated_Source\PSoC4/capsense_CSHL.c **** #if ( (0u != (capsense_RAW_FILTER_MASK & capsense_MEDIAN_FILTER)) || \
2354:Generated_Source\PSoC4/capsense_CSHL.c ****       (0u != (capsense_POS_FILTERS_MASK & capsense_MEDIAN_FILTER)) || \
2355:Generated_Source\PSoC4/capsense_CSHL.c ****       ((capsense_TUNING_METHOD == capsense__TUNING_AUTO)) )
2356:Generated_Source\PSoC4/capsense_CSHL.c ****     /*******************************************************************************
2357:Generated_Source\PSoC4/capsense_CSHL.c ****     * Function Name: capsense_MedianFilter
2358:Generated_Source\PSoC4/capsense_CSHL.c ****     ********************************************************************************
2359:Generated_Source\PSoC4/capsense_CSHL.c ****     *
2360:Generated_Source\PSoC4/capsense_CSHL.c ****     * Summary:
2361:Generated_Source\PSoC4/capsense_CSHL.c ****     *  This is the Median filter function.
2362:Generated_Source\PSoC4/capsense_CSHL.c ****     *  The median filter looks at the three most recent samples and reports the
2363:Generated_Source\PSoC4/capsense_CSHL.c ****     *  median value.
2364:Generated_Source\PSoC4/capsense_CSHL.c ****     *
2365:Generated_Source\PSoC4/capsense_CSHL.c ****     * Parameters:
2366:Generated_Source\PSoC4/capsense_CSHL.c ****     *  x1:  Current value.
2367:Generated_Source\PSoC4/capsense_CSHL.c ****     *  x2:  Previous value.
2368:Generated_Source\PSoC4/capsense_CSHL.c ****     *  x3:  Before previous value.
2369:Generated_Source\PSoC4/capsense_CSHL.c ****     *
2370:Generated_Source\PSoC4/capsense_CSHL.c ****     * Return:
2371:Generated_Source\PSoC4/capsense_CSHL.c ****     *  Returns filtered value.
2372:Generated_Source\PSoC4/capsense_CSHL.c ****     *
2373:Generated_Source\PSoC4/capsense_CSHL.c ****     * Global Variables:
2374:Generated_Source\PSoC4/capsense_CSHL.c ****     *  None.
2375:Generated_Source\PSoC4/capsense_CSHL.c ****     *
2376:Generated_Source\PSoC4/capsense_CSHL.c ****     * Side Effects:
2377:Generated_Source\PSoC4/capsense_CSHL.c ****     *  None
2378:Generated_Source\PSoC4/capsense_CSHL.c ****     *
2379:Generated_Source\PSoC4/capsense_CSHL.c ****     *******************************************************************************/
2380:Generated_Source\PSoC4/capsense_CSHL.c ****     uint16 capsense_MedianFilter(uint16 x1, uint16 x2, uint16 x3)
2381:Generated_Source\PSoC4/capsense_CSHL.c ****     {
ARM GAS  C:\Users\Mykola\AppData\Local\Temp\ccSL9DbN.s 			page 64


 1197              		.loc 1 2381 0
 1198              		.cfi_startproc
 1199              	.LVL137:
2382:Generated_Source\PSoC4/capsense_CSHL.c ****         uint16 tmp;
2383:Generated_Source\PSoC4/capsense_CSHL.c **** 
2384:Generated_Source\PSoC4/capsense_CSHL.c ****         if (x1 > x2)
 1200              		.loc 1 2384 0
 1201 0000 8842     		cmp	r0, r1
 1202 0002 02D9     		bls	.L107
 1203 0004 031C     		mov	r3, r0
2385:Generated_Source\PSoC4/capsense_CSHL.c ****         {
2386:Generated_Source\PSoC4/capsense_CSHL.c ****             tmp = x2;
2387:Generated_Source\PSoC4/capsense_CSHL.c ****             x2 = x1;
2388:Generated_Source\PSoC4/capsense_CSHL.c ****             x1 = tmp;
 1204              		.loc 1 2388 0
 1205 0006 081C     		mov	r0, r1
 1206              	.LVL138:
2387:Generated_Source\PSoC4/capsense_CSHL.c ****             x1 = tmp;
 1207              		.loc 1 2387 0
 1208 0008 191C     		mov	r1, r3
 1209              	.LVL139:
 1210              	.L107:
2389:Generated_Source\PSoC4/capsense_CSHL.c ****         }
2390:Generated_Source\PSoC4/capsense_CSHL.c **** 
2391:Generated_Source\PSoC4/capsense_CSHL.c ****         if (x2 > x3)
 1211              		.loc 1 2391 0
 1212 000a 9142     		cmp	r1, r2
 1213 000c 00D9     		bls	.L108
2392:Generated_Source\PSoC4/capsense_CSHL.c ****         {
2393:Generated_Source\PSoC4/capsense_CSHL.c ****             x2 = x3;
 1214              		.loc 1 2393 0
 1215 000e 111C     		mov	r1, r2
 1216              	.LVL140:
 1217              	.L108:
2394:Generated_Source\PSoC4/capsense_CSHL.c ****         }
2395:Generated_Source\PSoC4/capsense_CSHL.c **** 
2396:Generated_Source\PSoC4/capsense_CSHL.c ****         return ((x1 > x2) ? x1 : x2);
 1218              		.loc 1 2396 0
 1219 0010 0B1C     		add	r3, r1, #0
 1220 0012 8142     		cmp	r1, r0
 1221 0014 00D2     		bcs	.L109
 1222 0016 031C     		add	r3, r0, #0
 1223              	.L109:
 1224 0018 98B2     		uxth	r0, r3
 1225              	.LVL141:
2397:Generated_Source\PSoC4/capsense_CSHL.c ****     }
 1226              		.loc 1 2397 0
 1227              		@ sp needed
 1228 001a 7047     		bx	lr
 1229              		.cfi_endproc
 1230              	.LFE66:
 1231              		.size	capsense_MedianFilter, .-capsense_MedianFilter
 1232              		.section	.text.capsense_IIR4Filter,"ax",%progbits
 1233              		.align	2
 1234              		.global	capsense_IIR4Filter
 1235              		.code	16
 1236              		.thumb_func
ARM GAS  C:\Users\Mykola\AppData\Local\Temp\ccSL9DbN.s 			page 65


 1237              		.type	capsense_IIR4Filter, %function
 1238              	capsense_IIR4Filter:
 1239              	.LFB67:
2398:Generated_Source\PSoC4/capsense_CSHL.c **** #endif /* ( (0u != (capsense_RAW_FILTER_MASK & capsense_MEDIAN_FILTER)) || \
2399:Generated_Source\PSoC4/capsense_CSHL.c ****       (0u != (capsense_POS_FILTERS_MASK & capsense_MEDIAN_FILTER)) || \
2400:Generated_Source\PSoC4/capsense_CSHL.c ****       ((capsense_TUNING_METHOD == capsense__TUNING_AUTO)) ) */
2401:Generated_Source\PSoC4/capsense_CSHL.c **** 
2402:Generated_Source\PSoC4/capsense_CSHL.c **** 
2403:Generated_Source\PSoC4/capsense_CSHL.c **** #if ( (0u != (capsense_RAW_FILTER_MASK & capsense_AVERAGING_FILTER)) || \
2404:Generated_Source\PSoC4/capsense_CSHL.c ****       (0u != (capsense_POS_FILTERS_MASK & capsense_AVERAGING_FILTER)) )
2405:Generated_Source\PSoC4/capsense_CSHL.c ****     /*******************************************************************************
2406:Generated_Source\PSoC4/capsense_CSHL.c ****     * Function Name: capsense_AveragingFilter
2407:Generated_Source\PSoC4/capsense_CSHL.c ****     ********************************************************************************
2408:Generated_Source\PSoC4/capsense_CSHL.c ****     *
2409:Generated_Source\PSoC4/capsense_CSHL.c ****     * Summary:
2410:Generated_Source\PSoC4/capsense_CSHL.c ****     *  This is the Averaging filter function.
2411:Generated_Source\PSoC4/capsense_CSHL.c ****     *  The averaging filter looks at the three most recent samples of a position and
2412:Generated_Source\PSoC4/capsense_CSHL.c ****     *  reports the averaging value.
2413:Generated_Source\PSoC4/capsense_CSHL.c ****     *
2414:Generated_Source\PSoC4/capsense_CSHL.c ****     * Parameters:
2415:Generated_Source\PSoC4/capsense_CSHL.c ****     *  x1:  Current value.
2416:Generated_Source\PSoC4/capsense_CSHL.c ****     *  x2:  Previous value.
2417:Generated_Source\PSoC4/capsense_CSHL.c ****     *  x3:  Before previous value.
2418:Generated_Source\PSoC4/capsense_CSHL.c ****     *
2419:Generated_Source\PSoC4/capsense_CSHL.c ****     * Return:
2420:Generated_Source\PSoC4/capsense_CSHL.c ****     *  Returns filtered value.
2421:Generated_Source\PSoC4/capsense_CSHL.c ****     *
2422:Generated_Source\PSoC4/capsense_CSHL.c ****     * Global Variables:
2423:Generated_Source\PSoC4/capsense_CSHL.c ****     *  None.
2424:Generated_Source\PSoC4/capsense_CSHL.c ****     *
2425:Generated_Source\PSoC4/capsense_CSHL.c ****     * Side Effects:
2426:Generated_Source\PSoC4/capsense_CSHL.c ****     *  None
2427:Generated_Source\PSoC4/capsense_CSHL.c ****     *
2428:Generated_Source\PSoC4/capsense_CSHL.c ****     *******************************************************************************/
2429:Generated_Source\PSoC4/capsense_CSHL.c ****     uint16 capsense_AveragingFilter(uint16 x1, uint16 x2, uint16 x3)
2430:Generated_Source\PSoC4/capsense_CSHL.c ****     {
2431:Generated_Source\PSoC4/capsense_CSHL.c ****         uint32 tmp = ((uint32)x1 + (uint32)x2 + (uint32)x3) / 3u;
2432:Generated_Source\PSoC4/capsense_CSHL.c **** 
2433:Generated_Source\PSoC4/capsense_CSHL.c ****         return ((uint16) tmp);
2434:Generated_Source\PSoC4/capsense_CSHL.c ****     }
2435:Generated_Source\PSoC4/capsense_CSHL.c **** #endif /* ( (0u != (capsense_RAW_FILTER_MASK & capsense_AVERAGING_FILTER) || \
2436:Generated_Source\PSoC4/capsense_CSHL.c ****       (0u != (capsense_POS_FILTERS_MASK & capsense_AVERAGING_FILTER) ) */
2437:Generated_Source\PSoC4/capsense_CSHL.c **** 
2438:Generated_Source\PSoC4/capsense_CSHL.c **** 
2439:Generated_Source\PSoC4/capsense_CSHL.c **** #if ( (0u != (capsense_RAW_FILTER_MASK & capsense_IIR2_FILTER)) || \
2440:Generated_Source\PSoC4/capsense_CSHL.c ****       (0u != (capsense_POS_FILTERS_MASK & capsense_IIR2_FILTER)) )
2441:Generated_Source\PSoC4/capsense_CSHL.c ****     /*******************************************************************************
2442:Generated_Source\PSoC4/capsense_CSHL.c ****     * Function Name: capsense_IIR2Filter
2443:Generated_Source\PSoC4/capsense_CSHL.c ****     ********************************************************************************
2444:Generated_Source\PSoC4/capsense_CSHL.c ****     *
2445:Generated_Source\PSoC4/capsense_CSHL.c ****     * Summary:
2446:Generated_Source\PSoC4/capsense_CSHL.c ****     *  This is the IIR1/2 filter function. IIR1/2 = 1/2current + 1/2previous.
2447:Generated_Source\PSoC4/capsense_CSHL.c ****     *
2448:Generated_Source\PSoC4/capsense_CSHL.c ****     * Parameters:
2449:Generated_Source\PSoC4/capsense_CSHL.c ****     *  x1:  Current value.
2450:Generated_Source\PSoC4/capsense_CSHL.c ****     *  x2:  Previous value.
2451:Generated_Source\PSoC4/capsense_CSHL.c ****     *
ARM GAS  C:\Users\Mykola\AppData\Local\Temp\ccSL9DbN.s 			page 66


2452:Generated_Source\PSoC4/capsense_CSHL.c ****     * Return:
2453:Generated_Source\PSoC4/capsense_CSHL.c ****     *  Returns filtered value.
2454:Generated_Source\PSoC4/capsense_CSHL.c ****     *
2455:Generated_Source\PSoC4/capsense_CSHL.c ****     * Global Variables:
2456:Generated_Source\PSoC4/capsense_CSHL.c ****     *  None.
2457:Generated_Source\PSoC4/capsense_CSHL.c ****     *
2458:Generated_Source\PSoC4/capsense_CSHL.c ****     * Side Effects:
2459:Generated_Source\PSoC4/capsense_CSHL.c ****     *  None
2460:Generated_Source\PSoC4/capsense_CSHL.c ****     *
2461:Generated_Source\PSoC4/capsense_CSHL.c ****     *******************************************************************************/
2462:Generated_Source\PSoC4/capsense_CSHL.c ****     uint16 capsense_IIR2Filter(uint16 x1, uint16 x2)
2463:Generated_Source\PSoC4/capsense_CSHL.c ****     {
2464:Generated_Source\PSoC4/capsense_CSHL.c ****         uint32 tmp;
2465:Generated_Source\PSoC4/capsense_CSHL.c **** 
2466:Generated_Source\PSoC4/capsense_CSHL.c ****         /* IIR = 1/2 Current Value+ 1/2 Previous Value */
2467:Generated_Source\PSoC4/capsense_CSHL.c ****         tmp = (uint32)x1 + (uint32)x2;
2468:Generated_Source\PSoC4/capsense_CSHL.c ****         tmp >>= 1u;
2469:Generated_Source\PSoC4/capsense_CSHL.c **** 
2470:Generated_Source\PSoC4/capsense_CSHL.c ****         return ((uint16) tmp);
2471:Generated_Source\PSoC4/capsense_CSHL.c ****     }
2472:Generated_Source\PSoC4/capsense_CSHL.c **** #endif /* ( (0u != (capsense_RAW_FILTER_MASK & capsense_IIR2_FILTER)) || \
2473:Generated_Source\PSoC4/capsense_CSHL.c ****        *    (0u != (capsense_POS_FILTERS_MASK & capsense_IIR2_FILTER)) )
2474:Generated_Source\PSoC4/capsense_CSHL.c ****        */
2475:Generated_Source\PSoC4/capsense_CSHL.c **** 
2476:Generated_Source\PSoC4/capsense_CSHL.c **** 
2477:Generated_Source\PSoC4/capsense_CSHL.c **** #if ( (0u != (capsense_RAW_FILTER_MASK & capsense_IIR4_FILTER)) || \
2478:Generated_Source\PSoC4/capsense_CSHL.c ****       (0u != (capsense_POS_FILTERS_MASK & capsense_IIR4_FILTER)) )
2479:Generated_Source\PSoC4/capsense_CSHL.c ****     /*******************************************************************************
2480:Generated_Source\PSoC4/capsense_CSHL.c ****     * Function Name: capsense_IIR4Filter
2481:Generated_Source\PSoC4/capsense_CSHL.c ****     ********************************************************************************
2482:Generated_Source\PSoC4/capsense_CSHL.c ****     *
2483:Generated_Source\PSoC4/capsense_CSHL.c ****     * Summary:
2484:Generated_Source\PSoC4/capsense_CSHL.c ****     *  This is the IIR1/4 filter function. IIR1/4 = 1/4current + 3/4previous.
2485:Generated_Source\PSoC4/capsense_CSHL.c ****     *
2486:Generated_Source\PSoC4/capsense_CSHL.c ****     * Parameters:
2487:Generated_Source\PSoC4/capsense_CSHL.c ****     *  x1:  Current value.
2488:Generated_Source\PSoC4/capsense_CSHL.c ****     *  x2:  Previous value.
2489:Generated_Source\PSoC4/capsense_CSHL.c ****     *
2490:Generated_Source\PSoC4/capsense_CSHL.c ****     * Return:
2491:Generated_Source\PSoC4/capsense_CSHL.c ****     *  Returns a filtered value.
2492:Generated_Source\PSoC4/capsense_CSHL.c ****     *
2493:Generated_Source\PSoC4/capsense_CSHL.c ****     * Global Variables:
2494:Generated_Source\PSoC4/capsense_CSHL.c ****     *  None.
2495:Generated_Source\PSoC4/capsense_CSHL.c ****     *
2496:Generated_Source\PSoC4/capsense_CSHL.c ****     * Side Effects:
2497:Generated_Source\PSoC4/capsense_CSHL.c ****     *  None
2498:Generated_Source\PSoC4/capsense_CSHL.c ****     *
2499:Generated_Source\PSoC4/capsense_CSHL.c ****     *******************************************************************************/
2500:Generated_Source\PSoC4/capsense_CSHL.c ****     uint16 capsense_IIR4Filter(uint16 x1, uint16 x2)
2501:Generated_Source\PSoC4/capsense_CSHL.c ****     {
 1240              		.loc 1 2501 0
 1241              		.cfi_startproc
 1242              	.LVL142:
2502:Generated_Source\PSoC4/capsense_CSHL.c ****         uint32 tmp;
2503:Generated_Source\PSoC4/capsense_CSHL.c **** 
2504:Generated_Source\PSoC4/capsense_CSHL.c ****         /* IIR = 1/4 Current Value + 3/4 Previous Value */
2505:Generated_Source\PSoC4/capsense_CSHL.c ****         tmp = (uint32)x1 + (uint32)x2;
ARM GAS  C:\Users\Mykola\AppData\Local\Temp\ccSL9DbN.s 			page 67


 1243              		.loc 1 2505 0
 1244 0000 4318     		add	r3, r0, r1
 1245              	.LVL143:
2506:Generated_Source\PSoC4/capsense_CSHL.c ****         tmp += ((uint32)x2 << 1u);
 1246              		.loc 1 2506 0
 1247 0002 4900     		lsl	r1, r1, #1
 1248              	.LVL144:
 1249 0004 C818     		add	r0, r1, r3
 1250              	.LVL145:
2507:Generated_Source\PSoC4/capsense_CSHL.c ****         tmp >>= 2u;
 1251              		.loc 1 2507 0
 1252 0006 8008     		lsr	r0, r0, #2
 1253              	.LVL146:
2508:Generated_Source\PSoC4/capsense_CSHL.c **** 
2509:Generated_Source\PSoC4/capsense_CSHL.c ****         return ((uint16) tmp);
 1254              		.loc 1 2509 0
 1255 0008 80B2     		uxth	r0, r0
 1256              	.LVL147:
2510:Generated_Source\PSoC4/capsense_CSHL.c ****     }
 1257              		.loc 1 2510 0
 1258              		@ sp needed
 1259 000a 7047     		bx	lr
 1260              		.cfi_endproc
 1261              	.LFE67:
 1262              		.size	capsense_IIR4Filter, .-capsense_IIR4Filter
 1263              		.section	.text.capsense_UpdateBaselineNoThreshold,"ax",%progbits
 1264              		.align	2
 1265              		.global	capsense_UpdateBaselineNoThreshold
 1266              		.code	16
 1267              		.thumb_func
 1268              		.type	capsense_UpdateBaselineNoThreshold, %function
 1269              	capsense_UpdateBaselineNoThreshold:
 1270              	.LFB39:
 355:Generated_Source\PSoC4/capsense_CSHL.c ****     uint32 calc;
 1271              		.loc 1 355 0
 1272              		.cfi_startproc
 1273              	.LVL148:
 1274 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 1275              		.cfi_def_cfa_offset 20
 1276              		.cfi_offset 4, -20
 1277              		.cfi_offset 5, -16
 1278              		.cfi_offset 6, -12
 1279              		.cfi_offset 7, -8
 1280              		.cfi_offset 14, -4
 1281 0002 4746     		mov	r7, r8
 1282 0004 80B4     		push	{r7}
 1283              		.cfi_def_cfa_offset 24
 1284              		.cfi_offset 8, -24
 1285 0006 82B0     		sub	sp, sp, #8
 1286              		.cfi_def_cfa_offset 32
 1287 0008 041C     		mov	r4, r0
 360:Generated_Source\PSoC4/capsense_CSHL.c ****     uint8 noiseThreshold;
 1288              		.loc 1 360 0
 1289 000a 3B4B     		ldr	r3, .L124
 1290 000c 1E5C     		ldrb	r6, [r3, r0]
 369:Generated_Source\PSoC4/capsense_CSHL.c ****     filteredRawData = capsense_sensorRaw[sensor];
 1291              		.loc 1 369 0
ARM GAS  C:\Users\Mykola\AppData\Local\Temp\ccSL9DbN.s 			page 68


 1292 000e 3B4B     		ldr	r3, .L124+4
 1293 0010 9B5D     		ldrb	r3, [r3, r6]
 1294 0012 0193     		str	r3, [sp, #4]
 1295              	.LVL149:
 370:Generated_Source\PSoC4/capsense_CSHL.c **** 
 1296              		.loc 1 370 0
 1297 0014 4200     		lsl	r2, r0, #1
 1298 0016 3A4B     		ldr	r3, .L124+8
 1299 0018 D75A     		ldrh	r7, [r2, r3]
 1300              	.LVL150:
 373:Generated_Source\PSoC4/capsense_CSHL.c ****     {
 1301              		.loc 1 373 0
 1302 001a 3A4B     		ldr	r3, .L124+12
 1303 001c 5B7A     		ldrb	r3, [r3, #9]
 1304 001e 002B     		cmp	r3, #0
 1305 0020 08D0     		beq	.L114
 394:Generated_Source\PSoC4/capsense_CSHL.c ****             capsense_rawFilterData1[sensor] = filteredRawData;
 1306              		.loc 1 394 0
 1307 0022 394D     		ldr	r5, .L124+16
 1308 0024 9046     		mov	r8, r2
 1309 0026 515B     		ldrh	r1, [r2, r5]
 1310 0028 381C     		mov	r0, r7
 1311              	.LVL151:
 1312 002a FFF7FEFF 		bl	capsense_IIR4Filter
 1313              	.LVL152:
 1314 002e 071C     		mov	r7, r0
 1315              	.LVL153:
 395:Generated_Source\PSoC4/capsense_CSHL.c **** 
 1316              		.loc 1 395 0
 1317 0030 4346     		mov	r3, r8
 1318 0032 5853     		strh	r0, [r3, r5]
 1319              	.LVL154:
 1320              	.L114:
 416:Generated_Source\PSoC4/capsense_CSHL.c ****     #endif /* (capsense_TUNING_METHOD == capsense__TUNING_AUTO) */
 1321              		.loc 1 416 0
 1322 0034 E1B2     		uxtb	r1, r4
 1323 0036 3548     		ldr	r0, .L124+20
 1324 0038 314A     		ldr	r2, .L124+8
 1325 003a FFF7FEFF 		bl	MeasureNoiseEnvelope_P4_v2_30
 1326              	.LVL155:
 421:Generated_Source\PSoC4/capsense_CSHL.c ****     {
 1327              		.loc 1 421 0
 1328 003e 6300     		lsl	r3, r4, #1
 1329 0040 334A     		ldr	r2, .L124+24
 1330 0042 9A5A     		ldrh	r2, [r3, r2]
 1331 0044 BA42     		cmp	r2, r7
 1332 0046 07D8     		bhi	.L115
 423:Generated_Source\PSoC4/capsense_CSHL.c ****         tempRaw = filteredRawData - capsense_sensorBaseline[sensor];
 1333              		.loc 1 423 0
 1334 0048 0021     		mov	r1, #0
 1335 004a 324B     		ldr	r3, .L124+28
 1336 004c 1955     		strb	r1, [r3, r4]
 424:Generated_Source\PSoC4/capsense_CSHL.c ****         sign = 1u;    /* Positive difference - Calculate the Signal */
 1337              		.loc 1 424 0
 1338 004e BD1A     		sub	r5, r7, r2
 1339 0050 ADB2     		uxth	r5, r5
 1340              	.LVL156:
ARM GAS  C:\Users\Mykola\AppData\Local\Temp\ccSL9DbN.s 			page 69


 425:Generated_Source\PSoC4/capsense_CSHL.c ****     }
 1341              		.loc 1 425 0
 1342 0052 0123     		mov	r3, #1
 1343 0054 9846     		mov	r8, r3
 1344 0056 03E0     		b	.L116
 1345              	.LVL157:
 1346              	.L115:
 429:Generated_Source\PSoC4/capsense_CSHL.c ****         sign = 0u;    /* Negative difference - Do NOT calculate the Signal */
 1347              		.loc 1 429 0
 1348 0058 D51B     		sub	r5, r2, r7
 1349 005a ADB2     		uxth	r5, r5
 1350              	.LVL158:
 430:Generated_Source\PSoC4/capsense_CSHL.c ****     }
 1351              		.loc 1 430 0
 1352 005c 0023     		mov	r3, #0
 1353 005e 9846     		mov	r8, r3
 1354              	.LVL159:
 1355              	.L116:
 434:Generated_Source\PSoC4/capsense_CSHL.c ****     #else
 1356              		.loc 1 434 0
 1357 0060 4346     		mov	r3, r8
 1358 0062 002B     		cmp	r3, #0
 1359 0064 15D1     		bne	.L117
 434:Generated_Source\PSoC4/capsense_CSHL.c ****     #else
 1360              		.loc 1 434 0 is_stmt 0 discriminator 1
 1361 0066 2C4B     		ldr	r3, .L124+32
 1362 0068 9B5D     		ldrb	r3, [r3, r6]
 1363 006a AB42     		cmp	r3, r5
 1364 006c 11D2     		bcs	.L117
 439:Generated_Source\PSoC4/capsense_CSHL.c ****         {
 1365              		.loc 1 439 0 is_stmt 1
 1366 006e 294B     		ldr	r3, .L124+28
 1367 0070 1B5D     		ldrb	r3, [r3, r4]
 1368 0072 244A     		ldr	r2, .L124+12
 1369 0074 1219     		add	r2, r2, r4
 1370 0076 1279     		ldrb	r2, [r2, #4]
 1371 0078 9342     		cmp	r3, r2
 1372 007a 06D3     		bcc	.L118
 441:Generated_Source\PSoC4/capsense_CSHL.c ****             capsense_lowBaselineResetCnt[sensor] = 0u;
 1373              		.loc 1 441 0
 1374 007c 201C     		mov	r0, r4
 1375 007e FFF7FEFF 		bl	capsense_BaseInit
 1376              	.LVL160:
 442:Generated_Source\PSoC4/capsense_CSHL.c ****         }
 1377              		.loc 1 442 0
 1378 0082 0022     		mov	r2, #0
 1379 0084 234B     		ldr	r3, .L124+28
 1380 0086 1A55     		strb	r2, [r3, r4]
 1381 0088 1CE0     		b	.L119
 1382              	.L118:
 446:Generated_Source\PSoC4/capsense_CSHL.c ****         }
 1383              		.loc 1 446 0
 1384 008a 0133     		add	r3, r3, #1
 1385 008c 214A     		ldr	r2, .L124+28
 1386 008e 1355     		strb	r3, [r2, r4]
 1387 0090 18E0     		b	.L119
 1388              	.L117:
ARM GAS  C:\Users\Mykola\AppData\Local\Temp\ccSL9DbN.s 			page 70


 454:Generated_Source\PSoC4/capsense_CSHL.c ****              ((tempRaw < (uint16) capsense_negativeNoiseThreshold[widget])
 1389              		.loc 1 454 0
 1390 0092 6B46     		mov	r3, sp
 1391 0094 9B88     		ldrh	r3, [r3, #4]
 1392 0096 AB42     		cmp	r3, r5
 1393 0098 06D2     		bcs	.L120
 455:Generated_Source\PSoC4/capsense_CSHL.c ****                && (sign == 0u)))
 1394              		.loc 1 455 0 discriminator 1
 1395 009a 1F4B     		ldr	r3, .L124+32
 1396 009c 9B5D     		ldrb	r3, [r3, r6]
 454:Generated_Source\PSoC4/capsense_CSHL.c ****              ((tempRaw < (uint16) capsense_negativeNoiseThreshold[widget])
 1397              		.loc 1 454 0 discriminator 1
 1398 009e AB42     		cmp	r3, r5
 1399 00a0 10D9     		bls	.L119
 456:Generated_Source\PSoC4/capsense_CSHL.c ****             {
 1400              		.loc 1 456 0
 1401 00a2 4346     		mov	r3, r8
 1402 00a4 002B     		cmp	r3, #0
 1403 00a6 0DD1     		bne	.L119
 1404              	.L120:
 467:Generated_Source\PSoC4/capsense_CSHL.c ****                 calc |= (uint32) capsense_sensorBaselineLow[sensor];
 1405              		.loc 1 467 0
 1406 00a8 1302     		lsl	r3, r2, #8
 1407              	.LVL161:
 468:Generated_Source\PSoC4/capsense_CSHL.c **** 
 1408              		.loc 1 468 0
 1409 00aa 1948     		ldr	r0, .L124+24
 1410 00ac 0119     		add	r1, r0, r4
 1411 00ae 0E7B     		ldrb	r6, [r1, #12]
 1412 00b0 3343     		orr	r3, r6
 1413              	.LVL162:
 471:Generated_Source\PSoC4/capsense_CSHL.c **** 
 1414              		.loc 1 471 0
 1415 00b2 FF18     		add	r7, r7, r3
 1416              	.LVL163:
 474:Generated_Source\PSoC4/capsense_CSHL.c **** 
 1417              		.loc 1 474 0
 1418 00b4 BF1A     		sub	r7, r7, r2
 1419              	.LVL164:
 477:Generated_Source\PSoC4/capsense_CSHL.c ****                 capsense_sensorBaselineLow[sensor] = ((uint8) calc);
 1420              		.loc 1 477 0
 1421 00b6 3A0A     		lsr	r2, r7, #8
 1422 00b8 6300     		lsl	r3, r4, #1
 1423 00ba C252     		strh	r2, [r0, r3]
 478:Generated_Source\PSoC4/capsense_CSHL.c **** 
 1424              		.loc 1 478 0
 1425 00bc 0F73     		strb	r7, [r1, #12]
 480:Generated_Source\PSoC4/capsense_CSHL.c ****         #if (capsense_AUTO_RESET == capsense_AUTO_RESET_DISABLE)
 1426              		.loc 1 480 0
 1427 00be 0022     		mov	r2, #0
 1428 00c0 144B     		ldr	r3, .L124+28
 1429 00c2 1A55     		strb	r2, [r3, r4]
 1430              	.LVL165:
 1431              	.L119:
 487:Generated_Source\PSoC4/capsense_CSHL.c ****     {
 1432              		.loc 1 487 0
 1433 00c4 6B46     		mov	r3, sp
ARM GAS  C:\Users\Mykola\AppData\Local\Temp\ccSL9DbN.s 			page 71


 1434 00c6 9E88     		ldrh	r6, [r3, #4]
 1435 00c8 AE42     		cmp	r6, r5
 1436 00ca 0DD2     		bcs	.L121
 487:Generated_Source\PSoC4/capsense_CSHL.c ****     {
 1437              		.loc 1 487 0 is_stmt 0 discriminator 1
 1438 00cc 4346     		mov	r3, r8
 1439 00ce 002B     		cmp	r3, #0
 1440 00d0 0AD0     		beq	.L121
 1441              	.LVL166:
 491:Generated_Source\PSoC4/capsense_CSHL.c ****             {
 1442              		.loc 1 491 0 is_stmt 1
 1443 00d2 FF2D     		cmp	r5, #255
 1444 00d4 04D9     		bls	.L122
 493:Generated_Source\PSoC4/capsense_CSHL.c ****             }
 1445              		.loc 1 493 0
 1446 00d6 0E4B     		ldr	r3, .L124+24
 1447              	.LVL167:
 1448 00d8 1C19     		add	r4, r3, r4
 1449              	.LVL168:
 1450 00da FF23     		mov	r3, #255
 1451 00dc 2375     		strb	r3, [r4, #20]
 1452 00de 07E0     		b	.L113
 1453              	.LVL169:
 1454              	.L122:
 497:Generated_Source\PSoC4/capsense_CSHL.c ****             }
 1455              		.loc 1 497 0
 1456 00e0 0B4B     		ldr	r3, .L124+24
 1457              	.LVL170:
 1458 00e2 1C19     		add	r4, r3, r4
 1459              	.LVL171:
 1460 00e4 2575     		strb	r5, [r4, #20]
 1461 00e6 03E0     		b	.L113
 1462              	.LVL172:
 1463              	.L121:
 506:Generated_Source\PSoC4/capsense_CSHL.c ****     }
 1464              		.loc 1 506 0
 1465 00e8 094B     		ldr	r3, .L124+24
 1466 00ea 1C19     		add	r4, r3, r4
 1467              	.LVL173:
 1468 00ec 0023     		mov	r3, #0
 1469 00ee 2375     		strb	r3, [r4, #20]
 1470              	.L113:
 513:Generated_Source\PSoC4/capsense_CSHL.c **** 
 1471              		.loc 1 513 0
 1472 00f0 02B0     		add	sp, sp, #8
 1473              		@ sp needed
 1474              	.LVL174:
 1475              	.LVL175:
 1476 00f2 04BC     		pop	{r2}
 1477 00f4 9046     		mov	r8, r2
 1478 00f6 F0BD     		pop	{r4, r5, r6, r7, pc}
 1479              	.L125:
 1480              		.align	2
 1481              	.L124:
 1482 00f8 00000000 		.word	capsense_widgetNumber
 1483 00fc 00000000 		.word	capsense_noiseThreshold
 1484 0100 00000000 		.word	capsense_sensorRaw
ARM GAS  C:\Users\Mykola\AppData\Local\Temp\ccSL9DbN.s 			page 72


 1485 0104 00000000 		.word	.LANCHOR1
 1486 0108 00000000 		.word	capsense_rawFilterData1
 1487 010c 00000000 		.word	capsense_config
 1488 0110 00000000 		.word	.LANCHOR0
 1489 0114 00000000 		.word	capsense_lowBaselineResetCnt
 1490 0118 00000000 		.word	capsense_negativeNoiseThreshold
 1491              		.cfi_endproc
 1492              	.LFE39:
 1493              		.size	capsense_UpdateBaselineNoThreshold, .-capsense_UpdateBaselineNoThreshold
 1494              		.section	.text.capsense_UpdateSensorBaseline,"ax",%progbits
 1495              		.align	2
 1496              		.global	capsense_UpdateSensorBaseline
 1497              		.code	16
 1498              		.thumb_func
 1499              		.type	capsense_UpdateSensorBaseline, %function
 1500              	capsense_UpdateSensorBaseline:
 1501              	.LFB40:
 547:Generated_Source\PSoC4/capsense_CSHL.c ****     #if (capsense_TOTAL_GENERICS_COUNT)
 1502              		.loc 1 547 0
 1503              		.cfi_startproc
 1504              	.LVL176:
 1505 0000 10B5     		push	{r4, lr}
 1506              		.cfi_def_cfa_offset 8
 1507              		.cfi_offset 4, -8
 1508              		.cfi_offset 14, -4
 1509 0002 041C     		mov	r4, r0
 559:Generated_Source\PSoC4/capsense_CSHL.c ****     #endif /* (capsense_TUNING_METHOD == capsense__TUNING_AUTO) */
 1510              		.loc 1 559 0
 1511 0004 FFF7FEFF 		bl	capsense_UpdateThresholds
 1512              	.LVL177:
 562:Generated_Source\PSoC4/capsense_CSHL.c **** 
 1513              		.loc 1 562 0
 1514 0008 201C     		mov	r0, r4
 1515 000a FFF7FEFF 		bl	capsense_UpdateBaselineNoThreshold
 1516              	.LVL178:
 568:Generated_Source\PSoC4/capsense_CSHL.c **** 
 1517              		.loc 1 568 0
 1518              		@ sp needed
 1519              	.LVL179:
 1520 000e 10BD     		pop	{r4, pc}
 1521              		.cfi_endproc
 1522              	.LFE40:
 1523              		.size	capsense_UpdateSensorBaseline, .-capsense_UpdateSensorBaseline
 1524              		.section	.text.capsense_UpdateEnabledBaselines,"ax",%progbits
 1525              		.align	2
 1526              		.global	capsense_UpdateEnabledBaselines
 1527              		.code	16
 1528              		.thumb_func
 1529              		.type	capsense_UpdateEnabledBaselines, %function
 1530              	capsense_UpdateEnabledBaselines:
 1531              	.LFB41:
 601:Generated_Source\PSoC4/capsense_CSHL.c ****     uint32 i;
 1532              		.loc 1 601 0
 1533              		.cfi_startproc
 1534 0000 10B5     		push	{r4, lr}
 1535              		.cfi_def_cfa_offset 8
 1536              		.cfi_offset 4, -8
ARM GAS  C:\Users\Mykola\AppData\Local\Temp\ccSL9DbN.s 			page 73


 1537              		.cfi_offset 14, -4
 1538              	.LVL180:
 605:Generated_Source\PSoC4/capsense_CSHL.c ****     {
 1539              		.loc 1 605 0
 1540 0002 0024     		mov	r4, #0
 1541 0004 09E0     		b	.L128
 1542              	.LVL181:
 1543              	.L130:
 607:Generated_Source\PSoC4/capsense_CSHL.c **** 
 1544              		.loc 1 607 0
 1545 0006 0648     		ldr	r0, .L131
 1546 0008 211C     		mov	r1, r4
 1547 000a FFF7FEFF 		bl	capsense_GetBitValue
 1548              	.LVL182:
 609:Generated_Source\PSoC4/capsense_CSHL.c ****         {
 1549              		.loc 1 609 0
 1550 000e 0028     		cmp	r0, #0
 1551 0010 02D0     		beq	.L129
 611:Generated_Source\PSoC4/capsense_CSHL.c ****         }
 1552              		.loc 1 611 0
 1553 0012 201C     		mov	r0, r4
 1554              	.LVL183:
 1555 0014 FFF7FEFF 		bl	capsense_UpdateSensorBaseline
 1556              	.LVL184:
 1557              	.L129:
 605:Generated_Source\PSoC4/capsense_CSHL.c ****     {
 1558              		.loc 1 605 0 discriminator 2
 1559 0018 0134     		add	r4, r4, #1
 1560              	.LVL185:
 1561              	.L128:
 605:Generated_Source\PSoC4/capsense_CSHL.c ****     {
 1562              		.loc 1 605 0 is_stmt 0 discriminator 1
 1563 001a 042C     		cmp	r4, #4
 1564 001c F3D9     		bls	.L130
 614:Generated_Source\PSoC4/capsense_CSHL.c **** 
 1565              		.loc 1 614 0 is_stmt 1
 1566              		@ sp needed
 1567              	.LVL186:
 1568 001e 10BD     		pop	{r4, pc}
 1569              	.L132:
 1570              		.align	2
 1571              	.L131:
 1572 0020 00000000 		.word	capsense_sensorEnableMask
 1573              		.cfi_endproc
 1574              	.LFE41:
 1575              		.size	capsense_UpdateEnabledBaselines, .-capsense_UpdateEnabledBaselines
 1576              		.section	.text.capsense_UpdateWidgetBaseline,"ax",%progbits
 1577              		.align	2
 1578              		.global	capsense_UpdateWidgetBaseline
 1579              		.code	16
 1580              		.thumb_func
 1581              		.type	capsense_UpdateWidgetBaseline, %function
 1582              	capsense_UpdateWidgetBaseline:
 1583              	.LFB42:
 646:Generated_Source\PSoC4/capsense_CSHL.c ****     uint32 sensorsPerWidget;
 1584              		.loc 1 646 0
 1585              		.cfi_startproc
ARM GAS  C:\Users\Mykola\AppData\Local\Temp\ccSL9DbN.s 			page 74


 1586              	.LVL187:
 1587 0000 10B5     		push	{r4, lr}
 1588              		.cfi_def_cfa_offset 8
 1589              		.cfi_offset 4, -8
 1590              		.cfi_offset 14, -4
 1591              	.LVL188:
 662:Generated_Source\PSoC4/capsense_CSHL.c ****     {
 1592              		.loc 1 662 0
 1593 0002 0024     		mov	r4, #0
 1594 0004 09E0     		b	.L134
 1595              	.LVL189:
 1596              	.L136:
 664:Generated_Source\PSoC4/capsense_CSHL.c **** 
 1597              		.loc 1 664 0
 1598 0006 0648     		ldr	r0, .L137
 1599 0008 211C     		mov	r1, r4
 1600 000a FFF7FEFF 		bl	capsense_GetBitValue
 1601              	.LVL190:
 666:Generated_Source\PSoC4/capsense_CSHL.c ****         {
 1602              		.loc 1 666 0
 1603 000e 0028     		cmp	r0, #0
 1604 0010 02D0     		beq	.L135
 668:Generated_Source\PSoC4/capsense_CSHL.c ****         }
 1605              		.loc 1 668 0
 1606 0012 201C     		mov	r0, r4
 1607              	.LVL191:
 1608 0014 FFF7FEFF 		bl	capsense_UpdateSensorBaseline
 1609              	.LVL192:
 1610              	.L135:
 662:Generated_Source\PSoC4/capsense_CSHL.c ****     {
 1611              		.loc 1 662 0 discriminator 2
 1612 0018 0134     		add	r4, r4, #1
 1613              	.LVL193:
 1614              	.L134:
 662:Generated_Source\PSoC4/capsense_CSHL.c ****     {
 1615              		.loc 1 662 0 is_stmt 0 discriminator 1
 1616 001a 042C     		cmp	r4, #4
 1617 001c F3D9     		bls	.L136
 671:Generated_Source\PSoC4/capsense_CSHL.c **** 
 1618              		.loc 1 671 0 is_stmt 1
 1619              		@ sp needed
 1620              	.LVL194:
 1621 001e 10BD     		pop	{r4, pc}
 1622              	.L138:
 1623              		.align	2
 1624              	.L137:
 1625 0020 00000000 		.word	capsense_sensorEnableMask
 1626              		.cfi_endproc
 1627              	.LFE42:
 1628              		.size	capsense_UpdateWidgetBaseline, .-capsense_UpdateWidgetBaseline
 1629              		.section	.text.capsense_GetCentroidPos,"ax",%progbits
 1630              		.align	2
 1631              		.global	capsense_GetCentroidPos
 1632              		.code	16
 1633              		.thumb_func
 1634              		.type	capsense_GetCentroidPos, %function
 1635              	capsense_GetCentroidPos:
ARM GAS  C:\Users\Mykola\AppData\Local\Temp\ccSL9DbN.s 			page 75


 1636              	.LFB64:
1749:Generated_Source\PSoC4/capsense_CSHL.c ****         #if (capsense_IS_DIPLEX_SLIDER)
 1637              		.loc 1 1749 0
 1638              		.cfi_startproc
 1639              	.LVL195:
 1640 0000 30B5     		push	{r4, r5, lr}
 1641              		.cfi_def_cfa_offset 12
 1642              		.cfi_offset 4, -12
 1643              		.cfi_offset 5, -8
 1644              		.cfi_offset 14, -4
 1645 0002 83B0     		sub	sp, sp, #12
 1646              		.cfi_def_cfa_offset 24
 1647 0004 041C     		mov	r4, r0
1756:Generated_Source\PSoC4/capsense_CSHL.c ****             uint8 posFiltersMask = capsense_posFiltersMask[widget];
 1648              		.loc 1 1756 0
 1649 0006 194B     		ldr	r3, .L143
 1650 0008 1B18     		add	r3, r3, r0
 1651 000a 1D7B     		ldrb	r5, [r3, #12]
 1652              	.LVL196:
1788:Generated_Source\PSoC4/capsense_CSHL.c ****         #endif /* (capsense_IS_DIPLEX_SLIDER) */
 1653              		.loc 1 1788 0
 1654 000c 184B     		ldr	r3, .L143+4
 1655 000e 1A5C     		ldrb	r2, [r3, r0]
 1656 0010 0020     		mov	r0, #0
 1657              	.LVL197:
 1658 0012 0521     		mov	r1, #5
 1659 0014 FFF7FEFF 		bl	capsense_FindMaximum
 1660              	.LVL198:
1791:Generated_Source\PSoC4/capsense_CSHL.c ****         {
 1661              		.loc 1 1791 0
 1662 0018 FF28     		cmp	r0, #255
 1663 001a 20D0     		beq	.L140
1794:Generated_Source\PSoC4/capsense_CSHL.c ****                          offset, count, capsense_centroidMult[widget], capsense_noiseThreshold[widg
 1664              		.loc 1 1794 0
 1665 001c 154B     		ldr	r3, .L143+8
 1666 001e 1B5D     		ldrb	r3, [r3, r4]
 1667 0020 0093     		str	r3, [sp]
 1668 0022 0021     		mov	r1, #0
 1669 0024 0522     		mov	r2, #5
 1670 0026 C823     		mov	r3, #200
 1671 0028 5B01     		lsl	r3, r3, #5
 1672 002a FFF7FEFF 		bl	capsense_CalcCentroid
 1673              	.LVL199:
 1674 002e 011C     		mov	r1, r0
 1675 0030 80B2     		uxth	r0, r0
 1676              	.LVL200:
1802:Generated_Source\PSoC4/capsense_CSHL.c **** 
 1677              		.loc 1 1802 0
 1678 0032 6B1C     		add	r3, r5, #1
 1679 0034 DBB2     		uxtb	r3, r3
 1680              	.LVL201:
1804:Generated_Source\PSoC4/capsense_CSHL.c ****                     {
 1681              		.loc 1 1804 0
 1682 0036 0D4A     		ldr	r2, .L143
 1683 0038 5219     		add	r2, r2, r5
 1684 003a 127B     		ldrb	r2, [r2, #12]
 1685 003c 002A     		cmp	r2, #0
ARM GAS  C:\Users\Mykola\AppData\Local\Temp\ccSL9DbN.s 			page 76


 1686 003e 06D1     		bne	.L141
1807:Generated_Source\PSoC4/capsense_CSHL.c ****                         #if ((0u != (capsense_MEDIAN_FILTER & \
 1687              		.loc 1 1807 0
 1688 0040 0A4A     		ldr	r2, .L143
 1689 0042 D318     		add	r3, r2, r3
 1690              	.LVL202:
 1691 0044 1973     		strb	r1, [r3, #12]
1824:Generated_Source\PSoC4/capsense_CSHL.c ****                     }
 1692              		.loc 1 1824 0
 1693 0046 5519     		add	r5, r2, r5
 1694              	.LVL203:
 1695 0048 0123     		mov	r3, #1
 1696 004a 2B73     		strb	r3, [r5, #12]
 1697 004c 0CE0     		b	.L142
 1698              	.LVL204:
 1699              	.L141:
1873:Generated_Source\PSoC4/capsense_CSHL.c ****                                 capsense_posFiltersData[posIndex] = (uint8) position;
 1700              		.loc 1 1873 0
 1701 004e 074C     		ldr	r4, .L143
 1702              	.LVL205:
 1703 0050 E418     		add	r4, r4, r3
1872:Generated_Source\PSoC4/capsense_CSHL.c ****                                                                     (uint16)capsense_posFiltersData
 1704              		.loc 1 1872 0
 1705 0052 217B     		ldrb	r1, [r4, #12]
 1706 0054 FFF7FEFF 		bl	capsense_IIR4Filter
 1707              	.LVL206:
 1708 0058 031C     		mov	r3, r0
 1709              	.LVL207:
1874:Generated_Source\PSoC4/capsense_CSHL.c ****                             }
 1710              		.loc 1 1874 0
 1711 005a 2373     		strb	r3, [r4, #12]
 1712 005c 04E0     		b	.L142
 1713              	.LVL208:
 1714              	.L140:
1904:Generated_Source\PSoC4/capsense_CSHL.c ****                 }
 1715              		.loc 1 1904 0
 1716 005e 034B     		ldr	r3, .L143
 1717 0060 5D19     		add	r5, r3, r5
 1718              	.LVL209:
 1719 0062 0023     		mov	r3, #0
 1720 0064 2B73     		strb	r3, [r5, #12]
1898:Generated_Source\PSoC4/capsense_CSHL.c **** 
 1721              		.loc 1 1898 0
 1722 0066 0448     		ldr	r0, .L143+12
 1723              	.LVL210:
 1724              	.L142:
1911:Generated_Source\PSoC4/capsense_CSHL.c **** #endif /* ((capsense_TOTAL_RADIAL_SLIDERS_COUNT > 0u) || (capsense_TOTAL_LINEAR_SLIDERS_COUNT > 0u)
 1725              		.loc 1 1911 0
 1726 0068 03B0     		add	sp, sp, #12
 1727              		@ sp needed
 1728 006a 30BD     		pop	{r4, r5, pc}
 1729              	.L144:
 1730              		.align	2
 1731              	.L143:
 1732 006c 00000000 		.word	.LANCHOR1
 1733 0070 00000000 		.word	capsense_fingerThreshold
 1734 0074 00000000 		.word	capsense_noiseThreshold
ARM GAS  C:\Users\Mykola\AppData\Local\Temp\ccSL9DbN.s 			page 77


 1735 0078 FFFF0000 		.word	65535
 1736              		.cfi_endproc
 1737              	.LFE64:
 1738              		.size	capsense_GetCentroidPos, .-capsense_GetCentroidPos
 1739              		.section	.text.capsense_GetWidgetNumber,"ax",%progbits
 1740              		.align	2
 1741              		.global	capsense_GetWidgetNumber
 1742              		.code	16
 1743              		.thumb_func
 1744              		.type	capsense_GetWidgetNumber, %function
 1745              	capsense_GetWidgetNumber:
 1746              	.LFB68:
2511:Generated_Source\PSoC4/capsense_CSHL.c **** #endif /* ( (0u != (capsense_RAW_FILTER_MASK & capsense_IIR4_FILTER)) || \
2512:Generated_Source\PSoC4/capsense_CSHL.c ****        *    (0u != (capsense_POS_FILTERS_MASK & capsense_IIR4_FILTER)) )
2513:Generated_Source\PSoC4/capsense_CSHL.c ****        */
2514:Generated_Source\PSoC4/capsense_CSHL.c **** 
2515:Generated_Source\PSoC4/capsense_CSHL.c **** 
2516:Generated_Source\PSoC4/capsense_CSHL.c **** #if ( (0u != (capsense_RAW_FILTER_MASK & capsense_JITTER_FILTER)) || \
2517:Generated_Source\PSoC4/capsense_CSHL.c ****       (0u != (capsense_POS_FILTERS_MASK & capsense_JITTER_FILTER)) || \
2518:Generated_Source\PSoC4/capsense_CSHL.c ****       (0u != (capsense_TRACKPAD_GEST_POS_FILTERS_MASK & capsense_JITTER_FILTER)))
2519:Generated_Source\PSoC4/capsense_CSHL.c ****     /*******************************************************************************
2520:Generated_Source\PSoC4/capsense_CSHL.c ****     * Function Name: uint16 capsense_JitterFilter
2521:Generated_Source\PSoC4/capsense_CSHL.c ****     ********************************************************************************
2522:Generated_Source\PSoC4/capsense_CSHL.c ****     *
2523:Generated_Source\PSoC4/capsense_CSHL.c ****     * Summary:
2524:Generated_Source\PSoC4/capsense_CSHL.c ****     *  This is the Jitter filter function.
2525:Generated_Source\PSoC4/capsense_CSHL.c ****     *
2526:Generated_Source\PSoC4/capsense_CSHL.c ****     * Parameters:
2527:Generated_Source\PSoC4/capsense_CSHL.c ****     *  x1:  Current value.
2528:Generated_Source\PSoC4/capsense_CSHL.c ****     *  x2:  Previous value.
2529:Generated_Source\PSoC4/capsense_CSHL.c ****     *
2530:Generated_Source\PSoC4/capsense_CSHL.c ****     * Return:
2531:Generated_Source\PSoC4/capsense_CSHL.c ****     *  Returns filtered value.
2532:Generated_Source\PSoC4/capsense_CSHL.c ****     *
2533:Generated_Source\PSoC4/capsense_CSHL.c ****     * Global Variables:
2534:Generated_Source\PSoC4/capsense_CSHL.c ****     *  None.
2535:Generated_Source\PSoC4/capsense_CSHL.c ****     *
2536:Generated_Source\PSoC4/capsense_CSHL.c ****     * Side Effects:
2537:Generated_Source\PSoC4/capsense_CSHL.c ****     *  None
2538:Generated_Source\PSoC4/capsense_CSHL.c ****     *
2539:Generated_Source\PSoC4/capsense_CSHL.c ****     *******************************************************************************/
2540:Generated_Source\PSoC4/capsense_CSHL.c ****     uint16 capsense_JitterFilter(uint16 x1, uint16 x2)
2541:Generated_Source\PSoC4/capsense_CSHL.c ****     {
2542:Generated_Source\PSoC4/capsense_CSHL.c ****         if (x1 > x2)
2543:Generated_Source\PSoC4/capsense_CSHL.c ****         {
2544:Generated_Source\PSoC4/capsense_CSHL.c ****             x1--;
2545:Generated_Source\PSoC4/capsense_CSHL.c ****         }
2546:Generated_Source\PSoC4/capsense_CSHL.c ****         else
2547:Generated_Source\PSoC4/capsense_CSHL.c ****         {
2548:Generated_Source\PSoC4/capsense_CSHL.c ****             if (x1 < x2)
2549:Generated_Source\PSoC4/capsense_CSHL.c ****             {
2550:Generated_Source\PSoC4/capsense_CSHL.c ****                 x1++;
2551:Generated_Source\PSoC4/capsense_CSHL.c ****             }
2552:Generated_Source\PSoC4/capsense_CSHL.c ****         }
2553:Generated_Source\PSoC4/capsense_CSHL.c **** 
2554:Generated_Source\PSoC4/capsense_CSHL.c ****         return x1;
2555:Generated_Source\PSoC4/capsense_CSHL.c ****     }
ARM GAS  C:\Users\Mykola\AppData\Local\Temp\ccSL9DbN.s 			page 78


2556:Generated_Source\PSoC4/capsense_CSHL.c **** #endif /* ( (0u != (capsense_RAW_FILTER_MASK & capsense_JITTER_FILTER)) || \
2557:Generated_Source\PSoC4/capsense_CSHL.c ****        *    (0u != (capsense_POS_FILTERS_MASK & capsense_JITTER_FILTER)) )
2558:Generated_Source\PSoC4/capsense_CSHL.c ****        *    (0u != (capsense_TRACKPAD_GEST_POS_FILTERS_MASK & capsense_JITTER_FILTER)) )
2559:Generated_Source\PSoC4/capsense_CSHL.c ****        */
2560:Generated_Source\PSoC4/capsense_CSHL.c **** 
2561:Generated_Source\PSoC4/capsense_CSHL.c **** 
2562:Generated_Source\PSoC4/capsense_CSHL.c **** #if (0u != (capsense_RAW_FILTER_MASK & capsense_IIR8_FILTER))
2563:Generated_Source\PSoC4/capsense_CSHL.c ****     /*******************************************************************************
2564:Generated_Source\PSoC4/capsense_CSHL.c ****     * Function Name: capsense_IIR8Filter
2565:Generated_Source\PSoC4/capsense_CSHL.c ****     ********************************************************************************
2566:Generated_Source\PSoC4/capsense_CSHL.c ****     *
2567:Generated_Source\PSoC4/capsense_CSHL.c ****     * Summary:
2568:Generated_Source\PSoC4/capsense_CSHL.c ****     *  This is the IIR1/8 filter function. IIR1/8 = 1/8current + 7/8previous.
2569:Generated_Source\PSoC4/capsense_CSHL.c ****     *  Only applies for raw data.
2570:Generated_Source\PSoC4/capsense_CSHL.c ****     *
2571:Generated_Source\PSoC4/capsense_CSHL.c ****     * Parameters:
2572:Generated_Source\PSoC4/capsense_CSHL.c ****     *  x1:  Current value.
2573:Generated_Source\PSoC4/capsense_CSHL.c ****     *  x2:  Previous value.
2574:Generated_Source\PSoC4/capsense_CSHL.c ****     *
2575:Generated_Source\PSoC4/capsense_CSHL.c ****     * Return:
2576:Generated_Source\PSoC4/capsense_CSHL.c ****     *  Returns filtered value.
2577:Generated_Source\PSoC4/capsense_CSHL.c ****     *
2578:Generated_Source\PSoC4/capsense_CSHL.c ****     * Global Variables:
2579:Generated_Source\PSoC4/capsense_CSHL.c ****     *  None.
2580:Generated_Source\PSoC4/capsense_CSHL.c ****     *
2581:Generated_Source\PSoC4/capsense_CSHL.c ****     * Side Effects:
2582:Generated_Source\PSoC4/capsense_CSHL.c ****     *  None
2583:Generated_Source\PSoC4/capsense_CSHL.c ****     *
2584:Generated_Source\PSoC4/capsense_CSHL.c ****     *******************************************************************************/
2585:Generated_Source\PSoC4/capsense_CSHL.c ****     uint16 capsense_IIR8Filter(uint16 x1, uint16 x2)
2586:Generated_Source\PSoC4/capsense_CSHL.c ****     {
2587:Generated_Source\PSoC4/capsense_CSHL.c ****         uint32 tmp;
2588:Generated_Source\PSoC4/capsense_CSHL.c **** 
2589:Generated_Source\PSoC4/capsense_CSHL.c ****         /* IIR = 1/8 Current Value + 7/8 Previous Value */
2590:Generated_Source\PSoC4/capsense_CSHL.c ****         tmp = (uint32)x1;
2591:Generated_Source\PSoC4/capsense_CSHL.c ****         tmp += (((uint32)x2 << 3u) - ((uint32)x2));
2592:Generated_Source\PSoC4/capsense_CSHL.c ****         tmp >>= 3u;
2593:Generated_Source\PSoC4/capsense_CSHL.c **** 
2594:Generated_Source\PSoC4/capsense_CSHL.c ****         return ((uint16) tmp);
2595:Generated_Source\PSoC4/capsense_CSHL.c ****     }
2596:Generated_Source\PSoC4/capsense_CSHL.c **** #endif /* (0u != (capsense_RAW_FILTER_MASK & capsense_IIR8_FILTER)) */
2597:Generated_Source\PSoC4/capsense_CSHL.c **** 
2598:Generated_Source\PSoC4/capsense_CSHL.c **** 
2599:Generated_Source\PSoC4/capsense_CSHL.c **** #if (0u != (capsense_RAW_FILTER_MASK & capsense_IIR16_FILTER))
2600:Generated_Source\PSoC4/capsense_CSHL.c ****     /*******************************************************************************
2601:Generated_Source\PSoC4/capsense_CSHL.c ****     * Function Name: capsense_IIR16Filter
2602:Generated_Source\PSoC4/capsense_CSHL.c ****     ********************************************************************************
2603:Generated_Source\PSoC4/capsense_CSHL.c ****     *
2604:Generated_Source\PSoC4/capsense_CSHL.c ****     * Summary:
2605:Generated_Source\PSoC4/capsense_CSHL.c ****     *  This is the IIR1/16 filter function. IIR1/16 = 1/16current + 15/16previous.
2606:Generated_Source\PSoC4/capsense_CSHL.c ****     *  Only applies for raw data.
2607:Generated_Source\PSoC4/capsense_CSHL.c ****     *
2608:Generated_Source\PSoC4/capsense_CSHL.c ****     * Parameters:
2609:Generated_Source\PSoC4/capsense_CSHL.c ****     *  x1:  Current value.
2610:Generated_Source\PSoC4/capsense_CSHL.c ****     *  x2:  Previous value.
2611:Generated_Source\PSoC4/capsense_CSHL.c ****     *
2612:Generated_Source\PSoC4/capsense_CSHL.c ****     * Return:
ARM GAS  C:\Users\Mykola\AppData\Local\Temp\ccSL9DbN.s 			page 79


2613:Generated_Source\PSoC4/capsense_CSHL.c ****     *  Returns filtered value.
2614:Generated_Source\PSoC4/capsense_CSHL.c ****     *
2615:Generated_Source\PSoC4/capsense_CSHL.c ****     * Global Variables:
2616:Generated_Source\PSoC4/capsense_CSHL.c ****     *  None.
2617:Generated_Source\PSoC4/capsense_CSHL.c ****     *
2618:Generated_Source\PSoC4/capsense_CSHL.c ****     * Side Effects:
2619:Generated_Source\PSoC4/capsense_CSHL.c ****     *  None
2620:Generated_Source\PSoC4/capsense_CSHL.c ****     *
2621:Generated_Source\PSoC4/capsense_CSHL.c ****     *******************************************************************************/
2622:Generated_Source\PSoC4/capsense_CSHL.c ****     uint16 capsense_IIR16Filter(uint16 x1, uint16 x2)
2623:Generated_Source\PSoC4/capsense_CSHL.c ****     {
2624:Generated_Source\PSoC4/capsense_CSHL.c ****         uint32 tmp;
2625:Generated_Source\PSoC4/capsense_CSHL.c **** 
2626:Generated_Source\PSoC4/capsense_CSHL.c ****         /* IIR = 1/16 Current Value + 15/16 Previous Value */
2627:Generated_Source\PSoC4/capsense_CSHL.c ****         tmp = (uint32)x1;
2628:Generated_Source\PSoC4/capsense_CSHL.c ****         tmp += (((uint32)x2 << 4u) - ((uint32)x2));
2629:Generated_Source\PSoC4/capsense_CSHL.c ****         tmp >>= 4u;
2630:Generated_Source\PSoC4/capsense_CSHL.c **** 
2631:Generated_Source\PSoC4/capsense_CSHL.c ****         return ((uint16) tmp);
2632:Generated_Source\PSoC4/capsense_CSHL.c ****     }
2633:Generated_Source\PSoC4/capsense_CSHL.c **** #endif /* (capsense_RAW_FILTER_MASK & capsense_IIR16_FILTER) */
2634:Generated_Source\PSoC4/capsense_CSHL.c **** 
2635:Generated_Source\PSoC4/capsense_CSHL.c **** 
2636:Generated_Source\PSoC4/capsense_CSHL.c **** #if (0u != (capsense_TOTAL_MATRIX_BUTTONS_COUNT))
2637:Generated_Source\PSoC4/capsense_CSHL.c **** 
2638:Generated_Source\PSoC4/capsense_CSHL.c ****     /*******************************************************************************
2639:Generated_Source\PSoC4/capsense_CSHL.c ****     * Function Name: capsense_GetMatrixButtonPos
2640:Generated_Source\PSoC4/capsense_CSHL.c ****     ********************************************************************************
2641:Generated_Source\PSoC4/capsense_CSHL.c ****     *
2642:Generated_Source\PSoC4/capsense_CSHL.c ****     * Summary:
2643:Generated_Source\PSoC4/capsense_CSHL.c ****     *  Function calculates and returns a touch position (column and row) for the matrix
2644:Generated_Source\PSoC4/capsense_CSHL.c ****     *  button widget.
2645:Generated_Source\PSoC4/capsense_CSHL.c ****     *
2646:Generated_Source\PSoC4/capsense_CSHL.c ****     * Parameters:
2647:Generated_Source\PSoC4/capsense_CSHL.c ****     *  widget:  widget number;
2648:Generated_Source\PSoC4/capsense_CSHL.c ****     *  pos:     pointer to an array of two uint8, where touch position will be
2649:Generated_Source\PSoC4/capsense_CSHL.c ****     *           stored:
2650:Generated_Source\PSoC4/capsense_CSHL.c ****     *           pos[0] - column position;
2651:Generated_Source\PSoC4/capsense_CSHL.c ****     *           pos[1] - raw position.
2652:Generated_Source\PSoC4/capsense_CSHL.c ****     *
2653:Generated_Source\PSoC4/capsense_CSHL.c ****     * Return:
2654:Generated_Source\PSoC4/capsense_CSHL.c ****     *  Returns 1 if row and column sensors of matrix button are active, 0 - in other
2655:Generated_Source\PSoC4/capsense_CSHL.c ****     *  cases.
2656:Generated_Source\PSoC4/capsense_CSHL.c ****     *
2657:Generated_Source\PSoC4/capsense_CSHL.c ****     * Global Variables:
2658:Generated_Source\PSoC4/capsense_CSHL.c ****     *  capsense_fingerThreshold[ ] - used to store the finger threshold for all widgets.
2659:Generated_Source\PSoC4/capsense_CSHL.c ****     *  capsense_sensorSignal[ ] - used to store a difference between the current value of
2660:Generated_Source\PSoC4/capsense_CSHL.c ****     *  raw data and a previous value of the baseline.
2661:Generated_Source\PSoC4/capsense_CSHL.c ****     *
2662:Generated_Source\PSoC4/capsense_CSHL.c ****     * Side Effects:
2663:Generated_Source\PSoC4/capsense_CSHL.c ****     *  None
2664:Generated_Source\PSoC4/capsense_CSHL.c ****     *
2665:Generated_Source\PSoC4/capsense_CSHL.c ****     *******************************************************************************/
2666:Generated_Source\PSoC4/capsense_CSHL.c ****     uint32 capsense_GetMatrixButtonPos(uint32 widget, uint8* pos)
2667:Generated_Source\PSoC4/capsense_CSHL.c ****     {
2668:Generated_Source\PSoC4/capsense_CSHL.c ****         uint8 i;
2669:Generated_Source\PSoC4/capsense_CSHL.c ****         uint32 retVal = 0u;
ARM GAS  C:\Users\Mykola\AppData\Local\Temp\ccSL9DbN.s 			page 80


2670:Generated_Source\PSoC4/capsense_CSHL.c ****         uint16 row_sig_max = 0u;
2671:Generated_Source\PSoC4/capsense_CSHL.c ****         uint16 col_sig_max = 0u;
2672:Generated_Source\PSoC4/capsense_CSHL.c ****         uint8 row_ind = 0u;
2673:Generated_Source\PSoC4/capsense_CSHL.c ****         uint8 col_ind = 0u;
2674:Generated_Source\PSoC4/capsense_CSHL.c **** 
2675:Generated_Source\PSoC4/capsense_CSHL.c ****         if (capsense_CheckIsWidgetActive(widget) == 1u)
2676:Generated_Source\PSoC4/capsense_CSHL.c ****         {
2677:Generated_Source\PSoC4/capsense_CSHL.c ****             /* Find row number with maximal signal value */
2678:Generated_Source\PSoC4/capsense_CSHL.c ****             for(i = capsense_rawDataIndex[widget]; i < (capsense_rawDataIndex[widget] + \
2679:Generated_Source\PSoC4/capsense_CSHL.c ****                  capsense_numberOfSensors[widget]); i++)
2680:Generated_Source\PSoC4/capsense_CSHL.c ****             {
2681:Generated_Source\PSoC4/capsense_CSHL.c ****                 if (capsense_sensorSignal[i] > col_sig_max)
2682:Generated_Source\PSoC4/capsense_CSHL.c ****                 {
2683:Generated_Source\PSoC4/capsense_CSHL.c ****                     col_ind = i;
2684:Generated_Source\PSoC4/capsense_CSHL.c ****                     col_sig_max = capsense_sensorSignal[i];
2685:Generated_Source\PSoC4/capsense_CSHL.c ****                 }
2686:Generated_Source\PSoC4/capsense_CSHL.c ****             }
2687:Generated_Source\PSoC4/capsense_CSHL.c **** 
2688:Generated_Source\PSoC4/capsense_CSHL.c ****             /* Find row number with maximal signal value */
2689:Generated_Source\PSoC4/capsense_CSHL.c ****             for(i = capsense_rawDataIndex[widget+1u]; i < (capsense_rawDataIndex[widget+1u] + \
2690:Generated_Source\PSoC4/capsense_CSHL.c ****                  capsense_numberOfSensors[widget+1u]); i++)
2691:Generated_Source\PSoC4/capsense_CSHL.c ****             {
2692:Generated_Source\PSoC4/capsense_CSHL.c ****                 if (capsense_sensorSignal[i] > row_sig_max)
2693:Generated_Source\PSoC4/capsense_CSHL.c ****                 {
2694:Generated_Source\PSoC4/capsense_CSHL.c ****                     row_ind = i;
2695:Generated_Source\PSoC4/capsense_CSHL.c ****                     row_sig_max = capsense_sensorSignal[i];
2696:Generated_Source\PSoC4/capsense_CSHL.c ****                 }
2697:Generated_Source\PSoC4/capsense_CSHL.c ****             }
2698:Generated_Source\PSoC4/capsense_CSHL.c **** 
2699:Generated_Source\PSoC4/capsense_CSHL.c ****             if((col_sig_max >= capsense_fingerThreshold[widget]) && \
2700:Generated_Source\PSoC4/capsense_CSHL.c ****                (row_sig_max >= capsense_fingerThreshold[widget+1u]))
2701:Generated_Source\PSoC4/capsense_CSHL.c ****             {
2702:Generated_Source\PSoC4/capsense_CSHL.c ****                 pos[0u] = col_ind - capsense_rawDataIndex[widget];
2703:Generated_Source\PSoC4/capsense_CSHL.c ****                 pos[1u] = row_ind - capsense_rawDataIndex[widget+1u];
2704:Generated_Source\PSoC4/capsense_CSHL.c ****                 retVal = 1u;
2705:Generated_Source\PSoC4/capsense_CSHL.c ****             }
2706:Generated_Source\PSoC4/capsense_CSHL.c ****         }
2707:Generated_Source\PSoC4/capsense_CSHL.c ****         return (retVal);
2708:Generated_Source\PSoC4/capsense_CSHL.c ****     }
2709:Generated_Source\PSoC4/capsense_CSHL.c **** 
2710:Generated_Source\PSoC4/capsense_CSHL.c **** #endif /* (0u != (capsense_TOTAL_MATRIX_BUTTONS_COUNT)) */
2711:Generated_Source\PSoC4/capsense_CSHL.c **** 
2712:Generated_Source\PSoC4/capsense_CSHL.c **** /*******************************************************************************
2713:Generated_Source\PSoC4/capsense_CSHL.c **** * Function Name: capsense_GetWidgetNumber
2714:Generated_Source\PSoC4/capsense_CSHL.c **** ********************************************************************************
2715:Generated_Source\PSoC4/capsense_CSHL.c **** *
2716:Generated_Source\PSoC4/capsense_CSHL.c **** * Summary:
2717:Generated_Source\PSoC4/capsense_CSHL.c **** *  This API returns the widget number for the sensor.
2718:Generated_Source\PSoC4/capsense_CSHL.c **** *
2719:Generated_Source\PSoC4/capsense_CSHL.c **** * Parameters:
2720:Generated_Source\PSoC4/capsense_CSHL.c **** *  sensor: sensor index. The value of index can be
2721:Generated_Source\PSoC4/capsense_CSHL.c **** *  from 0 to (capsense_TOTAL_SENSOR_COUNT-1).
2722:Generated_Source\PSoC4/capsense_CSHL.c **** *
2723:Generated_Source\PSoC4/capsense_CSHL.c **** * Return:
2724:Generated_Source\PSoC4/capsense_CSHL.c **** *  This API returns the widget number for the sensor.
2725:Generated_Source\PSoC4/capsense_CSHL.c **** *
2726:Generated_Source\PSoC4/capsense_CSHL.c **** * Global Variables:
ARM GAS  C:\Users\Mykola\AppData\Local\Temp\ccSL9DbN.s 			page 81


2727:Generated_Source\PSoC4/capsense_CSHL.c **** *  capsense_widgetNumber[]  - stores widget numbers.
2728:Generated_Source\PSoC4/capsense_CSHL.c **** *
2729:Generated_Source\PSoC4/capsense_CSHL.c **** * Side Effects:
2730:Generated_Source\PSoC4/capsense_CSHL.c **** *  None
2731:Generated_Source\PSoC4/capsense_CSHL.c **** *
2732:Generated_Source\PSoC4/capsense_CSHL.c **** *******************************************************************************/
2733:Generated_Source\PSoC4/capsense_CSHL.c **** uint32 capsense_GetWidgetNumber(uint32 sensor)
2734:Generated_Source\PSoC4/capsense_CSHL.c **** {
 1747              		.loc 1 2734 0
 1748              		.cfi_startproc
 1749              	.LVL211:
2735:Generated_Source\PSoC4/capsense_CSHL.c ****     return((uint32)capsense_widgetNumber[sensor]);
 1750              		.loc 1 2735 0
 1751 0000 014B     		ldr	r3, .L146
 1752 0002 185C     		ldrb	r0, [r3, r0]
 1753              	.LVL212:
2736:Generated_Source\PSoC4/capsense_CSHL.c **** }
 1754              		.loc 1 2736 0
 1755              		@ sp needed
 1756 0004 7047     		bx	lr
 1757              	.L147:
 1758 0006 C046     		.align	2
 1759              	.L146:
 1760 0008 00000000 		.word	capsense_widgetNumber
 1761              		.cfi_endproc
 1762              	.LFE68:
 1763              		.size	capsense_GetWidgetNumber, .-capsense_GetWidgetNumber
 1764              		.section	.text.capsense_GetLowBaselineReset,"ax",%progbits
 1765              		.align	2
 1766              		.global	capsense_GetLowBaselineReset
 1767              		.code	16
 1768              		.thumb_func
 1769              		.type	capsense_GetLowBaselineReset, %function
 1770              	capsense_GetLowBaselineReset:
 1771              	.LFB69:
2737:Generated_Source\PSoC4/capsense_CSHL.c **** 
2738:Generated_Source\PSoC4/capsense_CSHL.c **** /*******************************************************************************
2739:Generated_Source\PSoC4/capsense_CSHL.c **** * Function Name: capsense_GetLowBaselineReset
2740:Generated_Source\PSoC4/capsense_CSHL.c **** ********************************************************************************
2741:Generated_Source\PSoC4/capsense_CSHL.c **** *
2742:Generated_Source\PSoC4/capsense_CSHL.c **** * Summary:
2743:Generated_Source\PSoC4/capsense_CSHL.c **** *  This API returns the low baseline reset threshold value for the  sensor.
2744:Generated_Source\PSoC4/capsense_CSHL.c **** *
2745:Generated_Source\PSoC4/capsense_CSHL.c **** * Parameters:
2746:Generated_Source\PSoC4/capsense_CSHL.c **** *  sensor: sensor index. The value of index can be
2747:Generated_Source\PSoC4/capsense_CSHL.c **** *  from 0 to (capsense_TOTAL_SENSOR_COUNT-1).
2748:Generated_Source\PSoC4/capsense_CSHL.c **** *
2749:Generated_Source\PSoC4/capsense_CSHL.c **** * Return:
2750:Generated_Source\PSoC4/capsense_CSHL.c **** *  low baseline reset threshold value a sensor.
2751:Generated_Source\PSoC4/capsense_CSHL.c **** *
2752:Generated_Source\PSoC4/capsense_CSHL.c **** * Global Variables:
2753:Generated_Source\PSoC4/capsense_CSHL.c **** *  capsense_lowBaselineReset[]  - stores low baseline reset values.
2754:Generated_Source\PSoC4/capsense_CSHL.c **** *
2755:Generated_Source\PSoC4/capsense_CSHL.c **** * Side Effects:
2756:Generated_Source\PSoC4/capsense_CSHL.c **** *  None
2757:Generated_Source\PSoC4/capsense_CSHL.c **** *
2758:Generated_Source\PSoC4/capsense_CSHL.c **** *******************************************************************************/
ARM GAS  C:\Users\Mykola\AppData\Local\Temp\ccSL9DbN.s 			page 82


2759:Generated_Source\PSoC4/capsense_CSHL.c **** uint8 capsense_GetLowBaselineReset(uint32 sensor)
2760:Generated_Source\PSoC4/capsense_CSHL.c **** {
 1772              		.loc 1 2760 0
 1773              		.cfi_startproc
 1774              	.LVL213:
2761:Generated_Source\PSoC4/capsense_CSHL.c ****     return(capsense_lowBaselineReset[sensor]);
 1775              		.loc 1 2761 0
 1776 0000 014B     		ldr	r3, .L149
 1777 0002 1818     		add	r0, r3, r0
 1778              	.LVL214:
 1779 0004 0079     		ldrb	r0, [r0, #4]
2762:Generated_Source\PSoC4/capsense_CSHL.c **** }
 1780              		.loc 1 2762 0
 1781              		@ sp needed
 1782 0006 7047     		bx	lr
 1783              	.L150:
 1784              		.align	2
 1785              	.L149:
 1786 0008 00000000 		.word	.LANCHOR1
 1787              		.cfi_endproc
 1788              	.LFE69:
 1789              		.size	capsense_GetLowBaselineReset, .-capsense_GetLowBaselineReset
 1790              		.section	.text.capsense_GetDebounce,"ax",%progbits
 1791              		.align	2
 1792              		.global	capsense_GetDebounce
 1793              		.code	16
 1794              		.thumb_func
 1795              		.type	capsense_GetDebounce, %function
 1796              	capsense_GetDebounce:
 1797              	.LFB70:
2763:Generated_Source\PSoC4/capsense_CSHL.c **** 
2764:Generated_Source\PSoC4/capsense_CSHL.c **** /*******************************************************************************
2765:Generated_Source\PSoC4/capsense_CSHL.c **** * Function Name: capsense_GetDebounce
2766:Generated_Source\PSoC4/capsense_CSHL.c **** ********************************************************************************
2767:Generated_Source\PSoC4/capsense_CSHL.c **** *
2768:Generated_Source\PSoC4/capsense_CSHL.c **** * Summary:
2769:Generated_Source\PSoC4/capsense_CSHL.c **** *  This API returns a debounce value.
2770:Generated_Source\PSoC4/capsense_CSHL.c **** *
2771:Generated_Source\PSoC4/capsense_CSHL.c **** * Parameters:
2772:Generated_Source\PSoC4/capsense_CSHL.c **** *  sensor: sensor index. The value of index can be
2773:Generated_Source\PSoC4/capsense_CSHL.c **** *  from 0 to (capsense_TOTAL_SENSOR_COUNT-1).
2774:Generated_Source\PSoC4/capsense_CSHL.c **** *
2775:Generated_Source\PSoC4/capsense_CSHL.c **** * Return:
2776:Generated_Source\PSoC4/capsense_CSHL.c **** *  Debounce value
2777:Generated_Source\PSoC4/capsense_CSHL.c **** *
2778:Generated_Source\PSoC4/capsense_CSHL.c **** * Global Variables:
2779:Generated_Source\PSoC4/capsense_CSHL.c **** *  capsense_debounce[]  - stores the debounce value.
2780:Generated_Source\PSoC4/capsense_CSHL.c **** *
2781:Generated_Source\PSoC4/capsense_CSHL.c **** * Side Effects:
2782:Generated_Source\PSoC4/capsense_CSHL.c **** *  None
2783:Generated_Source\PSoC4/capsense_CSHL.c **** *
2784:Generated_Source\PSoC4/capsense_CSHL.c **** *******************************************************************************/
2785:Generated_Source\PSoC4/capsense_CSHL.c **** uint8 capsense_GetDebounce(uint32 widget)
2786:Generated_Source\PSoC4/capsense_CSHL.c **** {
 1798              		.loc 1 2786 0
 1799              		.cfi_startproc
 1800              	.LVL215:
ARM GAS  C:\Users\Mykola\AppData\Local\Temp\ccSL9DbN.s 			page 83


2787:Generated_Source\PSoC4/capsense_CSHL.c ****     return(capsense_debounce[widget]);
 1801              		.loc 1 2787 0
 1802 0000 014B     		ldr	r3, .L152
 1803 0002 185C     		ldrb	r0, [r3, r0]
 1804              	.LVL216:
2788:Generated_Source\PSoC4/capsense_CSHL.c **** }
 1805              		.loc 1 2788 0
 1806              		@ sp needed
 1807 0004 7047     		bx	lr
 1808              	.L153:
 1809 0006 C046     		.align	2
 1810              	.L152:
 1811 0008 00000000 		.word	.LANCHOR1
 1812              		.cfi_endproc
 1813              	.LFE70:
 1814              		.size	capsense_GetDebounce, .-capsense_GetDebounce
 1815              		.section	.text.capsense_EnableRawDataFilters,"ax",%progbits
 1816              		.align	2
 1817              		.global	capsense_EnableRawDataFilters
 1818              		.code	16
 1819              		.thumb_func
 1820              		.type	capsense_EnableRawDataFilters, %function
 1821              	capsense_EnableRawDataFilters:
 1822              	.LFB71:
2789:Generated_Source\PSoC4/capsense_CSHL.c **** 
2790:Generated_Source\PSoC4/capsense_CSHL.c **** #if (capsense_RAW_FILTER_MASK != 0u)
2791:Generated_Source\PSoC4/capsense_CSHL.c ****     /*******************************************************************************
2792:Generated_Source\PSoC4/capsense_CSHL.c ****     * Function Name: capsense_EnableRawDataFilters
2793:Generated_Source\PSoC4/capsense_CSHL.c ****     ********************************************************************************
2794:Generated_Source\PSoC4/capsense_CSHL.c ****     *
2795:Generated_Source\PSoC4/capsense_CSHL.c ****     * Summary:
2796:Generated_Source\PSoC4/capsense_CSHL.c ****     *  Enables the rawdata filters for the sensor signals.
2797:Generated_Source\PSoC4/capsense_CSHL.c ****     *
2798:Generated_Source\PSoC4/capsense_CSHL.c ****     * Parameters:
2799:Generated_Source\PSoC4/capsense_CSHL.c ****     *  None
2800:Generated_Source\PSoC4/capsense_CSHL.c ****     *
2801:Generated_Source\PSoC4/capsense_CSHL.c ****     * Return:
2802:Generated_Source\PSoC4/capsense_CSHL.c ****     *  None
2803:Generated_Source\PSoC4/capsense_CSHL.c ****     *
2804:Generated_Source\PSoC4/capsense_CSHL.c ****     * Global Variables:
2805:Generated_Source\PSoC4/capsense_CSHL.c ****     *  capsense_enableRawFilters defines if the filters are enabled or not.
2806:Generated_Source\PSoC4/capsense_CSHL.c ****     *
2807:Generated_Source\PSoC4/capsense_CSHL.c ****     * Side Effects:
2808:Generated_Source\PSoC4/capsense_CSHL.c ****     *  None
2809:Generated_Source\PSoC4/capsense_CSHL.c ****     *
2810:Generated_Source\PSoC4/capsense_CSHL.c ****     *******************************************************************************/
2811:Generated_Source\PSoC4/capsense_CSHL.c ****     void capsense_EnableRawDataFilters(void)
2812:Generated_Source\PSoC4/capsense_CSHL.c ****     {
 1823              		.loc 1 2812 0
 1824              		.cfi_startproc
2813:Generated_Source\PSoC4/capsense_CSHL.c ****         capsense_enableRawFilters = capsense_RAW_FILTERS_ENABLED;
 1825              		.loc 1 2813 0
 1826 0000 0122     		mov	r2, #1
 1827 0002 014B     		ldr	r3, .L155
 1828 0004 5A72     		strb	r2, [r3, #9]
2814:Generated_Source\PSoC4/capsense_CSHL.c ****     }
 1829              		.loc 1 2814 0
ARM GAS  C:\Users\Mykola\AppData\Local\Temp\ccSL9DbN.s 			page 84


 1830              		@ sp needed
 1831 0006 7047     		bx	lr
 1832              	.L156:
 1833              		.align	2
 1834              	.L155:
 1835 0008 00000000 		.word	.LANCHOR1
 1836              		.cfi_endproc
 1837              	.LFE71:
 1838              		.size	capsense_EnableRawDataFilters, .-capsense_EnableRawDataFilters
 1839              		.section	.text.capsense_DisableRawDataFilters,"ax",%progbits
 1840              		.align	2
 1841              		.global	capsense_DisableRawDataFilters
 1842              		.code	16
 1843              		.thumb_func
 1844              		.type	capsense_DisableRawDataFilters, %function
 1845              	capsense_DisableRawDataFilters:
 1846              	.LFB72:
2815:Generated_Source\PSoC4/capsense_CSHL.c **** 
2816:Generated_Source\PSoC4/capsense_CSHL.c ****     /*******************************************************************************
2817:Generated_Source\PSoC4/capsense_CSHL.c ****     * Function Name: capsense_DisableRawDataFilters
2818:Generated_Source\PSoC4/capsense_CSHL.c ****     ********************************************************************************
2819:Generated_Source\PSoC4/capsense_CSHL.c ****     *
2820:Generated_Source\PSoC4/capsense_CSHL.c ****     * Summary:
2821:Generated_Source\PSoC4/capsense_CSHL.c ****     *  Disables the rawdata filters for the sensor signals.
2822:Generated_Source\PSoC4/capsense_CSHL.c ****     *
2823:Generated_Source\PSoC4/capsense_CSHL.c ****     * Parameters:
2824:Generated_Source\PSoC4/capsense_CSHL.c ****     *  None
2825:Generated_Source\PSoC4/capsense_CSHL.c ****     *
2826:Generated_Source\PSoC4/capsense_CSHL.c ****     * Return:
2827:Generated_Source\PSoC4/capsense_CSHL.c ****     *  None
2828:Generated_Source\PSoC4/capsense_CSHL.c ****     *
2829:Generated_Source\PSoC4/capsense_CSHL.c ****     * Global Variables:
2830:Generated_Source\PSoC4/capsense_CSHL.c ****     *  capsense_enableRawFilters defines if the filters are enabled or not.
2831:Generated_Source\PSoC4/capsense_CSHL.c ****     *
2832:Generated_Source\PSoC4/capsense_CSHL.c ****     * Side Effects:
2833:Generated_Source\PSoC4/capsense_CSHL.c ****     *  None
2834:Generated_Source\PSoC4/capsense_CSHL.c ****     *
2835:Generated_Source\PSoC4/capsense_CSHL.c ****     *******************************************************************************/
2836:Generated_Source\PSoC4/capsense_CSHL.c ****     void capsense_DisableRawDataFilters(void)
2837:Generated_Source\PSoC4/capsense_CSHL.c ****     {
 1847              		.loc 1 2837 0
 1848              		.cfi_startproc
2838:Generated_Source\PSoC4/capsense_CSHL.c ****         capsense_enableRawFilters = capsense_RAW_FILTERS_DISABLED;
 1849              		.loc 1 2838 0
 1850 0000 0022     		mov	r2, #0
 1851 0002 014B     		ldr	r3, .L158
 1852 0004 5A72     		strb	r2, [r3, #9]
2839:Generated_Source\PSoC4/capsense_CSHL.c ****     }
 1853              		.loc 1 2839 0
 1854              		@ sp needed
 1855 0006 7047     		bx	lr
 1856              	.L159:
 1857              		.align	2
 1858              	.L158:
 1859 0008 00000000 		.word	.LANCHOR1
 1860              		.cfi_endproc
 1861              	.LFE72:
ARM GAS  C:\Users\Mykola\AppData\Local\Temp\ccSL9DbN.s 			page 85


 1862              		.size	capsense_DisableRawDataFilters, .-capsense_DisableRawDataFilters
 1863              		.global	capsense_numberOfSensors
 1864              		.global	capsense_rawDataIndex
 1865              		.global	capsense_debounce
 1866              		.comm	capsense_hysteresis,1,4
 1867              		.comm	capsense_negativeNoiseThreshold,1,4
 1868              		.comm	capsense_noiseThreshold,1,4
 1869              		.comm	capsense_fingerThreshold,1,4
 1870              		.global	capsense_enableRawFilters
 1871              		.global	capsense_lowBaselineReset
 1872              		.comm	capsense_lowBaselineResetCnt,5,4
 1873              		.global	capsense_sensorOnMask
 1874              		.global	capsense_sensorSignal
 1875              		.global	capsense_sensorBaselineLow
 1876              		.global	capsense_sensorBaseline
 1877              		.comm	capsense_rawFilterData1,10,4
 1878              		.section	.rodata
 1879              		.align	2
 1880              		.type	capsense_numberOfSensors, %object
 1881              		.size	capsense_numberOfSensors, 1
 1882              	capsense_numberOfSensors:
 1883 0000 05       		.byte	5
 1884 0001 000000   		.space	3
 1885              		.type	capsense_rawDataIndex, %object
 1886              		.size	capsense_rawDataIndex, 1
 1887              	capsense_rawDataIndex:
 1888 0004 00       		.space	1
 1889 0005 000000   		.data
 1890              		.align	2
 1891              		.set	.LANCHOR1,. + 0
 1892              		.type	capsense_debounce, %object
 1893              		.size	capsense_debounce, 1
 1894              	capsense_debounce:
 1895 0000 01       		.byte	1
 1896 0001 000000   		.space	3
 1897              		.type	capsense_lowBaselineReset, %object
 1898              		.size	capsense_lowBaselineReset, 5
 1899              	capsense_lowBaselineReset:
 1900 0004 1E       		.byte	30
 1901 0005 1E       		.byte	30
 1902 0006 1E       		.byte	30
 1903 0007 1E       		.byte	30
 1904 0008 1E       		.byte	30
 1905              		.type	capsense_enableRawFilters, %object
 1906              		.size	capsense_enableRawFilters, 1
 1907              	capsense_enableRawFilters:
 1908 0009 01       		.byte	1
 1909 000a 0000     		.space	2
 1910              		.type	capsense_posFiltersData, %object
 1911              		.size	capsense_posFiltersData, 3
 1912              	capsense_posFiltersData:
 1913 000c 01       		.byte	1
 1914 000d 00       		.byte	0
 1915 000e 00       		.byte	0
 1916 000f 00       		.bss
 1917              		.align	2
 1918              		.set	.LANCHOR0,. + 0
ARM GAS  C:\Users\Mykola\AppData\Local\Temp\ccSL9DbN.s 			page 86


 1919              		.type	capsense_sensorBaseline, %object
 1920              		.size	capsense_sensorBaseline, 10
 1921              	capsense_sensorBaseline:
 1922 0000 00000000 		.space	10
 1922      00000000 
 1922      0000
 1923 000a 0000     		.space	2
 1924              		.type	capsense_sensorBaselineLow, %object
 1925              		.size	capsense_sensorBaselineLow, 5
 1926              	capsense_sensorBaselineLow:
 1927 000c 00000000 		.space	5
 1927      00
 1928 0011 000000   		.space	3
 1929              		.type	capsense_sensorSignal, %object
 1930              		.size	capsense_sensorSignal, 5
 1931              	capsense_sensorSignal:
 1932 0014 00000000 		.space	5
 1932      00
 1933 0019 000000   		.space	3
 1934              		.type	capsense_debounceCounter.5383, %object
 1935              		.size	capsense_debounceCounter.5383, 1
 1936              	capsense_debounceCounter.5383:
 1937 001c 00       		.space	1
 1938 001d 000000   		.space	3
 1939              		.type	capsense_sensorOnMask, %object
 1940              		.size	capsense_sensorOnMask, 1
 1941              	capsense_sensorOnMask:
 1942 0020 00       		.space	1
 1943 0021 000000   		.space	3
 1944              		.type	capsense_centroid.5435, %object
 1945              		.size	capsense_centroid.5435, 3
 1946              	capsense_centroid.5435:
 1947 0024 000000   		.space	3
 1948 0027 00       		.text
 1949              	.Letext0:
 1950              		.file 2 "Generated_Source\\PSoC4\\cytypes.h"
 1951              		.file 3 "Generated_Source\\PSoC4\\capsense_PVT.h"
 1952              		.file 4 "Generated_Source\\PSoC4\\capsense.h"
 1953              		.section	.debug_info,"",%progbits
 1954              	.Ldebug_info0:
 1955 0000 21110000 		.4byte	0x1121
 1956 0004 0400     		.2byte	0x4
 1957 0006 00000000 		.4byte	.Ldebug_abbrev0
 1958 000a 04       		.byte	0x4
 1959 000b 01       		.uleb128 0x1
 1960 000c B8080000 		.4byte	.LASF148
 1961 0010 01       		.byte	0x1
 1962 0011 74030000 		.4byte	.LASF149
 1963 0015 B3020000 		.4byte	.LASF150
 1964 0019 00000000 		.4byte	.Ldebug_ranges0+0
 1965 001d 00000000 		.4byte	0
 1966 0021 00000000 		.4byte	.Ldebug_line0
 1967 0025 02       		.uleb128 0x2
 1968 0026 01       		.byte	0x1
 1969 0027 06       		.byte	0x6
 1970 0028 130B0000 		.4byte	.LASF0
 1971 002c 02       		.uleb128 0x2
ARM GAS  C:\Users\Mykola\AppData\Local\Temp\ccSL9DbN.s 			page 87


 1972 002d 01       		.byte	0x1
 1973 002e 08       		.byte	0x8
 1974 002f 700A0000 		.4byte	.LASF1
 1975 0033 02       		.uleb128 0x2
 1976 0034 02       		.byte	0x2
 1977 0035 05       		.byte	0x5
 1978 0036 34080000 		.4byte	.LASF2
 1979 003a 02       		.uleb128 0x2
 1980 003b 02       		.byte	0x2
 1981 003c 07       		.byte	0x7
 1982 003d 1F0B0000 		.4byte	.LASF3
 1983 0041 02       		.uleb128 0x2
 1984 0042 04       		.byte	0x4
 1985 0043 05       		.byte	0x5
 1986 0044 3E080000 		.4byte	.LASF4
 1987 0048 02       		.uleb128 0x2
 1988 0049 04       		.byte	0x4
 1989 004a 07       		.byte	0x7
 1990 004b EB090000 		.4byte	.LASF5
 1991 004f 02       		.uleb128 0x2
 1992 0050 08       		.byte	0x8
 1993 0051 05       		.byte	0x5
 1994 0052 4A060000 		.4byte	.LASF6
 1995 0056 02       		.uleb128 0x2
 1996 0057 08       		.byte	0x8
 1997 0058 07       		.byte	0x7
 1998 0059 5D030000 		.4byte	.LASF7
 1999 005d 03       		.uleb128 0x3
 2000 005e 04       		.byte	0x4
 2001 005f 05       		.byte	0x5
 2002 0060 696E7400 		.ascii	"int\000"
 2003 0064 02       		.uleb128 0x2
 2004 0065 04       		.byte	0x4
 2005 0066 07       		.byte	0x7
 2006 0067 C4000000 		.4byte	.LASF8
 2007 006b 04       		.uleb128 0x4
 2008 006c 630B0000 		.4byte	.LASF9
 2009 0070 02       		.byte	0x2
 2010 0071 C2       		.byte	0xc2
 2011 0072 2C000000 		.4byte	0x2c
 2012 0076 04       		.uleb128 0x4
 2013 0077 79050000 		.4byte	.LASF10
 2014 007b 02       		.byte	0x2
 2015 007c C3       		.byte	0xc3
 2016 007d 3A000000 		.4byte	0x3a
 2017 0081 04       		.uleb128 0x4
 2018 0082 EF060000 		.4byte	.LASF11
 2019 0086 02       		.byte	0x2
 2020 0087 C4       		.byte	0xc4
 2021 0088 48000000 		.4byte	0x48
 2022 008c 04       		.uleb128 0x4
 2023 008d 21010000 		.4byte	.LASF12
 2024 0091 02       		.byte	0x2
 2025 0092 C6       		.byte	0xc6
 2026 0093 33000000 		.4byte	0x33
 2027 0097 04       		.uleb128 0x4
 2028 0098 03030000 		.4byte	.LASF13
ARM GAS  C:\Users\Mykola\AppData\Local\Temp\ccSL9DbN.s 			page 88


 2029 009c 02       		.byte	0x2
 2030 009d C7       		.byte	0xc7
 2031 009e 41000000 		.4byte	0x41
 2032 00a2 02       		.uleb128 0x2
 2033 00a3 04       		.byte	0x4
 2034 00a4 04       		.byte	0x4
 2035 00a5 FD020000 		.4byte	.LASF14
 2036 00a9 02       		.uleb128 0x2
 2037 00aa 08       		.byte	0x8
 2038 00ab 04       		.byte	0x4
 2039 00ac 690B0000 		.4byte	.LASF15
 2040 00b0 02       		.uleb128 0x2
 2041 00b1 01       		.byte	0x1
 2042 00b2 08       		.byte	0x8
 2043 00b3 1A050000 		.4byte	.LASF16
 2044 00b7 02       		.uleb128 0x2
 2045 00b8 04       		.byte	0x4
 2046 00b9 07       		.byte	0x7
 2047 00ba C9090000 		.4byte	.LASF17
 2048 00be 05       		.uleb128 0x5
 2049 00bf 04       		.byte	0x4
 2050 00c0 06       		.uleb128 0x6
 2051 00c1 5C       		.byte	0x5c
 2052 00c2 03       		.byte	0x3
 2053 00c3 2F       		.byte	0x2f
 2054 00c4 DD010000 		.4byte	0x1dd
 2055 00c8 07       		.uleb128 0x7
 2056 00c9 85050000 		.4byte	.LASF18
 2057 00cd 03       		.byte	0x3
 2058 00ce 31       		.byte	0x31
 2059 00cf DD010000 		.4byte	0x1dd
 2060 00d3 00       		.byte	0
 2061 00d4 07       		.uleb128 0x7
 2062 00d5 25080000 		.4byte	.LASF19
 2063 00d9 03       		.byte	0x3
 2064 00da 32       		.byte	0x32
 2065 00db DD010000 		.4byte	0x1dd
 2066 00df 04       		.byte	0x4
 2067 00e0 07       		.uleb128 0x7
 2068 00e1 8C0A0000 		.4byte	.LASF20
 2069 00e5 03       		.byte	0x3
 2070 00e6 33       		.byte	0x33
 2071 00e7 DD010000 		.4byte	0x1dd
 2072 00eb 08       		.byte	0x8
 2073 00ec 07       		.uleb128 0x7
 2074 00ed 4D0A0000 		.4byte	.LASF21
 2075 00f1 03       		.byte	0x3
 2076 00f2 34       		.byte	0x34
 2077 00f3 DD010000 		.4byte	0x1dd
 2078 00f7 0C       		.byte	0xc
 2079 00f8 07       		.uleb128 0x7
 2080 00f9 090B0000 		.4byte	.LASF22
 2081 00fd 03       		.byte	0x3
 2082 00fe 35       		.byte	0x35
 2083 00ff DD010000 		.4byte	0x1dd
 2084 0103 10       		.byte	0x10
 2085 0104 07       		.uleb128 0x7
ARM GAS  C:\Users\Mykola\AppData\Local\Temp\ccSL9DbN.s 			page 89


 2086 0105 FB070000 		.4byte	.LASF23
 2087 0109 03       		.byte	0x3
 2088 010a 36       		.byte	0x36
 2089 010b E3010000 		.4byte	0x1e3
 2090 010f 14       		.byte	0x14
 2091 0110 07       		.uleb128 0x7
 2092 0111 0F030000 		.4byte	.LASF24
 2093 0115 03       		.byte	0x3
 2094 0116 37       		.byte	0x37
 2095 0117 EE010000 		.4byte	0x1ee
 2096 011b 18       		.byte	0x18
 2097 011c 07       		.uleb128 0x7
 2098 011d 4A040000 		.4byte	.LASF25
 2099 0121 03       		.byte	0x3
 2100 0122 38       		.byte	0x38
 2101 0123 DD010000 		.4byte	0x1dd
 2102 0127 1C       		.byte	0x1c
 2103 0128 07       		.uleb128 0x7
 2104 0129 48030000 		.4byte	.LASF26
 2105 012d 03       		.byte	0x3
 2106 012e 39       		.byte	0x39
 2107 012f DD010000 		.4byte	0x1dd
 2108 0133 20       		.byte	0x20
 2109 0134 07       		.uleb128 0x7
 2110 0135 89010000 		.4byte	.LASF27
 2111 0139 03       		.byte	0x3
 2112 013a 3A       		.byte	0x3a
 2113 013b DD010000 		.4byte	0x1dd
 2114 013f 24       		.byte	0x24
 2115 0140 07       		.uleb128 0x7
 2116 0141 A6060000 		.4byte	.LASF28
 2117 0145 03       		.byte	0x3
 2118 0146 3B       		.byte	0x3b
 2119 0147 F4010000 		.4byte	0x1f4
 2120 014b 28       		.byte	0x28
 2121 014c 07       		.uleb128 0x7
 2122 014d 4F010000 		.4byte	.LASF29
 2123 0151 03       		.byte	0x3
 2124 0152 3C       		.byte	0x3c
 2125 0153 F4010000 		.4byte	0x1f4
 2126 0157 2C       		.byte	0x2c
 2127 0158 07       		.uleb128 0x7
 2128 0159 2B0A0000 		.4byte	.LASF30
 2129 015d 03       		.byte	0x3
 2130 015e 3D       		.byte	0x3d
 2131 015f F4010000 		.4byte	0x1f4
 2132 0163 30       		.byte	0x30
 2133 0164 07       		.uleb128 0x7
 2134 0165 64090000 		.4byte	.LASF31
 2135 0169 03       		.byte	0x3
 2136 016a 3E       		.byte	0x3e
 2137 016b DD010000 		.4byte	0x1dd
 2138 016f 34       		.byte	0x34
 2139 0170 07       		.uleb128 0x7
 2140 0171 00000000 		.4byte	.LASF32
 2141 0175 03       		.byte	0x3
 2142 0176 3F       		.byte	0x3f
ARM GAS  C:\Users\Mykola\AppData\Local\Temp\ccSL9DbN.s 			page 90


 2143 0177 DD010000 		.4byte	0x1dd
 2144 017b 38       		.byte	0x38
 2145 017c 07       		.uleb128 0x7
 2146 017d 6A050000 		.4byte	.LASF33
 2147 0181 03       		.byte	0x3
 2148 0182 40       		.byte	0x40
 2149 0183 E3010000 		.4byte	0x1e3
 2150 0187 3C       		.byte	0x3c
 2151 0188 07       		.uleb128 0x7
 2152 0189 10020000 		.4byte	.LASF34
 2153 018d 03       		.byte	0x3
 2154 018e 41       		.byte	0x41
 2155 018f E3010000 		.4byte	0x1e3
 2156 0193 40       		.byte	0x40
 2157 0194 07       		.uleb128 0x7
 2158 0195 0D000000 		.4byte	.LASF35
 2159 0199 03       		.byte	0x3
 2160 019a 42       		.byte	0x42
 2161 019b E3010000 		.4byte	0x1e3
 2162 019f 44       		.byte	0x44
 2163 01a0 07       		.uleb128 0x7
 2164 01a1 9C060000 		.4byte	.LASF36
 2165 01a5 03       		.byte	0x3
 2166 01a6 43       		.byte	0x43
 2167 01a7 09020000 		.4byte	0x209
 2168 01ab 48       		.byte	0x48
 2169 01ac 07       		.uleb128 0x7
 2170 01ad 61060000 		.4byte	.LASF37
 2171 01b1 03       		.byte	0x3
 2172 01b2 44       		.byte	0x44
 2173 01b3 1A020000 		.4byte	0x21a
 2174 01b7 4C       		.byte	0x4c
 2175 01b8 07       		.uleb128 0x7
 2176 01b9 60040000 		.4byte	.LASF38
 2177 01bd 03       		.byte	0x3
 2178 01be 45       		.byte	0x45
 2179 01bf 09020000 		.4byte	0x209
 2180 01c3 50       		.byte	0x50
 2181 01c4 07       		.uleb128 0x7
 2182 01c5 64000000 		.4byte	.LASF39
 2183 01c9 03       		.byte	0x3
 2184 01ca 46       		.byte	0x46
 2185 01cb 34020000 		.4byte	0x234
 2186 01cf 54       		.byte	0x54
 2187 01d0 07       		.uleb128 0x7
 2188 01d1 320B0000 		.4byte	.LASF40
 2189 01d5 03       		.byte	0x3
 2190 01d6 47       		.byte	0x47
 2191 01d7 4F020000 		.4byte	0x24f
 2192 01db 58       		.byte	0x58
 2193 01dc 00       		.byte	0
 2194 01dd 08       		.uleb128 0x8
 2195 01de 04       		.byte	0x4
 2196 01df 6B000000 		.4byte	0x6b
 2197 01e3 08       		.uleb128 0x8
 2198 01e4 04       		.byte	0x4
 2199 01e5 E9010000 		.4byte	0x1e9
ARM GAS  C:\Users\Mykola\AppData\Local\Temp\ccSL9DbN.s 			page 91


 2200 01e9 09       		.uleb128 0x9
 2201 01ea 6B000000 		.4byte	0x6b
 2202 01ee 08       		.uleb128 0x8
 2203 01ef 04       		.byte	0x4
 2204 01f0 81000000 		.4byte	0x81
 2205 01f4 08       		.uleb128 0x8
 2206 01f5 04       		.byte	0x4
 2207 01f6 76000000 		.4byte	0x76
 2208 01fa 0A       		.uleb128 0xa
 2209 01fb 76000000 		.4byte	0x76
 2210 01ff 09020000 		.4byte	0x209
 2211 0203 0B       		.uleb128 0xb
 2212 0204 81000000 		.4byte	0x81
 2213 0208 00       		.byte	0
 2214 0209 08       		.uleb128 0x8
 2215 020a 04       		.byte	0x4
 2216 020b FA010000 		.4byte	0x1fa
 2217 020f 0C       		.uleb128 0xc
 2218 0210 1A020000 		.4byte	0x21a
 2219 0214 0B       		.uleb128 0xb
 2220 0215 81000000 		.4byte	0x81
 2221 0219 00       		.byte	0
 2222 021a 08       		.uleb128 0x8
 2223 021b 04       		.byte	0x4
 2224 021c 0F020000 		.4byte	0x20f
 2225 0220 0A       		.uleb128 0xa
 2226 0221 81000000 		.4byte	0x81
 2227 0225 34020000 		.4byte	0x234
 2228 0229 0B       		.uleb128 0xb
 2229 022a E3010000 		.4byte	0x1e3
 2230 022e 0B       		.uleb128 0xb
 2231 022f 81000000 		.4byte	0x81
 2232 0233 00       		.byte	0
 2233 0234 08       		.uleb128 0x8
 2234 0235 04       		.byte	0x4
 2235 0236 20020000 		.4byte	0x220
 2236 023a 0C       		.uleb128 0xc
 2237 023b 4F020000 		.4byte	0x24f
 2238 023f 0B       		.uleb128 0xb
 2239 0240 DD010000 		.4byte	0x1dd
 2240 0244 0B       		.uleb128 0xb
 2241 0245 81000000 		.4byte	0x81
 2242 0249 0B       		.uleb128 0xb
 2243 024a 81000000 		.4byte	0x81
 2244 024e 00       		.byte	0
 2245 024f 08       		.uleb128 0x8
 2246 0250 04       		.byte	0x4
 2247 0251 3A020000 		.4byte	0x23a
 2248 0255 04       		.uleb128 0x4
 2249 0256 B6070000 		.4byte	.LASF41
 2250 025a 03       		.byte	0x3
 2251 025b 48       		.byte	0x48
 2252 025c C0000000 		.4byte	0xc0
 2253 0260 06       		.uleb128 0x6
 2254 0261 0C       		.byte	0xc
 2255 0262 03       		.byte	0x3
 2256 0263 4A       		.byte	0x4a
ARM GAS  C:\Users\Mykola\AppData\Local\Temp\ccSL9DbN.s 			page 92


 2257 0264 B1020000 		.4byte	0x2b1
 2258 0268 07       		.uleb128 0x7
 2259 0269 AD040000 		.4byte	.LASF42
 2260 026d 03       		.byte	0x3
 2261 026e 4C       		.byte	0x4c
 2262 026f 6B000000 		.4byte	0x6b
 2263 0273 00       		.byte	0
 2264 0274 07       		.uleb128 0x7
 2265 0275 1D020000 		.4byte	.LASF43
 2266 0279 03       		.byte	0x3
 2267 027a 4D       		.byte	0x4d
 2268 027b 6B000000 		.4byte	0x6b
 2269 027f 01       		.byte	0x1
 2270 0280 07       		.uleb128 0x7
 2271 0281 D1000000 		.4byte	.LASF44
 2272 0285 03       		.byte	0x3
 2273 0286 4E       		.byte	0x4e
 2274 0287 6B000000 		.4byte	0x6b
 2275 028b 02       		.byte	0x2
 2276 028c 07       		.uleb128 0x7
 2277 028d F2040000 		.4byte	.LASF45
 2278 0291 03       		.byte	0x3
 2279 0292 4F       		.byte	0x4f
 2280 0293 76000000 		.4byte	0x76
 2281 0297 04       		.byte	0x4
 2282 0298 07       		.uleb128 0x7
 2283 0299 73000000 		.4byte	.LASF46
 2284 029d 03       		.byte	0x3
 2285 029e 50       		.byte	0x50
 2286 029f 76000000 		.4byte	0x76
 2287 02a3 06       		.byte	0x6
 2288 02a4 07       		.uleb128 0x7
 2289 02a5 FD090000 		.4byte	.LASF47
 2290 02a9 03       		.byte	0x3
 2291 02aa 51       		.byte	0x51
 2292 02ab B1020000 		.4byte	0x2b1
 2293 02af 08       		.byte	0x8
 2294 02b0 00       		.byte	0
 2295 02b1 08       		.uleb128 0x8
 2296 02b2 04       		.byte	0x4
 2297 02b3 B7020000 		.4byte	0x2b7
 2298 02b7 09       		.uleb128 0x9
 2299 02b8 55020000 		.4byte	0x255
 2300 02bc 04       		.uleb128 0x4
 2301 02bd DD070000 		.4byte	.LASF48
 2302 02c1 03       		.byte	0x3
 2303 02c2 52       		.byte	0x52
 2304 02c3 60020000 		.4byte	0x260
 2305 02c7 0D       		.uleb128 0xd
 2306 02c8 C60B0000 		.4byte	.LASF49
 2307 02cc 01       		.byte	0x1
 2308 02cd 8E       		.byte	0x8e
 2309 02ce 00000000 		.4byte	.LFB35
 2310 02d2 24000000 		.4byte	.LFE35-.LFB35
 2311 02d6 01       		.uleb128 0x1
 2312 02d7 9C       		.byte	0x9c
 2313 02d8 EC020000 		.4byte	0x2ec
ARM GAS  C:\Users\Mykola\AppData\Local\Temp\ccSL9DbN.s 			page 93


 2314 02dc 0E       		.uleb128 0xe
 2315 02dd EB040000 		.4byte	.LASF51
 2316 02e1 01       		.byte	0x1
 2317 02e2 8E       		.byte	0x8e
 2318 02e3 81000000 		.4byte	0x81
 2319 02e7 00000000 		.4byte	.LLST0
 2320 02eb 00       		.byte	0
 2321 02ec 0D       		.uleb128 0xd
 2322 02ed 05070000 		.4byte	.LASF50
 2323 02f1 01       		.byte	0x1
 2324 02f2 D9       		.byte	0xd9
 2325 02f3 00000000 		.4byte	.LFB36
 2326 02f7 18000000 		.4byte	.LFE36-.LFB36
 2327 02fb 01       		.uleb128 0x1
 2328 02fc 9C       		.byte	0x9c
 2329 02fd 3E030000 		.4byte	0x33e
 2330 0301 0E       		.uleb128 0xe
 2331 0302 EB040000 		.4byte	.LASF51
 2332 0306 01       		.byte	0x1
 2333 0307 D9       		.byte	0xd9
 2334 0308 81000000 		.4byte	0x81
 2335 030c 21000000 		.4byte	.LLST1
 2336 0310 0F       		.uleb128 0xf
 2337 0311 08000000 		.4byte	.LVL3
 2338 0315 99100000 		.4byte	0x1099
 2339 0319 24030000 		.4byte	0x324
 2340 031d 10       		.uleb128 0x10
 2341 031e 01       		.uleb128 0x1
 2342 031f 50       		.byte	0x50
 2343 0320 02       		.uleb128 0x2
 2344 0321 74       		.byte	0x74
 2345 0322 00       		.sleb128 0
 2346 0323 00       		.byte	0
 2347 0324 11       		.uleb128 0x11
 2348 0325 0C000000 		.4byte	.LVL4
 2349 0329 AA100000 		.4byte	0x10aa
 2350 032d 12       		.uleb128 0x12
 2351 032e 16000000 		.4byte	.LVL5
 2352 0332 C7020000 		.4byte	0x2c7
 2353 0336 10       		.uleb128 0x10
 2354 0337 01       		.uleb128 0x1
 2355 0338 50       		.byte	0x50
 2356 0339 02       		.uleb128 0x2
 2357 033a 74       		.byte	0x74
 2358 033b 00       		.sleb128 0
 2359 033c 00       		.byte	0
 2360 033d 00       		.byte	0
 2361 033e 0D       		.uleb128 0xd
 2362 033f 6C060000 		.4byte	.LASF52
 2363 0343 01       		.byte	0x1
 2364 0344 FE       		.byte	0xfe
 2365 0345 00000000 		.4byte	.LFB37
 2366 0349 14000000 		.4byte	.LFE37-.LFB37
 2367 034d 01       		.uleb128 0x1
 2368 034e 9C       		.byte	0x9c
 2369 034f 72030000 		.4byte	0x372
 2370 0353 13       		.uleb128 0x13
ARM GAS  C:\Users\Mykola\AppData\Local\Temp\ccSL9DbN.s 			page 94


 2371 0354 6900     		.ascii	"i\000"
 2372 0356 01       		.byte	0x1
 2373 0357 0001     		.2byte	0x100
 2374 0359 81000000 		.4byte	0x81
 2375 035d 4D000000 		.4byte	.LLST2
 2376 0361 12       		.uleb128 0x12
 2377 0362 0C000000 		.4byte	.LVL9
 2378 0366 EC020000 		.4byte	0x2ec
 2379 036a 10       		.uleb128 0x10
 2380 036b 01       		.uleb128 0x1
 2381 036c 50       		.byte	0x50
 2382 036d 02       		.uleb128 0x2
 2383 036e 74       		.byte	0x74
 2384 036f 00       		.sleb128 0
 2385 0370 00       		.byte	0
 2386 0371 00       		.byte	0
 2387 0372 14       		.uleb128 0x14
 2388 0373 46050000 		.4byte	.LASF53
 2389 0377 01       		.byte	0x1
 2390 0378 2101     		.2byte	0x121
 2391 037a 00000000 		.4byte	.LFB38
 2392 037e 30000000 		.4byte	.LFE38-.LFB38
 2393 0382 01       		.uleb128 0x1
 2394 0383 9C       		.byte	0x9c
 2395 0384 DD030000 		.4byte	0x3dd
 2396 0388 13       		.uleb128 0x13
 2397 0389 6900     		.ascii	"i\000"
 2398 038b 01       		.byte	0x1
 2399 038c 2301     		.2byte	0x123
 2400 038e 81000000 		.4byte	0x81
 2401 0392 6C000000 		.4byte	.LLST3
 2402 0396 15       		.uleb128 0x15
 2403 0397 A7000000 		.4byte	.LASF54
 2404 039b 01       		.byte	0x1
 2405 039c 2401     		.2byte	0x124
 2406 039e 81000000 		.4byte	0x81
 2407 03a2 7F000000 		.4byte	.LLST4
 2408 03a6 11       		.uleb128 0x11
 2409 03a7 06000000 		.4byte	.LVL12
 2410 03ab B5100000 		.4byte	0x10b5
 2411 03af 11       		.uleb128 0x11
 2412 03b0 0A000000 		.4byte	.LVL13
 2413 03b4 AA100000 		.4byte	0x10aa
 2414 03b8 0F       		.uleb128 0xf
 2415 03b9 1A000000 		.4byte	.LVL15
 2416 03bd BC100000 		.4byte	0x10bc
 2417 03c1 CC030000 		.4byte	0x3cc
 2418 03c5 10       		.uleb128 0x10
 2419 03c6 01       		.uleb128 0x1
 2420 03c7 51       		.byte	0x51
 2421 03c8 02       		.uleb128 0x2
 2422 03c9 74       		.byte	0x74
 2423 03ca 00       		.sleb128 0
 2424 03cb 00       		.byte	0
 2425 03cc 12       		.uleb128 0x12
 2426 03cd 24000000 		.4byte	.LVL17
 2427 03d1 C7020000 		.4byte	0x2c7
ARM GAS  C:\Users\Mykola\AppData\Local\Temp\ccSL9DbN.s 			page 95


 2428 03d5 10       		.uleb128 0x10
 2429 03d6 01       		.uleb128 0x1
 2430 03d7 50       		.byte	0x50
 2431 03d8 02       		.uleb128 0x2
 2432 03d9 74       		.byte	0x74
 2433 03da 00       		.sleb128 0
 2434 03db 00       		.byte	0
 2435 03dc 00       		.byte	0
 2436 03dd 16       		.uleb128 0x16
 2437 03de 1D000000 		.4byte	.LASF57
 2438 03e2 01       		.byte	0x1
 2439 03e3 B602     		.2byte	0x2b6
 2440 03e5 76000000 		.4byte	0x76
 2441 03e9 00000000 		.4byte	.LFB43
 2442 03ed 0C000000 		.4byte	.LFE43-.LFB43
 2443 03f1 01       		.uleb128 0x1
 2444 03f2 9C       		.byte	0x9c
 2445 03f3 08040000 		.4byte	0x408
 2446 03f7 17       		.uleb128 0x17
 2447 03f8 EB040000 		.4byte	.LASF51
 2448 03fc 01       		.byte	0x1
 2449 03fd B602     		.2byte	0x2b6
 2450 03ff 81000000 		.4byte	0x81
 2451 0403 92000000 		.4byte	.LLST5
 2452 0407 00       		.byte	0
 2453 0408 14       		.uleb128 0x14
 2454 0409 AA050000 		.4byte	.LASF55
 2455 040d 01       		.byte	0x1
 2456 040e D102     		.2byte	0x2d1
 2457 0410 00000000 		.4byte	.LFB44
 2458 0414 0C000000 		.4byte	.LFE44-.LFB44
 2459 0418 01       		.uleb128 0x1
 2460 0419 9C       		.byte	0x9c
 2461 041a 3D040000 		.4byte	0x43d
 2462 041e 17       		.uleb128 0x17
 2463 041f EB040000 		.4byte	.LASF51
 2464 0423 01       		.byte	0x1
 2465 0424 D102     		.2byte	0x2d1
 2466 0426 81000000 		.4byte	0x81
 2467 042a B3000000 		.4byte	.LLST6
 2468 042e 18       		.uleb128 0x18
 2469 042f 80050000 		.4byte	.LASF56
 2470 0433 01       		.byte	0x1
 2471 0434 D102     		.2byte	0x2d1
 2472 0436 76000000 		.4byte	0x76
 2473 043a 01       		.uleb128 0x1
 2474 043b 51       		.byte	0x51
 2475 043c 00       		.byte	0
 2476 043d 16       		.uleb128 0x16
 2477 043e BB0A0000 		.4byte	.LASF58
 2478 0442 01       		.byte	0x1
 2479 0443 EC02     		.2byte	0x2ec
 2480 0445 6B000000 		.4byte	0x6b
 2481 0449 00000000 		.4byte	.LFB45
 2482 044d 0C000000 		.4byte	.LFE45-.LFB45
 2483 0451 01       		.uleb128 0x1
 2484 0452 9C       		.byte	0x9c
ARM GAS  C:\Users\Mykola\AppData\Local\Temp\ccSL9DbN.s 			page 96


 2485 0453 68040000 		.4byte	0x468
 2486 0457 17       		.uleb128 0x17
 2487 0458 EB040000 		.4byte	.LASF51
 2488 045c 01       		.byte	0x1
 2489 045d EC02     		.2byte	0x2ec
 2490 045f 81000000 		.4byte	0x81
 2491 0463 D4000000 		.4byte	.LLST7
 2492 0467 00       		.byte	0
 2493 0468 14       		.uleb128 0x14
 2494 0469 9B0A0000 		.4byte	.LASF59
 2495 046d 01       		.byte	0x1
 2496 046e 0703     		.2byte	0x307
 2497 0470 00000000 		.4byte	.LFB46
 2498 0474 0C000000 		.4byte	.LFE46-.LFB46
 2499 0478 01       		.uleb128 0x1
 2500 0479 9C       		.byte	0x9c
 2501 047a 9D040000 		.4byte	0x49d
 2502 047e 17       		.uleb128 0x17
 2503 047f EB040000 		.4byte	.LASF51
 2504 0483 01       		.byte	0x1
 2505 0484 0703     		.2byte	0x307
 2506 0486 81000000 		.4byte	0x81
 2507 048a F5000000 		.4byte	.LLST8
 2508 048e 18       		.uleb128 0x18
 2509 048f E3030000 		.4byte	.LASF60
 2510 0493 01       		.byte	0x1
 2511 0494 0703     		.2byte	0x307
 2512 0496 6B000000 		.4byte	0x6b
 2513 049a 01       		.uleb128 0x1
 2514 049b 51       		.byte	0x51
 2515 049c 00       		.byte	0
 2516 049d 16       		.uleb128 0x16
 2517 049e 36000000 		.4byte	.LASF61
 2518 04a2 01       		.byte	0x1
 2519 04a3 2203     		.2byte	0x322
 2520 04a5 6B000000 		.4byte	0x6b
 2521 04a9 00000000 		.4byte	.LFB47
 2522 04ad 0C000000 		.4byte	.LFE47-.LFB47
 2523 04b1 01       		.uleb128 0x1
 2524 04b2 9C       		.byte	0x9c
 2525 04b3 C8040000 		.4byte	0x4c8
 2526 04b7 17       		.uleb128 0x17
 2527 04b8 9B030000 		.4byte	.LASF62
 2528 04bc 01       		.byte	0x1
 2529 04bd 2203     		.2byte	0x322
 2530 04bf 81000000 		.4byte	0x81
 2531 04c3 16010000 		.4byte	.LLST9
 2532 04c7 00       		.byte	0
 2533 04c8 16       		.uleb128 0x16
 2534 04c9 4D020000 		.4byte	.LASF63
 2535 04cd 01       		.byte	0x1
 2536 04ce 3D03     		.2byte	0x33d
 2537 04d0 6B000000 		.4byte	0x6b
 2538 04d4 00000000 		.4byte	.LFB48
 2539 04d8 0C000000 		.4byte	.LFE48-.LFB48
 2540 04dc 01       		.uleb128 0x1
 2541 04dd 9C       		.byte	0x9c
ARM GAS  C:\Users\Mykola\AppData\Local\Temp\ccSL9DbN.s 			page 97


 2542 04de F3040000 		.4byte	0x4f3
 2543 04e2 17       		.uleb128 0x17
 2544 04e3 9B030000 		.4byte	.LASF62
 2545 04e7 01       		.byte	0x1
 2546 04e8 3D03     		.2byte	0x33d
 2547 04ea 81000000 		.4byte	0x81
 2548 04ee 37010000 		.4byte	.LLST10
 2549 04f2 00       		.byte	0
 2550 04f3 16       		.uleb128 0x16
 2551 04f4 2D040000 		.4byte	.LASF64
 2552 04f8 01       		.byte	0x1
 2553 04f9 5903     		.2byte	0x359
 2554 04fb 6B000000 		.4byte	0x6b
 2555 04ff 00000000 		.4byte	.LFB49
 2556 0503 0C000000 		.4byte	.LFE49-.LFB49
 2557 0507 01       		.uleb128 0x1
 2558 0508 9C       		.byte	0x9c
 2559 0509 1E050000 		.4byte	0x51e
 2560 050d 17       		.uleb128 0x17
 2561 050e 9B030000 		.4byte	.LASF62
 2562 0512 01       		.byte	0x1
 2563 0513 5903     		.2byte	0x359
 2564 0515 81000000 		.4byte	0x81
 2565 0519 58010000 		.4byte	.LLST11
 2566 051d 00       		.byte	0
 2567 051e 16       		.uleb128 0x16
 2568 051f 09060000 		.4byte	.LASF65
 2569 0523 01       		.byte	0x1
 2570 0524 7503     		.2byte	0x375
 2571 0526 6B000000 		.4byte	0x6b
 2572 052a 00000000 		.4byte	.LFB50
 2573 052e 0C000000 		.4byte	.LFE50-.LFB50
 2574 0532 01       		.uleb128 0x1
 2575 0533 9C       		.byte	0x9c
 2576 0534 49050000 		.4byte	0x549
 2577 0538 17       		.uleb128 0x17
 2578 0539 9B030000 		.4byte	.LASF62
 2579 053d 01       		.byte	0x1
 2580 053e 7503     		.2byte	0x375
 2581 0540 81000000 		.4byte	0x81
 2582 0544 79010000 		.4byte	.LLST12
 2583 0548 00       		.byte	0
 2584 0549 14       		.uleb128 0x14
 2585 054a 97080000 		.4byte	.LASF66
 2586 054e 01       		.byte	0x1
 2587 054f 9603     		.2byte	0x396
 2588 0551 00000000 		.4byte	.LFB51
 2589 0555 0C000000 		.4byte	.LFE51-.LFB51
 2590 0559 01       		.uleb128 0x1
 2591 055a 9C       		.byte	0x9c
 2592 055b 7C050000 		.4byte	0x57c
 2593 055f 18       		.uleb128 0x18
 2594 0560 9B030000 		.4byte	.LASF62
 2595 0564 01       		.byte	0x1
 2596 0565 9603     		.2byte	0x396
 2597 0567 81000000 		.4byte	0x81
 2598 056b 01       		.uleb128 0x1
ARM GAS  C:\Users\Mykola\AppData\Local\Temp\ccSL9DbN.s 			page 98


 2599 056c 50       		.byte	0x50
 2600 056d 18       		.uleb128 0x18
 2601 056e E3030000 		.4byte	.LASF60
 2602 0572 01       		.byte	0x1
 2603 0573 9603     		.2byte	0x396
 2604 0575 6B000000 		.4byte	0x6b
 2605 0579 01       		.uleb128 0x1
 2606 057a 51       		.byte	0x51
 2607 057b 00       		.byte	0
 2608 057c 14       		.uleb128 0x14
 2609 057d 2D030000 		.4byte	.LASF67
 2610 0581 01       		.byte	0x1
 2611 0582 B203     		.2byte	0x3b2
 2612 0584 00000000 		.4byte	.LFB52
 2613 0588 0C000000 		.4byte	.LFE52-.LFB52
 2614 058c 01       		.uleb128 0x1
 2615 058d 9C       		.byte	0x9c
 2616 058e AF050000 		.4byte	0x5af
 2617 0592 18       		.uleb128 0x18
 2618 0593 9B030000 		.4byte	.LASF62
 2619 0597 01       		.byte	0x1
 2620 0598 B203     		.2byte	0x3b2
 2621 059a 81000000 		.4byte	0x81
 2622 059e 01       		.uleb128 0x1
 2623 059f 50       		.byte	0x50
 2624 05a0 18       		.uleb128 0x18
 2625 05a1 E3030000 		.4byte	.LASF60
 2626 05a5 01       		.byte	0x1
 2627 05a6 B203     		.2byte	0x3b2
 2628 05a8 6B000000 		.4byte	0x6b
 2629 05ac 01       		.uleb128 0x1
 2630 05ad 51       		.byte	0x51
 2631 05ae 00       		.byte	0
 2632 05af 14       		.uleb128 0x14
 2633 05b0 6B070000 		.4byte	.LASF68
 2634 05b4 01       		.byte	0x1
 2635 05b5 CE03     		.2byte	0x3ce
 2636 05b7 00000000 		.4byte	.LFB53
 2637 05bb 0C000000 		.4byte	.LFE53-.LFB53
 2638 05bf 01       		.uleb128 0x1
 2639 05c0 9C       		.byte	0x9c
 2640 05c1 E2050000 		.4byte	0x5e2
 2641 05c5 18       		.uleb128 0x18
 2642 05c6 9B030000 		.4byte	.LASF62
 2643 05ca 01       		.byte	0x1
 2644 05cb CE03     		.2byte	0x3ce
 2645 05cd 81000000 		.4byte	0x81
 2646 05d1 01       		.uleb128 0x1
 2647 05d2 50       		.byte	0x50
 2648 05d3 18       		.uleb128 0x18
 2649 05d4 E3030000 		.4byte	.LASF60
 2650 05d8 01       		.byte	0x1
 2651 05d9 CE03     		.2byte	0x3ce
 2652 05db 6B000000 		.4byte	0x6b
 2653 05df 01       		.uleb128 0x1
 2654 05e0 51       		.byte	0x51
 2655 05e1 00       		.byte	0
ARM GAS  C:\Users\Mykola\AppData\Local\Temp\ccSL9DbN.s 			page 99


 2656 05e2 14       		.uleb128 0x14
 2657 05e3 88070000 		.4byte	.LASF69
 2658 05e7 01       		.byte	0x1
 2659 05e8 EB03     		.2byte	0x3eb
 2660 05ea 00000000 		.4byte	.LFB54
 2661 05ee 0C000000 		.4byte	.LFE54-.LFB54
 2662 05f2 01       		.uleb128 0x1
 2663 05f3 9C       		.byte	0x9c
 2664 05f4 15060000 		.4byte	0x615
 2665 05f8 18       		.uleb128 0x18
 2666 05f9 9B030000 		.4byte	.LASF62
 2667 05fd 01       		.byte	0x1
 2668 05fe EB03     		.2byte	0x3eb
 2669 0600 81000000 		.4byte	0x81
 2670 0604 01       		.uleb128 0x1
 2671 0605 50       		.byte	0x50
 2672 0606 18       		.uleb128 0x18
 2673 0607 E3030000 		.4byte	.LASF60
 2674 060b 01       		.byte	0x1
 2675 060c EB03     		.2byte	0x3eb
 2676 060e 6B000000 		.4byte	0x6b
 2677 0612 01       		.uleb128 0x1
 2678 0613 51       		.byte	0x51
 2679 0614 00       		.byte	0
 2680 0615 14       		.uleb128 0x14
 2681 0616 FB010000 		.4byte	.LASF70
 2682 061a 01       		.byte	0x1
 2683 061b 0704     		.2byte	0x407
 2684 061d 00000000 		.4byte	.LFB55
 2685 0621 0C000000 		.4byte	.LFE55-.LFB55
 2686 0625 01       		.uleb128 0x1
 2687 0626 9C       		.byte	0x9c
 2688 0627 48060000 		.4byte	0x648
 2689 062b 18       		.uleb128 0x18
 2690 062c 9B030000 		.4byte	.LASF62
 2691 0630 01       		.byte	0x1
 2692 0631 0704     		.2byte	0x407
 2693 0633 81000000 		.4byte	0x81
 2694 0637 01       		.uleb128 0x1
 2695 0638 50       		.byte	0x50
 2696 0639 18       		.uleb128 0x18
 2697 063a E3030000 		.4byte	.LASF60
 2698 063e 01       		.byte	0x1
 2699 063f 0704     		.2byte	0x407
 2700 0641 6B000000 		.4byte	0x6b
 2701 0645 01       		.uleb128 0x1
 2702 0646 51       		.byte	0x51
 2703 0647 00       		.byte	0
 2704 0648 14       		.uleb128 0x14
 2705 0649 86090000 		.4byte	.LASF71
 2706 064d 01       		.byte	0x1
 2707 064e 2304     		.2byte	0x423
 2708 0650 00000000 		.4byte	.LFB56
 2709 0654 0C000000 		.4byte	.LFE56-.LFB56
 2710 0658 01       		.uleb128 0x1
 2711 0659 9C       		.byte	0x9c
 2712 065a 7D060000 		.4byte	0x67d
ARM GAS  C:\Users\Mykola\AppData\Local\Temp\ccSL9DbN.s 			page 100


 2713 065e 17       		.uleb128 0x17
 2714 065f EB040000 		.4byte	.LASF51
 2715 0663 01       		.byte	0x1
 2716 0664 2304     		.2byte	0x423
 2717 0666 81000000 		.4byte	0x81
 2718 066a 9A010000 		.4byte	.LLST13
 2719 066e 18       		.uleb128 0x18
 2720 066f E3030000 		.4byte	.LASF60
 2721 0673 01       		.byte	0x1
 2722 0674 2304     		.2byte	0x423
 2723 0676 6B000000 		.4byte	0x6b
 2724 067a 01       		.uleb128 0x1
 2725 067b 51       		.byte	0x51
 2726 067c 00       		.byte	0
 2727 067d 16       		.uleb128 0x16
 2728 067e B3060000 		.4byte	.LASF72
 2729 0682 01       		.byte	0x1
 2730 0683 5104     		.2byte	0x451
 2731 0685 81000000 		.4byte	0x81
 2732 0689 00000000 		.4byte	.LFB57
 2733 068d 98000000 		.4byte	.LFE57-.LFB57
 2734 0691 01       		.uleb128 0x1
 2735 0692 9C       		.byte	0x9c
 2736 0693 7E070000 		.4byte	0x77e
 2737 0697 17       		.uleb128 0x17
 2738 0698 EB040000 		.4byte	.LASF51
 2739 069c 01       		.byte	0x1
 2740 069d 5104     		.2byte	0x451
 2741 069f 81000000 		.4byte	0x81
 2742 06a3 BB010000 		.4byte	.LLST14
 2743 06a7 15       		.uleb128 0x15
 2744 06a8 9B030000 		.4byte	.LASF62
 2745 06ac 01       		.byte	0x1
 2746 06ad 5304     		.2byte	0x453
 2747 06af 6B000000 		.4byte	0x6b
 2748 06b3 E7010000 		.4byte	.LLST15
 2749 06b7 15       		.uleb128 0x15
 2750 06b8 58060000 		.4byte	.LASF73
 2751 06bc 01       		.byte	0x1
 2752 06bd 5404     		.2byte	0x454
 2753 06bf 6B000000 		.4byte	0x6b
 2754 06c3 FA010000 		.4byte	.LLST16
 2755 06c7 19       		.uleb128 0x19
 2756 06c8 7E0A0000 		.4byte	.LASF74
 2757 06cc 01       		.byte	0x1
 2758 06cd 5504     		.2byte	0x455
 2759 06cf 6B000000 		.4byte	0x6b
 2760 06d3 00       		.byte	0
 2761 06d4 15       		.uleb128 0x15
 2762 06d5 3D0A0000 		.4byte	.LASF75
 2763 06d9 01       		.byte	0x1
 2764 06da 5704     		.2byte	0x457
 2765 06dc 6B000000 		.4byte	0x6b
 2766 06e0 0D020000 		.4byte	.LLST17
 2767 06e4 15       		.uleb128 0x15
 2768 06e5 71040000 		.4byte	.LASF76
 2769 06e9 01       		.byte	0x1
ARM GAS  C:\Users\Mykola\AppData\Local\Temp\ccSL9DbN.s 			page 101


 2770 06ea 5804     		.2byte	0x458
 2771 06ec 6B000000 		.4byte	0x6b
 2772 06f0 20020000 		.4byte	.LLST18
 2773 06f4 1A       		.uleb128 0x1a
 2774 06f5 7C020000 		.4byte	.LASF77
 2775 06f9 01       		.byte	0x1
 2776 06fa 5904     		.2byte	0x459
 2777 06fc 7E070000 		.4byte	0x77e
 2778 0700 05       		.uleb128 0x5
 2779 0701 03       		.byte	0x3
 2780 0702 1C000000 		.4byte	capsense_debounceCounter.5383
 2781 0706 0F       		.uleb128 0xf
 2782 0707 22000000 		.4byte	.LVL50
 2783 070b BC100000 		.4byte	0x10bc
 2784 070f 23070000 		.4byte	0x723
 2785 0713 10       		.uleb128 0x10
 2786 0714 01       		.uleb128 0x1
 2787 0715 51       		.byte	0x51
 2788 0716 02       		.uleb128 0x2
 2789 0717 74       		.byte	0x74
 2790 0718 00       		.sleb128 0
 2791 0719 10       		.uleb128 0x10
 2792 071a 01       		.uleb128 0x1
 2793 071b 50       		.byte	0x50
 2794 071c 05       		.uleb128 0x5
 2795 071d 03       		.byte	0x3
 2796 071e 20000000 		.4byte	.LANCHOR0+32
 2797 0722 00       		.byte	0
 2798 0723 0F       		.uleb128 0xf
 2799 0724 40000000 		.4byte	.LVL52
 2800 0728 D6100000 		.4byte	0x10d6
 2801 072c 42070000 		.4byte	0x742
 2802 0730 10       		.uleb128 0x10
 2803 0731 01       		.uleb128 0x1
 2804 0732 52       		.byte	0x52
 2805 0733 01       		.uleb128 0x1
 2806 0734 30       		.byte	0x30
 2807 0735 10       		.uleb128 0x10
 2808 0736 01       		.uleb128 0x1
 2809 0737 51       		.byte	0x51
 2810 0738 02       		.uleb128 0x2
 2811 0739 74       		.byte	0x74
 2812 073a 00       		.sleb128 0
 2813 073b 10       		.uleb128 0x10
 2814 073c 01       		.uleb128 0x1
 2815 073d 50       		.byte	0x50
 2816 073e 02       		.uleb128 0x2
 2817 073f 75       		.byte	0x75
 2818 0740 20       		.sleb128 32
 2819 0741 00       		.byte	0
 2820 0742 0F       		.uleb128 0xf
 2821 0743 6A000000 		.4byte	.LVL55
 2822 0747 D6100000 		.4byte	0x10d6
 2823 074b 64070000 		.4byte	0x764
 2824 074f 10       		.uleb128 0x10
 2825 0750 01       		.uleb128 0x1
 2826 0751 52       		.byte	0x52
ARM GAS  C:\Users\Mykola\AppData\Local\Temp\ccSL9DbN.s 			page 102


 2827 0752 01       		.uleb128 0x1
 2828 0753 31       		.byte	0x31
 2829 0754 10       		.uleb128 0x10
 2830 0755 01       		.uleb128 0x1
 2831 0756 51       		.byte	0x51
 2832 0757 02       		.uleb128 0x2
 2833 0758 74       		.byte	0x74
 2834 0759 00       		.sleb128 0
 2835 075a 10       		.uleb128 0x10
 2836 075b 01       		.uleb128 0x1
 2837 075c 50       		.byte	0x50
 2838 075d 05       		.uleb128 0x5
 2839 075e 03       		.byte	0x3
 2840 075f 20000000 		.4byte	.LANCHOR0+32
 2841 0763 00       		.byte	0
 2842 0764 12       		.uleb128 0x12
 2843 0765 7A000000 		.4byte	.LVL56
 2844 0769 BC100000 		.4byte	0x10bc
 2845 076d 10       		.uleb128 0x10
 2846 076e 01       		.uleb128 0x1
 2847 076f 51       		.byte	0x51
 2848 0770 02       		.uleb128 0x2
 2849 0771 74       		.byte	0x74
 2850 0772 00       		.sleb128 0
 2851 0773 10       		.uleb128 0x10
 2852 0774 01       		.uleb128 0x1
 2853 0775 50       		.byte	0x50
 2854 0776 05       		.uleb128 0x5
 2855 0777 03       		.byte	0x3
 2856 0778 20000000 		.4byte	.LANCHOR0+32
 2857 077c 00       		.byte	0
 2858 077d 00       		.byte	0
 2859 077e 1B       		.uleb128 0x1b
 2860 077f 6B000000 		.4byte	0x6b
 2861 0783 8E070000 		.4byte	0x78e
 2862 0787 1C       		.uleb128 0x1c
 2863 0788 B7000000 		.4byte	0xb7
 2864 078c 00       		.byte	0
 2865 078d 00       		.byte	0
 2866 078e 16       		.uleb128 0x16
 2867 078f A00B0000 		.4byte	.LASF78
 2868 0793 01       		.byte	0x1
 2869 0794 A804     		.2byte	0x4a8
 2870 0796 81000000 		.4byte	0x81
 2871 079a 00000000 		.4byte	.LFB58
 2872 079e 1C000000 		.4byte	.LFE58-.LFB58
 2873 07a2 01       		.uleb128 0x1
 2874 07a3 9C       		.byte	0x9c
 2875 07a4 F6070000 		.4byte	0x7f6
 2876 07a8 17       		.uleb128 0x17
 2877 07a9 9B030000 		.4byte	.LASF62
 2878 07ad 01       		.byte	0x1
 2879 07ae A804     		.2byte	0x4a8
 2880 07b0 81000000 		.4byte	0x81
 2881 07b4 3E020000 		.4byte	.LLST19
 2882 07b8 15       		.uleb128 0x15
 2883 07b9 CE050000 		.4byte	.LASF79
ARM GAS  C:\Users\Mykola\AppData\Local\Temp\ccSL9DbN.s 			page 103


 2884 07bd 01       		.byte	0x1
 2885 07be AA04     		.2byte	0x4aa
 2886 07c0 81000000 		.4byte	0x81
 2887 07c4 5F020000 		.4byte	.LLST20
 2888 07c8 19       		.uleb128 0x19
 2889 07c9 B7000000 		.4byte	.LASF80
 2890 07cd 01       		.byte	0x1
 2891 07ce AB04     		.2byte	0x4ab
 2892 07d0 81000000 		.4byte	0x81
 2893 07d4 05       		.byte	0x5
 2894 07d5 15       		.uleb128 0x15
 2895 07d6 B50A0000 		.4byte	.LASF81
 2896 07da 01       		.byte	0x1
 2897 07db AC04     		.2byte	0x4ac
 2898 07dd 81000000 		.4byte	0x81
 2899 07e1 7E020000 		.4byte	.LLST21
 2900 07e5 12       		.uleb128 0x12
 2901 07e6 0C000000 		.4byte	.LVL63
 2902 07ea 7D060000 		.4byte	0x67d
 2903 07ee 10       		.uleb128 0x10
 2904 07ef 01       		.uleb128 0x1
 2905 07f0 50       		.byte	0x50
 2906 07f1 02       		.uleb128 0x2
 2907 07f2 74       		.byte	0x74
 2908 07f3 00       		.sleb128 0
 2909 07f4 00       		.byte	0
 2910 07f5 00       		.byte	0
 2911 07f6 16       		.uleb128 0x16
 2912 07f7 DB010000 		.4byte	.LASF82
 2913 07fb 01       		.byte	0x1
 2914 07fc D604     		.2byte	0x4d6
 2915 07fe 81000000 		.4byte	0x81
 2916 0802 00000000 		.4byte	.LFB59
 2917 0806 1E000000 		.4byte	.LFE59-.LFB59
 2918 080a 01       		.uleb128 0x1
 2919 080b 9C       		.byte	0x9c
 2920 080c 3F080000 		.4byte	0x83f
 2921 0810 13       		.uleb128 0x13
 2922 0811 6900     		.ascii	"i\000"
 2923 0813 01       		.byte	0x1
 2924 0814 D904     		.2byte	0x4d9
 2925 0816 81000000 		.4byte	0x81
 2926 081a A8020000 		.4byte	.LLST22
 2927 081e 15       		.uleb128 0x15
 2928 081f B50A0000 		.4byte	.LASF81
 2929 0823 01       		.byte	0x1
 2930 0824 DA04     		.2byte	0x4da
 2931 0826 81000000 		.4byte	0x81
 2932 082a C7020000 		.4byte	.LLST23
 2933 082e 12       		.uleb128 0x12
 2934 082f 0E000000 		.4byte	.LVL70
 2935 0833 8E070000 		.4byte	0x78e
 2936 0837 10       		.uleb128 0x10
 2937 0838 01       		.uleb128 0x1
 2938 0839 50       		.byte	0x50
 2939 083a 02       		.uleb128 0x2
 2940 083b 74       		.byte	0x74
ARM GAS  C:\Users\Mykola\AppData\Local\Temp\ccSL9DbN.s 			page 104


 2941 083c 00       		.sleb128 0
 2942 083d 00       		.byte	0
 2943 083e 00       		.byte	0
 2944 083f 14       		.uleb128 0x14
 2945 0840 5A0A0000 		.4byte	.LASF83
 2946 0844 01       		.byte	0x1
 2947 0845 0505     		.2byte	0x505
 2948 0847 00000000 		.4byte	.LFB60
 2949 084b 1C000000 		.4byte	.LFE60-.LFB60
 2950 084f 01       		.uleb128 0x1
 2951 0850 9C       		.byte	0x9c
 2952 0851 98080000 		.4byte	0x898
 2953 0855 17       		.uleb128 0x17
 2954 0856 9B030000 		.4byte	.LASF62
 2955 085a 01       		.byte	0x1
 2956 085b 0505     		.2byte	0x505
 2957 085d 81000000 		.4byte	0x81
 2958 0861 F1020000 		.4byte	.LLST24
 2959 0865 15       		.uleb128 0x15
 2960 0866 CE050000 		.4byte	.LASF79
 2961 086a 01       		.byte	0x1
 2962 086b 0805     		.2byte	0x508
 2963 086d 6B000000 		.4byte	0x6b
 2964 0871 12030000 		.4byte	.LLST25
 2965 0875 19       		.uleb128 0x19
 2966 0876 B7000000 		.4byte	.LASF80
 2967 087a 01       		.byte	0x1
 2968 087b 0905     		.2byte	0x509
 2969 087d 6B000000 		.4byte	0x6b
 2970 0881 05       		.byte	0x5
 2971 0882 12       		.uleb128 0x12
 2972 0883 0E000000 		.4byte	.LVL78
 2973 0887 D6100000 		.4byte	0x10d6
 2974 088b 10       		.uleb128 0x10
 2975 088c 01       		.uleb128 0x1
 2976 088d 52       		.byte	0x52
 2977 088e 01       		.uleb128 0x1
 2978 088f 31       		.byte	0x31
 2979 0890 10       		.uleb128 0x10
 2980 0891 01       		.uleb128 0x1
 2981 0892 51       		.byte	0x51
 2982 0893 02       		.uleb128 0x2
 2983 0894 74       		.byte	0x74
 2984 0895 00       		.sleb128 0
 2985 0896 00       		.byte	0
 2986 0897 00       		.byte	0
 2987 0898 14       		.uleb128 0x14
 2988 0899 5C010000 		.4byte	.LASF84
 2989 089d 01       		.byte	0x1
 2990 089e 3005     		.2byte	0x530
 2991 08a0 00000000 		.4byte	.LFB61
 2992 08a4 1C000000 		.4byte	.LFE61-.LFB61
 2993 08a8 01       		.uleb128 0x1
 2994 08a9 9C       		.byte	0x9c
 2995 08aa F1080000 		.4byte	0x8f1
 2996 08ae 17       		.uleb128 0x17
 2997 08af 9B030000 		.4byte	.LASF62
ARM GAS  C:\Users\Mykola\AppData\Local\Temp\ccSL9DbN.s 			page 105


 2998 08b3 01       		.byte	0x1
 2999 08b4 3005     		.2byte	0x530
 3000 08b6 81000000 		.4byte	0x81
 3001 08ba 3C030000 		.4byte	.LLST26
 3002 08be 15       		.uleb128 0x15
 3003 08bf CE050000 		.4byte	.LASF79
 3004 08c3 01       		.byte	0x1
 3005 08c4 3205     		.2byte	0x532
 3006 08c6 6B000000 		.4byte	0x6b
 3007 08ca 5D030000 		.4byte	.LLST27
 3008 08ce 19       		.uleb128 0x19
 3009 08cf B7000000 		.4byte	.LASF80
 3010 08d3 01       		.byte	0x1
 3011 08d4 3305     		.2byte	0x533
 3012 08d6 6B000000 		.4byte	0x6b
 3013 08da 05       		.byte	0x5
 3014 08db 12       		.uleb128 0x12
 3015 08dc 0E000000 		.4byte	.LVL85
 3016 08e0 D6100000 		.4byte	0x10d6
 3017 08e4 10       		.uleb128 0x10
 3018 08e5 01       		.uleb128 0x1
 3019 08e6 52       		.byte	0x52
 3020 08e7 01       		.uleb128 0x1
 3021 08e8 30       		.byte	0x30
 3022 08e9 10       		.uleb128 0x10
 3023 08ea 01       		.uleb128 0x1
 3024 08eb 51       		.byte	0x51
 3025 08ec 02       		.uleb128 0x2
 3026 08ed 74       		.byte	0x74
 3027 08ee 00       		.sleb128 0
 3028 08ef 00       		.byte	0
 3029 08f0 00       		.byte	0
 3030 08f1 16       		.uleb128 0x16
 3031 08f2 8B0B0000 		.4byte	.LASF85
 3032 08f6 01       		.byte	0x1
 3033 08f7 6205     		.2byte	0x562
 3034 08f9 6B000000 		.4byte	0x6b
 3035 08fd 00000000 		.4byte	.LFB62
 3036 0901 2C000000 		.4byte	.LFE62-.LFB62
 3037 0905 01       		.uleb128 0x1
 3038 0906 9C       		.byte	0x9c
 3039 0907 76090000 		.4byte	0x976
 3040 090b 17       		.uleb128 0x17
 3041 090c 0C040000 		.4byte	.LASF86
 3042 0910 01       		.byte	0x1
 3043 0911 6205     		.2byte	0x562
 3044 0913 6B000000 		.4byte	0x6b
 3045 0917 87030000 		.4byte	.LLST28
 3046 091b 18       		.uleb128 0x18
 3047 091c 09030000 		.4byte	.LASF87
 3048 0920 01       		.byte	0x1
 3049 0921 6205     		.2byte	0x562
 3050 0923 6B000000 		.4byte	0x6b
 3051 0927 01       		.uleb128 0x1
 3052 0928 51       		.byte	0x51
 3053 0929 18       		.uleb128 0x18
 3054 092a 3D0A0000 		.4byte	.LASF75
ARM GAS  C:\Users\Mykola\AppData\Local\Temp\ccSL9DbN.s 			page 106


 3055 092e 01       		.byte	0x1
 3056 092f 6205     		.2byte	0x562
 3057 0931 6B000000 		.4byte	0x6b
 3058 0935 01       		.uleb128 0x1
 3059 0936 52       		.byte	0x52
 3060 0937 13       		.uleb128 0x13
 3061 0938 6900     		.ascii	"i\000"
 3062 093a 01       		.byte	0x1
 3063 093b 6505     		.2byte	0x565
 3064 093d 6B000000 		.4byte	0x6b
 3065 0941 A8030000 		.4byte	.LLST29
 3066 0945 15       		.uleb128 0x15
 3067 0946 A3090000 		.4byte	.LASF88
 3068 094a 01       		.byte	0x1
 3069 094b 6F05     		.2byte	0x56f
 3070 094d 6B000000 		.4byte	0x6b
 3071 0951 D2030000 		.4byte	.LLST30
 3072 0955 15       		.uleb128 0x15
 3073 0956 B3080000 		.4byte	.LASF89
 3074 095a 01       		.byte	0x1
 3075 095b 7105     		.2byte	0x571
 3076 095d 6B000000 		.4byte	0x6b
 3077 0961 F2030000 		.4byte	.LLST31
 3078 0965 15       		.uleb128 0x15
 3079 0966 27070000 		.4byte	.LASF90
 3080 096a 01       		.byte	0x1
 3081 096b 7205     		.2byte	0x572
 3082 096d DD010000 		.4byte	0x1dd
 3083 0971 1C040000 		.4byte	.LLST32
 3084 0975 00       		.byte	0
 3085 0976 1D       		.uleb128 0x1d
 3086 0977 73010000 		.4byte	.LASF91
 3087 097b 01       		.byte	0x1
 3088 097c 0106     		.2byte	0x601
 3089 097e 6B000000 		.4byte	0x6b
 3090 0982 00000000 		.4byte	.LFB63
 3091 0986 E4000000 		.4byte	.LFE63-.LFB63
 3092 098a 01       		.uleb128 0x1
 3093 098b 9C       		.byte	0x9c
 3094 098c 510A0000 		.4byte	0xa51
 3095 0990 17       		.uleb128 0x17
 3096 0991 A3090000 		.4byte	.LASF88
 3097 0995 01       		.byte	0x1
 3098 0996 0106     		.2byte	0x601
 3099 0998 6B000000 		.4byte	0x6b
 3100 099c 2F040000 		.4byte	.LLST33
 3101 09a0 17       		.uleb128 0x17
 3102 09a1 0C040000 		.4byte	.LASF86
 3103 09a5 01       		.byte	0x1
 3104 09a6 0106     		.2byte	0x601
 3105 09a8 6B000000 		.4byte	0x6b
 3106 09ac 50040000 		.4byte	.LLST34
 3107 09b0 17       		.uleb128 0x17
 3108 09b1 09030000 		.4byte	.LASF87
 3109 09b5 01       		.byte	0x1
 3110 09b6 0206     		.2byte	0x602
 3111 09b8 6B000000 		.4byte	0x6b
ARM GAS  C:\Users\Mykola\AppData\Local\Temp\ccSL9DbN.s 			page 107


 3112 09bc 71040000 		.4byte	.LLST35
 3113 09c0 17       		.uleb128 0x17
 3114 09c1 C3050000 		.4byte	.LASF92
 3115 09c5 01       		.byte	0x1
 3116 09c6 0206     		.2byte	0x602
 3117 09c8 76000000 		.4byte	0x76
 3118 09cc 92040000 		.4byte	.LLST36
 3119 09d0 17       		.uleb128 0x17
 3120 09d1 060A0000 		.4byte	.LASF93
 3121 09d5 01       		.byte	0x1
 3122 09d6 0206     		.2byte	0x602
 3123 09d8 6B000000 		.4byte	0x6b
 3124 09dc B3040000 		.4byte	.LLST37
 3125 09e0 15       		.uleb128 0x15
 3126 09e1 99010000 		.4byte	.LASF94
 3127 09e5 01       		.byte	0x1
 3128 09e6 0606     		.2byte	0x606
 3129 09e8 6B000000 		.4byte	0x6b
 3130 09ec DF040000 		.4byte	.LLST38
 3131 09f0 15       		.uleb128 0x15
 3132 09f1 E1000000 		.4byte	.LASF95
 3133 09f5 01       		.byte	0x1
 3134 09f6 0706     		.2byte	0x607
 3135 09f8 6B000000 		.4byte	0x6b
 3136 09fc 20050000 		.4byte	.LLST39
 3137 0a00 1A       		.uleb128 0x1a
 3138 0a01 52000000 		.4byte	.LASF96
 3139 0a05 01       		.byte	0x1
 3140 0a06 0C06     		.2byte	0x60c
 3141 0a08 510A0000 		.4byte	0xa51
 3142 0a0c 05       		.uleb128 0x5
 3143 0a0d 03       		.byte	0x3
 3144 0a0e 24000000 		.4byte	capsense_centroid.5435
 3145 0a12 1A       		.uleb128 0x1a
 3146 0a13 BD0B0000 		.4byte	.LASF97
 3147 0a17 01       		.byte	0x1
 3148 0a18 1306     		.2byte	0x613
 3149 0a1a 6B000000 		.4byte	0x6b
 3150 0a1e 01       		.uleb128 0x1
 3151 0a1f 50       		.byte	0x50
 3152 0a20 15       		.uleb128 0x15
 3153 0a21 45010000 		.4byte	.LASF98
 3154 0a25 01       		.byte	0x1
 3155 0a26 1406     		.2byte	0x614
 3156 0a28 81000000 		.4byte	0x81
 3157 0a2c 33050000 		.4byte	.LLST40
 3158 0a30 15       		.uleb128 0x15
 3159 0a31 58090000 		.4byte	.LASF99
 3160 0a35 01       		.byte	0x1
 3161 0a36 1506     		.2byte	0x615
 3162 0a38 97000000 		.4byte	0x97
 3163 0a3c 5E050000 		.4byte	.LLST41
 3164 0a40 15       		.uleb128 0x15
 3165 0a41 27070000 		.4byte	.LASF90
 3166 0a45 01       		.byte	0x1
 3167 0a46 1706     		.2byte	0x617
 3168 0a48 DD010000 		.4byte	0x1dd
ARM GAS  C:\Users\Mykola\AppData\Local\Temp\ccSL9DbN.s 			page 108


 3169 0a4c C2050000 		.4byte	.LLST42
 3170 0a50 00       		.byte	0
 3171 0a51 1B       		.uleb128 0x1b
 3172 0a52 6B000000 		.4byte	0x6b
 3173 0a56 610A0000 		.4byte	0xa61
 3174 0a5a 1C       		.uleb128 0x1c
 3175 0a5b B7000000 		.4byte	0xb7
 3176 0a5f 02       		.byte	0x2
 3177 0a60 00       		.byte	0
 3178 0a61 16       		.uleb128 0x16
 3179 0a62 2C060000 		.4byte	.LASF100
 3180 0a66 01       		.byte	0x1
 3181 0a67 9F07     		.2byte	0x79f
 3182 0a69 76000000 		.4byte	0x76
 3183 0a6d 00000000 		.4byte	.LFB65
 3184 0a71 40000000 		.4byte	.LFE65-.LFB65
 3185 0a75 01       		.uleb128 0x1
 3186 0a76 9C       		.byte	0x9c
 3187 0a77 F90A0000 		.4byte	0xaf9
 3188 0a7b 17       		.uleb128 0x17
 3189 0a7c 9B030000 		.4byte	.LASF62
 3190 0a80 01       		.byte	0x1
 3191 0a81 9F07     		.2byte	0x79f
 3192 0a83 81000000 		.4byte	0x81
 3193 0a87 E0050000 		.4byte	.LLST43
 3194 0a8b 15       		.uleb128 0x15
 3195 0a8c A3090000 		.4byte	.LASF88
 3196 0a90 01       		.byte	0x1
 3197 0a91 AE07     		.2byte	0x7ae
 3198 0a93 6B000000 		.4byte	0x6b
 3199 0a97 0C060000 		.4byte	.LLST44
 3200 0a9b 15       		.uleb128 0x15
 3201 0a9c BD0B0000 		.4byte	.LASF97
 3202 0aa0 01       		.byte	0x1
 3203 0aa1 AF07     		.2byte	0x7af
 3204 0aa3 76000000 		.4byte	0x76
 3205 0aa7 2A060000 		.4byte	.LLST45
 3206 0aab 19       		.uleb128 0x19
 3207 0aac 0C040000 		.4byte	.LASF86
 3208 0ab0 01       		.byte	0x1
 3209 0ab1 B007     		.2byte	0x7b0
 3210 0ab3 6B000000 		.4byte	0x6b
 3211 0ab7 00       		.byte	0
 3212 0ab8 19       		.uleb128 0x19
 3213 0ab9 09030000 		.4byte	.LASF87
 3214 0abd 01       		.byte	0x1
 3215 0abe B107     		.2byte	0x7b1
 3216 0ac0 6B000000 		.4byte	0x6b
 3217 0ac4 05       		.byte	0x5
 3218 0ac5 0F       		.uleb128 0xf
 3219 0ac6 12000000 		.4byte	.LVL131
 3220 0aca F1080000 		.4byte	0x8f1
 3221 0ace DD0A0000 		.4byte	0xadd
 3222 0ad2 10       		.uleb128 0x10
 3223 0ad3 01       		.uleb128 0x1
 3224 0ad4 51       		.byte	0x51
 3225 0ad5 01       		.uleb128 0x1
ARM GAS  C:\Users\Mykola\AppData\Local\Temp\ccSL9DbN.s 			page 109


 3226 0ad6 35       		.byte	0x35
 3227 0ad7 10       		.uleb128 0x10
 3228 0ad8 01       		.uleb128 0x1
 3229 0ad9 50       		.byte	0x50
 3230 0ada 01       		.uleb128 0x1
 3231 0adb 30       		.byte	0x30
 3232 0adc 00       		.byte	0
 3233 0add 12       		.uleb128 0x12
 3234 0ade 28000000 		.4byte	.LVL132
 3235 0ae2 76090000 		.4byte	0x976
 3236 0ae6 10       		.uleb128 0x10
 3237 0ae7 01       		.uleb128 0x1
 3238 0ae8 53       		.byte	0x53
 3239 0ae9 03       		.uleb128 0x3
 3240 0aea 0A       		.byte	0xa
 3241 0aeb 0019     		.2byte	0x1900
 3242 0aed 10       		.uleb128 0x10
 3243 0aee 01       		.uleb128 0x1
 3244 0aef 52       		.byte	0x52
 3245 0af0 01       		.uleb128 0x1
 3246 0af1 35       		.byte	0x35
 3247 0af2 10       		.uleb128 0x10
 3248 0af3 01       		.uleb128 0x1
 3249 0af4 51       		.byte	0x51
 3250 0af5 01       		.uleb128 0x1
 3251 0af6 30       		.byte	0x30
 3252 0af7 00       		.byte	0
 3253 0af8 00       		.byte	0
 3254 0af9 16       		.uleb128 0x16
 3255 0afa 94050000 		.4byte	.LASF101
 3256 0afe 01       		.byte	0x1
 3257 0aff 4C09     		.2byte	0x94c
 3258 0b01 76000000 		.4byte	0x76
 3259 0b05 00000000 		.4byte	.LFB66
 3260 0b09 1C000000 		.4byte	.LFE66-.LFB66
 3261 0b0d 01       		.uleb128 0x1
 3262 0b0e 9C       		.byte	0x9c
 3263 0b0f 4B0B0000 		.4byte	0xb4b
 3264 0b13 1E       		.uleb128 0x1e
 3265 0b14 783100   		.ascii	"x1\000"
 3266 0b17 01       		.byte	0x1
 3267 0b18 4C09     		.2byte	0x94c
 3268 0b1a 76000000 		.4byte	0x76
 3269 0b1e 48060000 		.4byte	.LLST46
 3270 0b22 1E       		.uleb128 0x1e
 3271 0b23 783200   		.ascii	"x2\000"
 3272 0b26 01       		.byte	0x1
 3273 0b27 4C09     		.2byte	0x94c
 3274 0b29 76000000 		.4byte	0x76
 3275 0b2d 74060000 		.4byte	.LLST47
 3276 0b31 1F       		.uleb128 0x1f
 3277 0b32 783300   		.ascii	"x3\000"
 3278 0b35 01       		.byte	0x1
 3279 0b36 4C09     		.2byte	0x94c
 3280 0b38 76000000 		.4byte	0x76
 3281 0b3c 01       		.uleb128 0x1
 3282 0b3d 52       		.byte	0x52
ARM GAS  C:\Users\Mykola\AppData\Local\Temp\ccSL9DbN.s 			page 110


 3283 0b3e 20       		.uleb128 0x20
 3284 0b3f 746D7000 		.ascii	"tmp\000"
 3285 0b43 01       		.byte	0x1
 3286 0b44 4E09     		.2byte	0x94e
 3287 0b46 76000000 		.4byte	0x76
 3288 0b4a 00       		.byte	0
 3289 0b4b 16       		.uleb128 0x16
 3290 0b4c 68020000 		.4byte	.LASF102
 3291 0b50 01       		.byte	0x1
 3292 0b51 C409     		.2byte	0x9c4
 3293 0b53 76000000 		.4byte	0x76
 3294 0b57 00000000 		.4byte	.LFB67
 3295 0b5b 0C000000 		.4byte	.LFE67-.LFB67
 3296 0b5f 01       		.uleb128 0x1
 3297 0b60 9C       		.byte	0x9c
 3298 0b61 940B0000 		.4byte	0xb94
 3299 0b65 1E       		.uleb128 0x1e
 3300 0b66 783100   		.ascii	"x1\000"
 3301 0b69 01       		.byte	0x1
 3302 0b6a C409     		.2byte	0x9c4
 3303 0b6c 76000000 		.4byte	0x76
 3304 0b70 92060000 		.4byte	.LLST48
 3305 0b74 1E       		.uleb128 0x1e
 3306 0b75 783200   		.ascii	"x2\000"
 3307 0b78 01       		.byte	0x1
 3308 0b79 C409     		.2byte	0x9c4
 3309 0b7b 76000000 		.4byte	0x76
 3310 0b7f B3060000 		.4byte	.LLST49
 3311 0b83 13       		.uleb128 0x13
 3312 0b84 746D7000 		.ascii	"tmp\000"
 3313 0b88 01       		.byte	0x1
 3314 0b89 C609     		.2byte	0x9c6
 3315 0b8b 81000000 		.4byte	0x81
 3316 0b8f D4060000 		.4byte	.LLST50
 3317 0b93 00       		.byte	0
 3318 0b94 14       		.uleb128 0x14
 3319 0b95 E9000000 		.4byte	.LASF103
 3320 0b99 01       		.byte	0x1
 3321 0b9a 6201     		.2byte	0x162
 3322 0b9c 00000000 		.4byte	.LFB39
 3323 0ba0 1C010000 		.4byte	.LFE39-.LFB39
 3324 0ba4 01       		.uleb128 0x1
 3325 0ba5 9C       		.byte	0x9c
 3326 0ba6 4E0C0000 		.4byte	0xc4e
 3327 0baa 17       		.uleb128 0x17
 3328 0bab EB040000 		.4byte	.LASF51
 3329 0baf 01       		.byte	0x1
 3330 0bb0 6201     		.2byte	0x162
 3331 0bb2 81000000 		.4byte	0x81
 3332 0bb6 04070000 		.4byte	.LLST51
 3333 0bba 15       		.uleb128 0x15
 3334 0bbb 5B040000 		.4byte	.LASF104
 3335 0bbf 01       		.byte	0x1
 3336 0bc0 6401     		.2byte	0x164
 3337 0bc2 81000000 		.4byte	0x81
 3338 0bc6 62070000 		.4byte	.LLST52
 3339 0bca 15       		.uleb128 0x15
ARM GAS  C:\Users\Mykola\AppData\Local\Temp\ccSL9DbN.s 			page 111


 3340 0bcb 07040000 		.4byte	.LASF105
 3341 0bcf 01       		.byte	0x1
 3342 0bd0 6501     		.2byte	0x165
 3343 0bd2 81000000 		.4byte	0x81
 3344 0bd6 80070000 		.4byte	.LLST53
 3345 0bda 15       		.uleb128 0x15
 3346 0bdb 410B0000 		.4byte	.LASF106
 3347 0bdf 01       		.byte	0x1
 3348 0be0 6601     		.2byte	0x166
 3349 0be2 76000000 		.4byte	0x76
 3350 0be6 D7070000 		.4byte	.LLST54
 3351 0bea 15       		.uleb128 0x15
 3352 0beb 8C040000 		.4byte	.LASF107
 3353 0bef 01       		.byte	0x1
 3354 0bf0 6701     		.2byte	0x167
 3355 0bf2 76000000 		.4byte	0x76
 3356 0bf6 F5070000 		.4byte	.LLST55
 3357 0bfa 21       		.uleb128 0x21
 3358 0bfb 9B030000 		.4byte	.LASF62
 3359 0bff 01       		.byte	0x1
 3360 0c00 6801     		.2byte	0x168
 3361 0c02 6B000000 		.4byte	0x6b
 3362 0c06 1A       		.uleb128 0x1a
 3363 0c07 060A0000 		.4byte	.LASF93
 3364 0c0b 01       		.byte	0x1
 3365 0c0c 6901     		.2byte	0x169
 3366 0c0e 6B000000 		.4byte	0x6b
 3367 0c12 02       		.uleb128 0x2
 3368 0c13 91       		.byte	0x91
 3369 0c14 64       		.sleb128 -28
 3370 0c15 0F       		.uleb128 0xf
 3371 0c16 2E000000 		.4byte	.LVL152
 3372 0c1a 4B0B0000 		.4byte	0xb4b
 3373 0c1e 290C0000 		.4byte	0xc29
 3374 0c22 10       		.uleb128 0x10
 3375 0c23 01       		.uleb128 0x1
 3376 0c24 50       		.byte	0x50
 3377 0c25 02       		.uleb128 0x2
 3378 0c26 77       		.byte	0x77
 3379 0c27 00       		.sleb128 0
 3380 0c28 00       		.byte	0
 3381 0c29 0F       		.uleb128 0xf
 3382 0c2a 3E000000 		.4byte	.LVL155
 3383 0c2e F1100000 		.4byte	0x10f1
 3384 0c32 3D0C0000 		.4byte	0xc3d
 3385 0c36 10       		.uleb128 0x10
 3386 0c37 01       		.uleb128 0x1
 3387 0c38 51       		.byte	0x51
 3388 0c39 02       		.uleb128 0x2
 3389 0c3a 74       		.byte	0x74
 3390 0c3b 00       		.sleb128 0
 3391 0c3c 00       		.byte	0
 3392 0c3d 12       		.uleb128 0x12
 3393 0c3e 82000000 		.4byte	.LVL160
 3394 0c42 C7020000 		.4byte	0x2c7
 3395 0c46 10       		.uleb128 0x10
 3396 0c47 01       		.uleb128 0x1
ARM GAS  C:\Users\Mykola\AppData\Local\Temp\ccSL9DbN.s 			page 112


 3397 0c48 50       		.byte	0x50
 3398 0c49 02       		.uleb128 0x2
 3399 0c4a 74       		.byte	0x74
 3400 0c4b 00       		.sleb128 0
 3401 0c4c 00       		.byte	0
 3402 0c4d 00       		.byte	0
 3403 0c4e 14       		.uleb128 0x14
 3404 0c4f 27010000 		.4byte	.LASF108
 3405 0c53 01       		.byte	0x1
 3406 0c54 2202     		.2byte	0x222
 3407 0c56 00000000 		.4byte	.LFB40
 3408 0c5a 10000000 		.4byte	.LFE40-.LFB40
 3409 0c5e 01       		.uleb128 0x1
 3410 0c5f 9C       		.byte	0x9c
 3411 0c60 990C0000 		.4byte	0xc99
 3412 0c64 17       		.uleb128 0x17
 3413 0c65 EB040000 		.4byte	.LASF51
 3414 0c69 01       		.byte	0x1
 3415 0c6a 2202     		.2byte	0x222
 3416 0c6c 81000000 		.4byte	0x81
 3417 0c70 1E080000 		.4byte	.LLST56
 3418 0c74 0F       		.uleb128 0xf
 3419 0c75 08000000 		.4byte	.LVL177
 3420 0c79 17110000 		.4byte	0x1117
 3421 0c7d 880C0000 		.4byte	0xc88
 3422 0c81 10       		.uleb128 0x10
 3423 0c82 01       		.uleb128 0x1
 3424 0c83 50       		.byte	0x50
 3425 0c84 02       		.uleb128 0x2
 3426 0c85 74       		.byte	0x74
 3427 0c86 00       		.sleb128 0
 3428 0c87 00       		.byte	0
 3429 0c88 12       		.uleb128 0x12
 3430 0c89 0E000000 		.4byte	.LVL178
 3431 0c8d 940B0000 		.4byte	0xb94
 3432 0c91 10       		.uleb128 0x10
 3433 0c92 01       		.uleb128 0x1
 3434 0c93 50       		.byte	0x50
 3435 0c94 02       		.uleb128 0x2
 3436 0c95 74       		.byte	0x74
 3437 0c96 00       		.sleb128 0
 3438 0c97 00       		.byte	0
 3439 0c98 00       		.byte	0
 3440 0c99 14       		.uleb128 0x14
 3441 0c9a A1010000 		.4byte	.LASF109
 3442 0c9e 01       		.byte	0x1
 3443 0c9f 5802     		.2byte	0x258
 3444 0ca1 00000000 		.4byte	.LFB41
 3445 0ca5 24000000 		.4byte	.LFE41-.LFB41
 3446 0ca9 01       		.uleb128 0x1
 3447 0caa 9C       		.byte	0x9c
 3448 0cab F20C0000 		.4byte	0xcf2
 3449 0caf 13       		.uleb128 0x13
 3450 0cb0 6900     		.ascii	"i\000"
 3451 0cb2 01       		.byte	0x1
 3452 0cb3 5A02     		.2byte	0x25a
 3453 0cb5 81000000 		.4byte	0x81
ARM GAS  C:\Users\Mykola\AppData\Local\Temp\ccSL9DbN.s 			page 113


 3454 0cb9 4A080000 		.4byte	.LLST57
 3455 0cbd 15       		.uleb128 0x15
 3456 0cbe A7000000 		.4byte	.LASF54
 3457 0cc2 01       		.byte	0x1
 3458 0cc3 5B02     		.2byte	0x25b
 3459 0cc5 81000000 		.4byte	0x81
 3460 0cc9 69080000 		.4byte	.LLST58
 3461 0ccd 0F       		.uleb128 0xf
 3462 0cce 0E000000 		.4byte	.LVL182
 3463 0cd2 BC100000 		.4byte	0x10bc
 3464 0cd6 E10C0000 		.4byte	0xce1
 3465 0cda 10       		.uleb128 0x10
 3466 0cdb 01       		.uleb128 0x1
 3467 0cdc 51       		.byte	0x51
 3468 0cdd 02       		.uleb128 0x2
 3469 0cde 74       		.byte	0x74
 3470 0cdf 00       		.sleb128 0
 3471 0ce0 00       		.byte	0
 3472 0ce1 12       		.uleb128 0x12
 3473 0ce2 18000000 		.4byte	.LVL184
 3474 0ce6 4E0C0000 		.4byte	0xc4e
 3475 0cea 10       		.uleb128 0x10
 3476 0ceb 01       		.uleb128 0x1
 3477 0cec 50       		.byte	0x50
 3478 0ced 02       		.uleb128 0x2
 3479 0cee 74       		.byte	0x74
 3480 0cef 00       		.sleb128 0
 3481 0cf0 00       		.byte	0
 3482 0cf1 00       		.byte	0
 3483 0cf2 14       		.uleb128 0x14
 3484 0cf3 AB090000 		.4byte	.LASF110
 3485 0cf7 01       		.byte	0x1
 3486 0cf8 8502     		.2byte	0x285
 3487 0cfa 00000000 		.4byte	.LFB42
 3488 0cfe 24000000 		.4byte	.LFE42-.LFB42
 3489 0d02 01       		.uleb128 0x1
 3490 0d03 9C       		.byte	0x9c
 3491 0d04 820D0000 		.4byte	0xd82
 3492 0d08 17       		.uleb128 0x17
 3493 0d09 9B030000 		.4byte	.LASF62
 3494 0d0d 01       		.byte	0x1
 3495 0d0e 8502     		.2byte	0x285
 3496 0d10 81000000 		.4byte	0x81
 3497 0d14 7C080000 		.4byte	.LLST59
 3498 0d18 19       		.uleb128 0x19
 3499 0d19 9C040000 		.4byte	.LASF111
 3500 0d1d 01       		.byte	0x1
 3501 0d1e 8702     		.2byte	0x287
 3502 0d20 81000000 		.4byte	0x81
 3503 0d24 05       		.byte	0x5
 3504 0d25 19       		.uleb128 0x19
 3505 0d26 5F080000 		.4byte	.LASF112
 3506 0d2a 01       		.byte	0x1
 3507 0d2b 8802     		.2byte	0x288
 3508 0d2d 81000000 		.4byte	0x81
 3509 0d31 00       		.byte	0
 3510 0d32 19       		.uleb128 0x19
ARM GAS  C:\Users\Mykola\AppData\Local\Temp\ccSL9DbN.s 			page 114


 3511 0d33 AB070000 		.4byte	.LASF113
 3512 0d37 01       		.byte	0x1
 3513 0d38 8902     		.2byte	0x289
 3514 0d3a 81000000 		.4byte	0x81
 3515 0d3e 05       		.byte	0x5
 3516 0d3f 13       		.uleb128 0x13
 3517 0d40 6900     		.ascii	"i\000"
 3518 0d42 01       		.byte	0x1
 3519 0d43 8A02     		.2byte	0x28a
 3520 0d45 81000000 		.4byte	0x81
 3521 0d49 9D080000 		.4byte	.LLST60
 3522 0d4d 15       		.uleb128 0x15
 3523 0d4e A7000000 		.4byte	.LASF54
 3524 0d52 01       		.byte	0x1
 3525 0d53 8B02     		.2byte	0x28b
 3526 0d55 81000000 		.4byte	0x81
 3527 0d59 BC080000 		.4byte	.LLST61
 3528 0d5d 0F       		.uleb128 0xf
 3529 0d5e 0E000000 		.4byte	.LVL190
 3530 0d62 BC100000 		.4byte	0x10bc
 3531 0d66 710D0000 		.4byte	0xd71
 3532 0d6a 10       		.uleb128 0x10
 3533 0d6b 01       		.uleb128 0x1
 3534 0d6c 51       		.byte	0x51
 3535 0d6d 02       		.uleb128 0x2
 3536 0d6e 74       		.byte	0x74
 3537 0d6f 00       		.sleb128 0
 3538 0d70 00       		.byte	0
 3539 0d71 12       		.uleb128 0x12
 3540 0d72 18000000 		.4byte	.LVL192
 3541 0d76 4E0C0000 		.4byte	0xc4e
 3542 0d7a 10       		.uleb128 0x10
 3543 0d7b 01       		.uleb128 0x1
 3544 0d7c 50       		.byte	0x50
 3545 0d7d 02       		.uleb128 0x2
 3546 0d7e 74       		.byte	0x74
 3547 0d7f 00       		.sleb128 0
 3548 0d80 00       		.byte	0
 3549 0d81 00       		.byte	0
 3550 0d82 16       		.uleb128 0x16
 3551 0d83 02050000 		.4byte	.LASF114
 3552 0d87 01       		.byte	0x1
 3553 0d88 D406     		.2byte	0x6d4
 3554 0d8a 76000000 		.4byte	0x76
 3555 0d8e 00000000 		.4byte	.LFB64
 3556 0d92 7C000000 		.4byte	.LFE64-.LFB64
 3557 0d96 01       		.uleb128 0x1
 3558 0d97 9C       		.byte	0x9c
 3559 0d98 540E0000 		.4byte	0xe54
 3560 0d9c 17       		.uleb128 0x17
 3561 0d9d 9B030000 		.4byte	.LASF62
 3562 0da1 01       		.byte	0x1
 3563 0da2 D406     		.2byte	0x6d4
 3564 0da4 81000000 		.4byte	0x81
 3565 0da8 CF080000 		.4byte	.LLST62
 3566 0dac 15       		.uleb128 0x15
 3567 0dad 9E000000 		.4byte	.LASF115
ARM GAS  C:\Users\Mykola\AppData\Local\Temp\ccSL9DbN.s 			page 115


 3568 0db1 01       		.byte	0x1
 3569 0db2 DB06     		.2byte	0x6db
 3570 0db4 6B000000 		.4byte	0x6b
 3571 0db8 14090000 		.4byte	.LLST63
 3572 0dbc 15       		.uleb128 0x15
 3573 0dbd F6060000 		.4byte	.LASF116
 3574 0dc1 01       		.byte	0x1
 3575 0dc2 DC06     		.2byte	0x6dc
 3576 0dc4 6B000000 		.4byte	0x6b
 3577 0dc8 4C090000 		.4byte	.LLST64
 3578 0dcc 19       		.uleb128 0x19
 3579 0dcd 1E030000 		.4byte	.LASF117
 3580 0dd1 01       		.byte	0x1
 3581 0dd2 DD06     		.2byte	0x6dd
 3582 0dd4 6B000000 		.4byte	0x6b
 3583 0dd8 08       		.byte	0x8
 3584 0dd9 15       		.uleb128 0x15
 3585 0dda A3090000 		.4byte	.LASF88
 3586 0dde 01       		.byte	0x1
 3587 0ddf E706     		.2byte	0x6e7
 3588 0de1 6B000000 		.4byte	0x6b
 3589 0de5 6A090000 		.4byte	.LLST65
 3590 0de9 15       		.uleb128 0x15
 3591 0dea BD0B0000 		.4byte	.LASF97
 3592 0dee 01       		.byte	0x1
 3593 0def E806     		.2byte	0x6e8
 3594 0df1 76000000 		.4byte	0x76
 3595 0df5 88090000 		.4byte	.LLST66
 3596 0df9 19       		.uleb128 0x19
 3597 0dfa 0C040000 		.4byte	.LASF86
 3598 0dfe 01       		.byte	0x1
 3599 0dff E906     		.2byte	0x6e9
 3600 0e01 6B000000 		.4byte	0x6b
 3601 0e05 00       		.byte	0
 3602 0e06 19       		.uleb128 0x19
 3603 0e07 09030000 		.4byte	.LASF87
 3604 0e0b 01       		.byte	0x1
 3605 0e0c EA06     		.2byte	0x6ea
 3606 0e0e 6B000000 		.4byte	0x6b
 3607 0e12 05       		.byte	0x5
 3608 0e13 0F       		.uleb128 0xf
 3609 0e14 18000000 		.4byte	.LVL198
 3610 0e18 F1080000 		.4byte	0x8f1
 3611 0e1c 2B0E0000 		.4byte	0xe2b
 3612 0e20 10       		.uleb128 0x10
 3613 0e21 01       		.uleb128 0x1
 3614 0e22 51       		.byte	0x51
 3615 0e23 01       		.uleb128 0x1
 3616 0e24 35       		.byte	0x35
 3617 0e25 10       		.uleb128 0x10
 3618 0e26 01       		.uleb128 0x1
 3619 0e27 50       		.byte	0x50
 3620 0e28 01       		.uleb128 0x1
 3621 0e29 30       		.byte	0x30
 3622 0e2a 00       		.byte	0
 3623 0e2b 0F       		.uleb128 0xf
 3624 0e2c 2E000000 		.4byte	.LVL199
ARM GAS  C:\Users\Mykola\AppData\Local\Temp\ccSL9DbN.s 			page 116


 3625 0e30 76090000 		.4byte	0x976
 3626 0e34 4A0E0000 		.4byte	0xe4a
 3627 0e38 10       		.uleb128 0x10
 3628 0e39 01       		.uleb128 0x1
 3629 0e3a 53       		.byte	0x53
 3630 0e3b 03       		.uleb128 0x3
 3631 0e3c 0A       		.byte	0xa
 3632 0e3d 0019     		.2byte	0x1900
 3633 0e3f 10       		.uleb128 0x10
 3634 0e40 01       		.uleb128 0x1
 3635 0e41 52       		.byte	0x52
 3636 0e42 01       		.uleb128 0x1
 3637 0e43 35       		.byte	0x35
 3638 0e44 10       		.uleb128 0x10
 3639 0e45 01       		.uleb128 0x1
 3640 0e46 51       		.byte	0x51
 3641 0e47 01       		.uleb128 0x1
 3642 0e48 30       		.byte	0x30
 3643 0e49 00       		.byte	0
 3644 0e4a 11       		.uleb128 0x11
 3645 0e4b 58000000 		.4byte	.LVL206
 3646 0e4f 4B0B0000 		.4byte	0xb4b
 3647 0e53 00       		.byte	0
 3648 0e54 16       		.uleb128 0x16
 3649 0e55 D2090000 		.4byte	.LASF118
 3650 0e59 01       		.byte	0x1
 3651 0e5a AD0A     		.2byte	0xaad
 3652 0e5c 81000000 		.4byte	0x81
 3653 0e60 00000000 		.4byte	.LFB68
 3654 0e64 0C000000 		.4byte	.LFE68-.LFB68
 3655 0e68 01       		.uleb128 0x1
 3656 0e69 9C       		.byte	0x9c
 3657 0e6a 7F0E0000 		.4byte	0xe7f
 3658 0e6e 17       		.uleb128 0x17
 3659 0e6f EB040000 		.4byte	.LASF51
 3660 0e73 01       		.byte	0x1
 3661 0e74 AD0A     		.2byte	0xaad
 3662 0e76 81000000 		.4byte	0x81
 3663 0e7a BE090000 		.4byte	.LLST67
 3664 0e7e 00       		.byte	0
 3665 0e7f 16       		.uleb128 0x16
 3666 0e80 4E070000 		.4byte	.LASF119
 3667 0e84 01       		.byte	0x1
 3668 0e85 C70A     		.2byte	0xac7
 3669 0e87 6B000000 		.4byte	0x6b
 3670 0e8b 00000000 		.4byte	.LFB69
 3671 0e8f 0C000000 		.4byte	.LFE69-.LFB69
 3672 0e93 01       		.uleb128 0x1
 3673 0e94 9C       		.byte	0x9c
 3674 0e95 AA0E0000 		.4byte	0xeaa
 3675 0e99 17       		.uleb128 0x17
 3676 0e9a EB040000 		.4byte	.LASF51
 3677 0e9e 01       		.byte	0x1
 3678 0e9f C70A     		.2byte	0xac7
 3679 0ea1 81000000 		.4byte	0x81
 3680 0ea5 DF090000 		.4byte	.LLST68
 3681 0ea9 00       		.byte	0
ARM GAS  C:\Users\Mykola\AppData\Local\Temp\ccSL9DbN.s 			page 117


 3682 0eaa 16       		.uleb128 0x16
 3683 0eab A2030000 		.4byte	.LASF120
 3684 0eaf 01       		.byte	0x1
 3685 0eb0 E10A     		.2byte	0xae1
 3686 0eb2 6B000000 		.4byte	0x6b
 3687 0eb6 00000000 		.4byte	.LFB70
 3688 0eba 0C000000 		.4byte	.LFE70-.LFB70
 3689 0ebe 01       		.uleb128 0x1
 3690 0ebf 9C       		.byte	0x9c
 3691 0ec0 D50E0000 		.4byte	0xed5
 3692 0ec4 17       		.uleb128 0x17
 3693 0ec5 9B030000 		.4byte	.LASF62
 3694 0ec9 01       		.byte	0x1
 3695 0eca E10A     		.2byte	0xae1
 3696 0ecc 81000000 		.4byte	0x81
 3697 0ed0 000A0000 		.4byte	.LLST69
 3698 0ed4 00       		.byte	0
 3699 0ed5 22       		.uleb128 0x22
 3700 0ed6 E9030000 		.4byte	.LASF121
 3701 0eda 01       		.byte	0x1
 3702 0edb FB0A     		.2byte	0xafb
 3703 0edd 00000000 		.4byte	.LFB71
 3704 0ee1 0C000000 		.4byte	.LFE71-.LFB71
 3705 0ee5 01       		.uleb128 0x1
 3706 0ee6 9C       		.byte	0x9c
 3707 0ee7 22       		.uleb128 0x22
 3708 0ee8 D0060000 		.4byte	.LASF122
 3709 0eec 01       		.byte	0x1
 3710 0eed 140B     		.2byte	0xb14
 3711 0eef 00000000 		.4byte	.LFB72
 3712 0ef3 0C000000 		.4byte	.LFE72-.LFB72
 3713 0ef7 01       		.uleb128 0x1
 3714 0ef8 9C       		.byte	0x9c
 3715 0ef9 1B       		.uleb128 0x1b
 3716 0efa 76000000 		.4byte	0x76
 3717 0efe 090F0000 		.4byte	0xf09
 3718 0f02 1C       		.uleb128 0x1c
 3719 0f03 B7000000 		.4byte	0xb7
 3720 0f07 00       		.byte	0
 3721 0f08 00       		.byte	0
 3722 0f09 23       		.uleb128 0x23
 3723 0f0a B7030000 		.4byte	.LASF123
 3724 0f0e 01       		.byte	0x1
 3725 0f0f 5D       		.byte	0x5d
 3726 0f10 170F0000 		.4byte	0xf17
 3727 0f14 02       		.byte	0x2
 3728 0f15 00       		.byte	0
 3729 0f16 19       		.byte	0x19
 3730 0f17 09       		.uleb128 0x9
 3731 0f18 F90E0000 		.4byte	0xef9
 3732 0f1c 23       		.uleb128 0x23
 3733 0f1d D50A0000 		.4byte	.LASF124
 3734 0f21 01       		.byte	0x1
 3735 0f22 61       		.byte	0x61
 3736 0f23 290F0000 		.4byte	0xf29
 3737 0f27 01       		.byte	0x1
 3738 0f28 08       		.byte	0x8
ARM GAS  C:\Users\Mykola\AppData\Local\Temp\ccSL9DbN.s 			page 118


 3739 0f29 09       		.uleb128 0x9
 3740 0f2a 7E070000 		.4byte	0x77e
 3741 0f2e 24       		.uleb128 0x24
 3742 0f2f 6E090000 		.4byte	.LASF125
 3743 0f33 01       		.byte	0x1
 3744 0f34 65       		.byte	0x65
 3745 0f35 510A0000 		.4byte	0xa51
 3746 0f39 05       		.uleb128 0x5
 3747 0f3a 03       		.byte	0x3
 3748 0f3b 0C000000 		.4byte	capsense_posFiltersData
 3749 0f3f 1B       		.uleb128 0x1b
 3750 0f40 76000000 		.4byte	0x76
 3751 0f44 4F0F0000 		.4byte	0xf4f
 3752 0f48 1C       		.uleb128 0x1c
 3753 0f49 B7000000 		.4byte	0xb7
 3754 0f4d 04       		.byte	0x4
 3755 0f4e 00       		.byte	0
 3756 0f4f 25       		.uleb128 0x25
 3757 0f50 1F050000 		.4byte	.LASF126
 3758 0f54 01       		.byte	0x1
 3759 0f55 2C       		.byte	0x2c
 3760 0f56 3F0F0000 		.4byte	0xf3f
 3761 0f5a 25       		.uleb128 0x25
 3762 0f5b 490B0000 		.4byte	.LASF127
 3763 0f5f 01       		.byte	0x1
 3764 0f60 2D       		.byte	0x2d
 3765 0f61 7E070000 		.4byte	0x77e
 3766 0f65 1B       		.uleb128 0x1b
 3767 0f66 6B000000 		.4byte	0x6b
 3768 0f6a 750F0000 		.4byte	0xf75
 3769 0f6e 1C       		.uleb128 0x1c
 3770 0f6f B7000000 		.4byte	0xb7
 3771 0f73 04       		.byte	0x4
 3772 0f74 00       		.byte	0
 3773 0f75 25       		.uleb128 0x25
 3774 0f76 150A0000 		.4byte	.LASF128
 3775 0f7a 01       		.byte	0x1
 3776 0f7b 2E       		.byte	0x2e
 3777 0f7c 800F0000 		.4byte	0xf80
 3778 0f80 09       		.uleb128 0x9
 3779 0f81 650F0000 		.4byte	0xf65
 3780 0f85 26       		.uleb128 0x26
 3781 0f86 D3040000 		.4byte	.LASF129
 3782 0f8a 01       		.byte	0x1
 3783 0f8b 34       		.byte	0x34
 3784 0f8c 3F0F0000 		.4byte	0xf3f
 3785 0f90 05       		.uleb128 0x5
 3786 0f91 03       		.byte	0x3
 3787 0f92 00000000 		.4byte	capsense_sensorBaseline
 3788 0f96 26       		.uleb128 0x26
 3789 0f97 700B0000 		.4byte	.LASF130
 3790 0f9b 01       		.byte	0x1
 3791 0f9c 35       		.byte	0x35
 3792 0f9d 650F0000 		.4byte	0xf65
 3793 0fa1 05       		.uleb128 0x5
 3794 0fa2 03       		.byte	0x3
 3795 0fa3 00000000 		.4byte	capsense_sensorBaselineLow
ARM GAS  C:\Users\Mykola\AppData\Local\Temp\ccSL9DbN.s 			page 119


 3796 0fa7 26       		.uleb128 0x26
 3797 0fa8 6B080000 		.4byte	.LASF131
 3798 0fac 01       		.byte	0x1
 3799 0fad 36       		.byte	0x36
 3800 0fae 650F0000 		.4byte	0xf65
 3801 0fb2 05       		.uleb128 0x5
 3802 0fb3 03       		.byte	0x3
 3803 0fb4 00000000 		.4byte	capsense_sensorSignal
 3804 0fb8 26       		.uleb128 0x26
 3805 0fb9 CD030000 		.4byte	.LASF132
 3806 0fbd 01       		.byte	0x1
 3807 0fbe 37       		.byte	0x37
 3808 0fbf 7E070000 		.4byte	0x77e
 3809 0fc3 05       		.uleb128 0x5
 3810 0fc4 03       		.byte	0x3
 3811 0fc5 00000000 		.4byte	capsense_sensorOnMask
 3812 0fc9 26       		.uleb128 0x26
 3813 0fca 81000000 		.4byte	.LASF133
 3814 0fce 01       		.byte	0x1
 3815 0fcf 39       		.byte	0x39
 3816 0fd0 650F0000 		.4byte	0xf65
 3817 0fd4 05       		.uleb128 0x5
 3818 0fd5 03       		.byte	0x3
 3819 0fd6 00000000 		.4byte	capsense_lowBaselineResetCnt
 3820 0fda 26       		.uleb128 0x26
 3821 0fdb 13040000 		.4byte	.LASF134
 3822 0fdf 01       		.byte	0x1
 3823 0fe0 3A       		.byte	0x3a
 3824 0fe1 650F0000 		.4byte	0xf65
 3825 0fe5 05       		.uleb128 0x5
 3826 0fe6 03       		.byte	0x3
 3827 0fe7 00000000 		.4byte	capsense_lowBaselineReset
 3828 0feb 26       		.uleb128 0x26
 3829 0fec 35070000 		.4byte	.LASF135
 3830 0ff0 01       		.byte	0x1
 3831 0ff1 49       		.byte	0x49
 3832 0ff2 7E070000 		.4byte	0x77e
 3833 0ff6 05       		.uleb128 0x5
 3834 0ff7 03       		.byte	0x3
 3835 0ff8 00000000 		.4byte	capsense_fingerThreshold
 3836 0ffc 26       		.uleb128 0x26
 3837 0ffd D7050000 		.4byte	.LASF136
 3838 1001 01       		.byte	0x1
 3839 1002 4B       		.byte	0x4b
 3840 1003 7E070000 		.4byte	0x77e
 3841 1007 05       		.uleb128 0x5
 3842 1008 03       		.byte	0x3
 3843 1009 00000000 		.4byte	capsense_noiseThreshold
 3844 100d 26       		.uleb128 0x26
 3845 100e 2D020000 		.4byte	.LASF137
 3846 1012 01       		.byte	0x1
 3847 1013 4D       		.byte	0x4d
 3848 1014 7E070000 		.4byte	0x77e
 3849 1018 05       		.uleb128 0x5
 3850 1019 03       		.byte	0x3
 3851 101a 00000000 		.4byte	capsense_negativeNoiseThreshold
 3852 101e 26       		.uleb128 0x26
ARM GAS  C:\Users\Mykola\AppData\Local\Temp\ccSL9DbN.s 			page 120


 3853 101f BF040000 		.4byte	.LASF138
 3854 1023 01       		.byte	0x1
 3855 1024 4F       		.byte	0x4f
 3856 1025 7E070000 		.4byte	0x77e
 3857 1029 05       		.uleb128 0x5
 3858 102a 03       		.byte	0x3
 3859 102b 00000000 		.4byte	capsense_hysteresis
 3860 102f 26       		.uleb128 0x26
 3861 1030 46090000 		.4byte	.LASF139
 3862 1034 01       		.byte	0x1
 3863 1035 51       		.byte	0x51
 3864 1036 7E070000 		.4byte	0x77e
 3865 103a 05       		.uleb128 0x5
 3866 103b 03       		.byte	0x3
 3867 103c 00000000 		.4byte	capsense_debounce
 3868 1040 26       		.uleb128 0x26
 3869 1041 81080000 		.4byte	.LASF140
 3870 1045 01       		.byte	0x1
 3871 1046 55       		.byte	0x55
 3872 1047 51100000 		.4byte	0x1051
 3873 104b 05       		.uleb128 0x5
 3874 104c 03       		.byte	0x3
 3875 104d 00000000 		.4byte	capsense_rawDataIndex
 3876 1051 09       		.uleb128 0x9
 3877 1052 7E070000 		.4byte	0x77e
 3878 1056 26       		.uleb128 0x26
 3879 1057 0C080000 		.4byte	.LASF141
 3880 105b 01       		.byte	0x1
 3881 105c 59       		.byte	0x59
 3882 105d 67100000 		.4byte	0x1067
 3883 1061 05       		.uleb128 0x5
 3884 1062 03       		.byte	0x3
 3885 1063 00000000 		.4byte	capsense_numberOfSensors
 3886 1067 09       		.uleb128 0x9
 3887 1068 7E070000 		.4byte	0x77e
 3888 106c 26       		.uleb128 0x26
 3889 106d 47080000 		.4byte	.LASF142
 3890 1071 01       		.byte	0x1
 3891 1072 27       		.byte	0x27
 3892 1073 3F0F0000 		.4byte	0xf3f
 3893 1077 05       		.uleb128 0x5
 3894 1078 03       		.byte	0x3
 3895 1079 00000000 		.4byte	capsense_rawFilterData1
 3896 107d 25       		.uleb128 0x25
 3897 107e 7C040000 		.4byte	.LASF143
 3898 1082 01       		.byte	0x1
 3899 1083 41       		.byte	0x41
 3900 1084 BC020000 		.4byte	0x2bc
 3901 1088 26       		.uleb128 0x26
 3902 1089 EF050000 		.4byte	.LASF144
 3903 108d 01       		.byte	0x1
 3904 108e 45       		.byte	0x45
 3905 108f 6B000000 		.4byte	0x6b
 3906 1093 05       		.uleb128 0x5
 3907 1094 03       		.byte	0x3
 3908 1095 00000000 		.4byte	capsense_enableRawFilters
 3909 1099 27       		.uleb128 0x27
ARM GAS  C:\Users\Mykola\AppData\Local\Temp\ccSL9DbN.s 			page 121


 3910 109a 32050000 		.4byte	.LASF145
 3911 109e 04       		.byte	0x4
 3912 109f A0       		.byte	0xa0
 3913 10a0 AA100000 		.4byte	0x10aa
 3914 10a4 0B       		.uleb128 0xb
 3915 10a5 81000000 		.4byte	0x81
 3916 10a9 00       		.byte	0
 3917 10aa 28       		.uleb128 0x28
 3918 10ab 8C060000 		.4byte	.LASF151
 3919 10af 04       		.byte	0x4
 3920 10b0 9F       		.byte	0x9f
 3921 10b1 81000000 		.4byte	0x81
 3922 10b5 29       		.uleb128 0x29
 3923 10b6 ED0A0000 		.4byte	.LASF152
 3924 10ba 04       		.byte	0x4
 3925 10bb A2       		.byte	0xa2
 3926 10bc 2A       		.uleb128 0x2a
 3927 10bd E8020000 		.4byte	.LASF153
 3928 10c1 03       		.byte	0x3
 3929 10c2 6A       		.byte	0x6a
 3930 10c3 81000000 		.4byte	0x81
 3931 10c7 D6100000 		.4byte	0x10d6
 3932 10cb 0B       		.uleb128 0xb
 3933 10cc E3010000 		.4byte	0x1e3
 3934 10d0 0B       		.uleb128 0xb
 3935 10d1 81000000 		.4byte	0x81
 3936 10d5 00       		.byte	0
 3937 10d6 27       		.uleb128 0x27
 3938 10d7 0C010000 		.4byte	.LASF146
 3939 10db 03       		.byte	0x3
 3940 10dc 6B       		.byte	0x6b
 3941 10dd F1100000 		.4byte	0x10f1
 3942 10e1 0B       		.uleb128 0xb
 3943 10e2 DD010000 		.4byte	0x1dd
 3944 10e6 0B       		.uleb128 0xb
 3945 10e7 81000000 		.4byte	0x81
 3946 10eb 0B       		.uleb128 0xb
 3947 10ec 81000000 		.4byte	0x81
 3948 10f0 00       		.byte	0
 3949 10f1 27       		.uleb128 0x27
 3950 10f2 95020000 		.4byte	.LASF147
 3951 10f6 03       		.byte	0x3
 3952 10f7 81       		.byte	0x81
 3953 10f8 0C110000 		.4byte	0x110c
 3954 10fc 0B       		.uleb128 0xb
 3955 10fd BE000000 		.4byte	0xbe
 3956 1101 0B       		.uleb128 0xb
 3957 1102 E9010000 		.4byte	0x1e9
 3958 1106 0B       		.uleb128 0xb
 3959 1107 0C110000 		.4byte	0x110c
 3960 110b 00       		.byte	0
 3961 110c 08       		.uleb128 0x8
 3962 110d 04       		.byte	0x4
 3963 110e 12110000 		.4byte	0x1112
 3964 1112 09       		.uleb128 0x9
 3965 1113 76000000 		.4byte	0x76
 3966 1117 2B       		.uleb128 0x2b
ARM GAS  C:\Users\Mykola\AppData\Local\Temp\ccSL9DbN.s 			page 122


 3967 1118 C1010000 		.4byte	.LASF154
 3968 111c 01       		.byte	0x1
 3969 111d 17       		.byte	0x17
 3970 111e 0B       		.uleb128 0xb
 3971 111f 81000000 		.4byte	0x81
 3972 1123 00       		.byte	0
 3973 1124 00       		.byte	0
 3974              		.section	.debug_abbrev,"",%progbits
 3975              	.Ldebug_abbrev0:
 3976 0000 01       		.uleb128 0x1
 3977 0001 11       		.uleb128 0x11
 3978 0002 01       		.byte	0x1
 3979 0003 25       		.uleb128 0x25
 3980 0004 0E       		.uleb128 0xe
 3981 0005 13       		.uleb128 0x13
 3982 0006 0B       		.uleb128 0xb
 3983 0007 03       		.uleb128 0x3
 3984 0008 0E       		.uleb128 0xe
 3985 0009 1B       		.uleb128 0x1b
 3986 000a 0E       		.uleb128 0xe
 3987 000b 55       		.uleb128 0x55
 3988 000c 17       		.uleb128 0x17
 3989 000d 11       		.uleb128 0x11
 3990 000e 01       		.uleb128 0x1
 3991 000f 10       		.uleb128 0x10
 3992 0010 17       		.uleb128 0x17
 3993 0011 00       		.byte	0
 3994 0012 00       		.byte	0
 3995 0013 02       		.uleb128 0x2
 3996 0014 24       		.uleb128 0x24
 3997 0015 00       		.byte	0
 3998 0016 0B       		.uleb128 0xb
 3999 0017 0B       		.uleb128 0xb
 4000 0018 3E       		.uleb128 0x3e
 4001 0019 0B       		.uleb128 0xb
 4002 001a 03       		.uleb128 0x3
 4003 001b 0E       		.uleb128 0xe
 4004 001c 00       		.byte	0
 4005 001d 00       		.byte	0
 4006 001e 03       		.uleb128 0x3
 4007 001f 24       		.uleb128 0x24
 4008 0020 00       		.byte	0
 4009 0021 0B       		.uleb128 0xb
 4010 0022 0B       		.uleb128 0xb
 4011 0023 3E       		.uleb128 0x3e
 4012 0024 0B       		.uleb128 0xb
 4013 0025 03       		.uleb128 0x3
 4014 0026 08       		.uleb128 0x8
 4015 0027 00       		.byte	0
 4016 0028 00       		.byte	0
 4017 0029 04       		.uleb128 0x4
 4018 002a 16       		.uleb128 0x16
 4019 002b 00       		.byte	0
 4020 002c 03       		.uleb128 0x3
 4021 002d 0E       		.uleb128 0xe
 4022 002e 3A       		.uleb128 0x3a
 4023 002f 0B       		.uleb128 0xb
ARM GAS  C:\Users\Mykola\AppData\Local\Temp\ccSL9DbN.s 			page 123


 4024 0030 3B       		.uleb128 0x3b
 4025 0031 0B       		.uleb128 0xb
 4026 0032 49       		.uleb128 0x49
 4027 0033 13       		.uleb128 0x13
 4028 0034 00       		.byte	0
 4029 0035 00       		.byte	0
 4030 0036 05       		.uleb128 0x5
 4031 0037 0F       		.uleb128 0xf
 4032 0038 00       		.byte	0
 4033 0039 0B       		.uleb128 0xb
 4034 003a 0B       		.uleb128 0xb
 4035 003b 00       		.byte	0
 4036 003c 00       		.byte	0
 4037 003d 06       		.uleb128 0x6
 4038 003e 13       		.uleb128 0x13
 4039 003f 01       		.byte	0x1
 4040 0040 0B       		.uleb128 0xb
 4041 0041 0B       		.uleb128 0xb
 4042 0042 3A       		.uleb128 0x3a
 4043 0043 0B       		.uleb128 0xb
 4044 0044 3B       		.uleb128 0x3b
 4045 0045 0B       		.uleb128 0xb
 4046 0046 01       		.uleb128 0x1
 4047 0047 13       		.uleb128 0x13
 4048 0048 00       		.byte	0
 4049 0049 00       		.byte	0
 4050 004a 07       		.uleb128 0x7
 4051 004b 0D       		.uleb128 0xd
 4052 004c 00       		.byte	0
 4053 004d 03       		.uleb128 0x3
 4054 004e 0E       		.uleb128 0xe
 4055 004f 3A       		.uleb128 0x3a
 4056 0050 0B       		.uleb128 0xb
 4057 0051 3B       		.uleb128 0x3b
 4058 0052 0B       		.uleb128 0xb
 4059 0053 49       		.uleb128 0x49
 4060 0054 13       		.uleb128 0x13
 4061 0055 38       		.uleb128 0x38
 4062 0056 0B       		.uleb128 0xb
 4063 0057 00       		.byte	0
 4064 0058 00       		.byte	0
 4065 0059 08       		.uleb128 0x8
 4066 005a 0F       		.uleb128 0xf
 4067 005b 00       		.byte	0
 4068 005c 0B       		.uleb128 0xb
 4069 005d 0B       		.uleb128 0xb
 4070 005e 49       		.uleb128 0x49
 4071 005f 13       		.uleb128 0x13
 4072 0060 00       		.byte	0
 4073 0061 00       		.byte	0
 4074 0062 09       		.uleb128 0x9
 4075 0063 26       		.uleb128 0x26
 4076 0064 00       		.byte	0
 4077 0065 49       		.uleb128 0x49
 4078 0066 13       		.uleb128 0x13
 4079 0067 00       		.byte	0
 4080 0068 00       		.byte	0
ARM GAS  C:\Users\Mykola\AppData\Local\Temp\ccSL9DbN.s 			page 124


 4081 0069 0A       		.uleb128 0xa
 4082 006a 15       		.uleb128 0x15
 4083 006b 01       		.byte	0x1
 4084 006c 27       		.uleb128 0x27
 4085 006d 19       		.uleb128 0x19
 4086 006e 49       		.uleb128 0x49
 4087 006f 13       		.uleb128 0x13
 4088 0070 01       		.uleb128 0x1
 4089 0071 13       		.uleb128 0x13
 4090 0072 00       		.byte	0
 4091 0073 00       		.byte	0
 4092 0074 0B       		.uleb128 0xb
 4093 0075 05       		.uleb128 0x5
 4094 0076 00       		.byte	0
 4095 0077 49       		.uleb128 0x49
 4096 0078 13       		.uleb128 0x13
 4097 0079 00       		.byte	0
 4098 007a 00       		.byte	0
 4099 007b 0C       		.uleb128 0xc
 4100 007c 15       		.uleb128 0x15
 4101 007d 01       		.byte	0x1
 4102 007e 27       		.uleb128 0x27
 4103 007f 19       		.uleb128 0x19
 4104 0080 01       		.uleb128 0x1
 4105 0081 13       		.uleb128 0x13
 4106 0082 00       		.byte	0
 4107 0083 00       		.byte	0
 4108 0084 0D       		.uleb128 0xd
 4109 0085 2E       		.uleb128 0x2e
 4110 0086 01       		.byte	0x1
 4111 0087 3F       		.uleb128 0x3f
 4112 0088 19       		.uleb128 0x19
 4113 0089 03       		.uleb128 0x3
 4114 008a 0E       		.uleb128 0xe
 4115 008b 3A       		.uleb128 0x3a
 4116 008c 0B       		.uleb128 0xb
 4117 008d 3B       		.uleb128 0x3b
 4118 008e 0B       		.uleb128 0xb
 4119 008f 27       		.uleb128 0x27
 4120 0090 19       		.uleb128 0x19
 4121 0091 11       		.uleb128 0x11
 4122 0092 01       		.uleb128 0x1
 4123 0093 12       		.uleb128 0x12
 4124 0094 06       		.uleb128 0x6
 4125 0095 40       		.uleb128 0x40
 4126 0096 18       		.uleb128 0x18
 4127 0097 9742     		.uleb128 0x2117
 4128 0099 19       		.uleb128 0x19
 4129 009a 01       		.uleb128 0x1
 4130 009b 13       		.uleb128 0x13
 4131 009c 00       		.byte	0
 4132 009d 00       		.byte	0
 4133 009e 0E       		.uleb128 0xe
 4134 009f 05       		.uleb128 0x5
 4135 00a0 00       		.byte	0
 4136 00a1 03       		.uleb128 0x3
 4137 00a2 0E       		.uleb128 0xe
ARM GAS  C:\Users\Mykola\AppData\Local\Temp\ccSL9DbN.s 			page 125


 4138 00a3 3A       		.uleb128 0x3a
 4139 00a4 0B       		.uleb128 0xb
 4140 00a5 3B       		.uleb128 0x3b
 4141 00a6 0B       		.uleb128 0xb
 4142 00a7 49       		.uleb128 0x49
 4143 00a8 13       		.uleb128 0x13
 4144 00a9 02       		.uleb128 0x2
 4145 00aa 17       		.uleb128 0x17
 4146 00ab 00       		.byte	0
 4147 00ac 00       		.byte	0
 4148 00ad 0F       		.uleb128 0xf
 4149 00ae 898201   		.uleb128 0x4109
 4150 00b1 01       		.byte	0x1
 4151 00b2 11       		.uleb128 0x11
 4152 00b3 01       		.uleb128 0x1
 4153 00b4 31       		.uleb128 0x31
 4154 00b5 13       		.uleb128 0x13
 4155 00b6 01       		.uleb128 0x1
 4156 00b7 13       		.uleb128 0x13
 4157 00b8 00       		.byte	0
 4158 00b9 00       		.byte	0
 4159 00ba 10       		.uleb128 0x10
 4160 00bb 8A8201   		.uleb128 0x410a
 4161 00be 00       		.byte	0
 4162 00bf 02       		.uleb128 0x2
 4163 00c0 18       		.uleb128 0x18
 4164 00c1 9142     		.uleb128 0x2111
 4165 00c3 18       		.uleb128 0x18
 4166 00c4 00       		.byte	0
 4167 00c5 00       		.byte	0
 4168 00c6 11       		.uleb128 0x11
 4169 00c7 898201   		.uleb128 0x4109
 4170 00ca 00       		.byte	0
 4171 00cb 11       		.uleb128 0x11
 4172 00cc 01       		.uleb128 0x1
 4173 00cd 31       		.uleb128 0x31
 4174 00ce 13       		.uleb128 0x13
 4175 00cf 00       		.byte	0
 4176 00d0 00       		.byte	0
 4177 00d1 12       		.uleb128 0x12
 4178 00d2 898201   		.uleb128 0x4109
 4179 00d5 01       		.byte	0x1
 4180 00d6 11       		.uleb128 0x11
 4181 00d7 01       		.uleb128 0x1
 4182 00d8 31       		.uleb128 0x31
 4183 00d9 13       		.uleb128 0x13
 4184 00da 00       		.byte	0
 4185 00db 00       		.byte	0
 4186 00dc 13       		.uleb128 0x13
 4187 00dd 34       		.uleb128 0x34
 4188 00de 00       		.byte	0
 4189 00df 03       		.uleb128 0x3
 4190 00e0 08       		.uleb128 0x8
 4191 00e1 3A       		.uleb128 0x3a
 4192 00e2 0B       		.uleb128 0xb
 4193 00e3 3B       		.uleb128 0x3b
 4194 00e4 05       		.uleb128 0x5
ARM GAS  C:\Users\Mykola\AppData\Local\Temp\ccSL9DbN.s 			page 126


 4195 00e5 49       		.uleb128 0x49
 4196 00e6 13       		.uleb128 0x13
 4197 00e7 02       		.uleb128 0x2
 4198 00e8 17       		.uleb128 0x17
 4199 00e9 00       		.byte	0
 4200 00ea 00       		.byte	0
 4201 00eb 14       		.uleb128 0x14
 4202 00ec 2E       		.uleb128 0x2e
 4203 00ed 01       		.byte	0x1
 4204 00ee 3F       		.uleb128 0x3f
 4205 00ef 19       		.uleb128 0x19
 4206 00f0 03       		.uleb128 0x3
 4207 00f1 0E       		.uleb128 0xe
 4208 00f2 3A       		.uleb128 0x3a
 4209 00f3 0B       		.uleb128 0xb
 4210 00f4 3B       		.uleb128 0x3b
 4211 00f5 05       		.uleb128 0x5
 4212 00f6 27       		.uleb128 0x27
 4213 00f7 19       		.uleb128 0x19
 4214 00f8 11       		.uleb128 0x11
 4215 00f9 01       		.uleb128 0x1
 4216 00fa 12       		.uleb128 0x12
 4217 00fb 06       		.uleb128 0x6
 4218 00fc 40       		.uleb128 0x40
 4219 00fd 18       		.uleb128 0x18
 4220 00fe 9742     		.uleb128 0x2117
 4221 0100 19       		.uleb128 0x19
 4222 0101 01       		.uleb128 0x1
 4223 0102 13       		.uleb128 0x13
 4224 0103 00       		.byte	0
 4225 0104 00       		.byte	0
 4226 0105 15       		.uleb128 0x15
 4227 0106 34       		.uleb128 0x34
 4228 0107 00       		.byte	0
 4229 0108 03       		.uleb128 0x3
 4230 0109 0E       		.uleb128 0xe
 4231 010a 3A       		.uleb128 0x3a
 4232 010b 0B       		.uleb128 0xb
 4233 010c 3B       		.uleb128 0x3b
 4234 010d 05       		.uleb128 0x5
 4235 010e 49       		.uleb128 0x49
 4236 010f 13       		.uleb128 0x13
 4237 0110 02       		.uleb128 0x2
 4238 0111 17       		.uleb128 0x17
 4239 0112 00       		.byte	0
 4240 0113 00       		.byte	0
 4241 0114 16       		.uleb128 0x16
 4242 0115 2E       		.uleb128 0x2e
 4243 0116 01       		.byte	0x1
 4244 0117 3F       		.uleb128 0x3f
 4245 0118 19       		.uleb128 0x19
 4246 0119 03       		.uleb128 0x3
 4247 011a 0E       		.uleb128 0xe
 4248 011b 3A       		.uleb128 0x3a
 4249 011c 0B       		.uleb128 0xb
 4250 011d 3B       		.uleb128 0x3b
 4251 011e 05       		.uleb128 0x5
ARM GAS  C:\Users\Mykola\AppData\Local\Temp\ccSL9DbN.s 			page 127


 4252 011f 27       		.uleb128 0x27
 4253 0120 19       		.uleb128 0x19
 4254 0121 49       		.uleb128 0x49
 4255 0122 13       		.uleb128 0x13
 4256 0123 11       		.uleb128 0x11
 4257 0124 01       		.uleb128 0x1
 4258 0125 12       		.uleb128 0x12
 4259 0126 06       		.uleb128 0x6
 4260 0127 40       		.uleb128 0x40
 4261 0128 18       		.uleb128 0x18
 4262 0129 9742     		.uleb128 0x2117
 4263 012b 19       		.uleb128 0x19
 4264 012c 01       		.uleb128 0x1
 4265 012d 13       		.uleb128 0x13
 4266 012e 00       		.byte	0
 4267 012f 00       		.byte	0
 4268 0130 17       		.uleb128 0x17
 4269 0131 05       		.uleb128 0x5
 4270 0132 00       		.byte	0
 4271 0133 03       		.uleb128 0x3
 4272 0134 0E       		.uleb128 0xe
 4273 0135 3A       		.uleb128 0x3a
 4274 0136 0B       		.uleb128 0xb
 4275 0137 3B       		.uleb128 0x3b
 4276 0138 05       		.uleb128 0x5
 4277 0139 49       		.uleb128 0x49
 4278 013a 13       		.uleb128 0x13
 4279 013b 02       		.uleb128 0x2
 4280 013c 17       		.uleb128 0x17
 4281 013d 00       		.byte	0
 4282 013e 00       		.byte	0
 4283 013f 18       		.uleb128 0x18
 4284 0140 05       		.uleb128 0x5
 4285 0141 00       		.byte	0
 4286 0142 03       		.uleb128 0x3
 4287 0143 0E       		.uleb128 0xe
 4288 0144 3A       		.uleb128 0x3a
 4289 0145 0B       		.uleb128 0xb
 4290 0146 3B       		.uleb128 0x3b
 4291 0147 05       		.uleb128 0x5
 4292 0148 49       		.uleb128 0x49
 4293 0149 13       		.uleb128 0x13
 4294 014a 02       		.uleb128 0x2
 4295 014b 18       		.uleb128 0x18
 4296 014c 00       		.byte	0
 4297 014d 00       		.byte	0
 4298 014e 19       		.uleb128 0x19
 4299 014f 34       		.uleb128 0x34
 4300 0150 00       		.byte	0
 4301 0151 03       		.uleb128 0x3
 4302 0152 0E       		.uleb128 0xe
 4303 0153 3A       		.uleb128 0x3a
 4304 0154 0B       		.uleb128 0xb
 4305 0155 3B       		.uleb128 0x3b
 4306 0156 05       		.uleb128 0x5
 4307 0157 49       		.uleb128 0x49
 4308 0158 13       		.uleb128 0x13
ARM GAS  C:\Users\Mykola\AppData\Local\Temp\ccSL9DbN.s 			page 128


 4309 0159 1C       		.uleb128 0x1c
 4310 015a 0B       		.uleb128 0xb
 4311 015b 00       		.byte	0
 4312 015c 00       		.byte	0
 4313 015d 1A       		.uleb128 0x1a
 4314 015e 34       		.uleb128 0x34
 4315 015f 00       		.byte	0
 4316 0160 03       		.uleb128 0x3
 4317 0161 0E       		.uleb128 0xe
 4318 0162 3A       		.uleb128 0x3a
 4319 0163 0B       		.uleb128 0xb
 4320 0164 3B       		.uleb128 0x3b
 4321 0165 05       		.uleb128 0x5
 4322 0166 49       		.uleb128 0x49
 4323 0167 13       		.uleb128 0x13
 4324 0168 02       		.uleb128 0x2
 4325 0169 18       		.uleb128 0x18
 4326 016a 00       		.byte	0
 4327 016b 00       		.byte	0
 4328 016c 1B       		.uleb128 0x1b
 4329 016d 01       		.uleb128 0x1
 4330 016e 01       		.byte	0x1
 4331 016f 49       		.uleb128 0x49
 4332 0170 13       		.uleb128 0x13
 4333 0171 01       		.uleb128 0x1
 4334 0172 13       		.uleb128 0x13
 4335 0173 00       		.byte	0
 4336 0174 00       		.byte	0
 4337 0175 1C       		.uleb128 0x1c
 4338 0176 21       		.uleb128 0x21
 4339 0177 00       		.byte	0
 4340 0178 49       		.uleb128 0x49
 4341 0179 13       		.uleb128 0x13
 4342 017a 2F       		.uleb128 0x2f
 4343 017b 0B       		.uleb128 0xb
 4344 017c 00       		.byte	0
 4345 017d 00       		.byte	0
 4346 017e 1D       		.uleb128 0x1d
 4347 017f 2E       		.uleb128 0x2e
 4348 0180 01       		.byte	0x1
 4349 0181 3F       		.uleb128 0x3f
 4350 0182 19       		.uleb128 0x19
 4351 0183 03       		.uleb128 0x3
 4352 0184 0E       		.uleb128 0xe
 4353 0185 3A       		.uleb128 0x3a
 4354 0186 0B       		.uleb128 0xb
 4355 0187 3B       		.uleb128 0x3b
 4356 0188 05       		.uleb128 0x5
 4357 0189 27       		.uleb128 0x27
 4358 018a 19       		.uleb128 0x19
 4359 018b 49       		.uleb128 0x49
 4360 018c 13       		.uleb128 0x13
 4361 018d 11       		.uleb128 0x11
 4362 018e 01       		.uleb128 0x1
 4363 018f 12       		.uleb128 0x12
 4364 0190 06       		.uleb128 0x6
 4365 0191 40       		.uleb128 0x40
ARM GAS  C:\Users\Mykola\AppData\Local\Temp\ccSL9DbN.s 			page 129


 4366 0192 18       		.uleb128 0x18
 4367 0193 9642     		.uleb128 0x2116
 4368 0195 19       		.uleb128 0x19
 4369 0196 01       		.uleb128 0x1
 4370 0197 13       		.uleb128 0x13
 4371 0198 00       		.byte	0
 4372 0199 00       		.byte	0
 4373 019a 1E       		.uleb128 0x1e
 4374 019b 05       		.uleb128 0x5
 4375 019c 00       		.byte	0
 4376 019d 03       		.uleb128 0x3
 4377 019e 08       		.uleb128 0x8
 4378 019f 3A       		.uleb128 0x3a
 4379 01a0 0B       		.uleb128 0xb
 4380 01a1 3B       		.uleb128 0x3b
 4381 01a2 05       		.uleb128 0x5
 4382 01a3 49       		.uleb128 0x49
 4383 01a4 13       		.uleb128 0x13
 4384 01a5 02       		.uleb128 0x2
 4385 01a6 17       		.uleb128 0x17
 4386 01a7 00       		.byte	0
 4387 01a8 00       		.byte	0
 4388 01a9 1F       		.uleb128 0x1f
 4389 01aa 05       		.uleb128 0x5
 4390 01ab 00       		.byte	0
 4391 01ac 03       		.uleb128 0x3
 4392 01ad 08       		.uleb128 0x8
 4393 01ae 3A       		.uleb128 0x3a
 4394 01af 0B       		.uleb128 0xb
 4395 01b0 3B       		.uleb128 0x3b
 4396 01b1 05       		.uleb128 0x5
 4397 01b2 49       		.uleb128 0x49
 4398 01b3 13       		.uleb128 0x13
 4399 01b4 02       		.uleb128 0x2
 4400 01b5 18       		.uleb128 0x18
 4401 01b6 00       		.byte	0
 4402 01b7 00       		.byte	0
 4403 01b8 20       		.uleb128 0x20
 4404 01b9 34       		.uleb128 0x34
 4405 01ba 00       		.byte	0
 4406 01bb 03       		.uleb128 0x3
 4407 01bc 08       		.uleb128 0x8
 4408 01bd 3A       		.uleb128 0x3a
 4409 01be 0B       		.uleb128 0xb
 4410 01bf 3B       		.uleb128 0x3b
 4411 01c0 05       		.uleb128 0x5
 4412 01c1 49       		.uleb128 0x49
 4413 01c2 13       		.uleb128 0x13
 4414 01c3 00       		.byte	0
 4415 01c4 00       		.byte	0
 4416 01c5 21       		.uleb128 0x21
 4417 01c6 34       		.uleb128 0x34
 4418 01c7 00       		.byte	0
 4419 01c8 03       		.uleb128 0x3
 4420 01c9 0E       		.uleb128 0xe
 4421 01ca 3A       		.uleb128 0x3a
 4422 01cb 0B       		.uleb128 0xb
ARM GAS  C:\Users\Mykola\AppData\Local\Temp\ccSL9DbN.s 			page 130


 4423 01cc 3B       		.uleb128 0x3b
 4424 01cd 05       		.uleb128 0x5
 4425 01ce 49       		.uleb128 0x49
 4426 01cf 13       		.uleb128 0x13
 4427 01d0 00       		.byte	0
 4428 01d1 00       		.byte	0
 4429 01d2 22       		.uleb128 0x22
 4430 01d3 2E       		.uleb128 0x2e
 4431 01d4 00       		.byte	0
 4432 01d5 3F       		.uleb128 0x3f
 4433 01d6 19       		.uleb128 0x19
 4434 01d7 03       		.uleb128 0x3
 4435 01d8 0E       		.uleb128 0xe
 4436 01d9 3A       		.uleb128 0x3a
 4437 01da 0B       		.uleb128 0xb
 4438 01db 3B       		.uleb128 0x3b
 4439 01dc 05       		.uleb128 0x5
 4440 01dd 27       		.uleb128 0x27
 4441 01de 19       		.uleb128 0x19
 4442 01df 11       		.uleb128 0x11
 4443 01e0 01       		.uleb128 0x1
 4444 01e1 12       		.uleb128 0x12
 4445 01e2 06       		.uleb128 0x6
 4446 01e3 40       		.uleb128 0x40
 4447 01e4 18       		.uleb128 0x18
 4448 01e5 9742     		.uleb128 0x2117
 4449 01e7 19       		.uleb128 0x19
 4450 01e8 00       		.byte	0
 4451 01e9 00       		.byte	0
 4452 01ea 23       		.uleb128 0x23
 4453 01eb 34       		.uleb128 0x34
 4454 01ec 00       		.byte	0
 4455 01ed 03       		.uleb128 0x3
 4456 01ee 0E       		.uleb128 0xe
 4457 01ef 3A       		.uleb128 0x3a
 4458 01f0 0B       		.uleb128 0xb
 4459 01f1 3B       		.uleb128 0x3b
 4460 01f2 0B       		.uleb128 0xb
 4461 01f3 49       		.uleb128 0x49
 4462 01f4 13       		.uleb128 0x13
 4463 01f5 1C       		.uleb128 0x1c
 4464 01f6 0A       		.uleb128 0xa
 4465 01f7 00       		.byte	0
 4466 01f8 00       		.byte	0
 4467 01f9 24       		.uleb128 0x24
 4468 01fa 34       		.uleb128 0x34
 4469 01fb 00       		.byte	0
 4470 01fc 03       		.uleb128 0x3
 4471 01fd 0E       		.uleb128 0xe
 4472 01fe 3A       		.uleb128 0x3a
 4473 01ff 0B       		.uleb128 0xb
 4474 0200 3B       		.uleb128 0x3b
 4475 0201 0B       		.uleb128 0xb
 4476 0202 49       		.uleb128 0x49
 4477 0203 13       		.uleb128 0x13
 4478 0204 02       		.uleb128 0x2
 4479 0205 18       		.uleb128 0x18
ARM GAS  C:\Users\Mykola\AppData\Local\Temp\ccSL9DbN.s 			page 131


 4480 0206 00       		.byte	0
 4481 0207 00       		.byte	0
 4482 0208 25       		.uleb128 0x25
 4483 0209 34       		.uleb128 0x34
 4484 020a 00       		.byte	0
 4485 020b 03       		.uleb128 0x3
 4486 020c 0E       		.uleb128 0xe
 4487 020d 3A       		.uleb128 0x3a
 4488 020e 0B       		.uleb128 0xb
 4489 020f 3B       		.uleb128 0x3b
 4490 0210 0B       		.uleb128 0xb
 4491 0211 49       		.uleb128 0x49
 4492 0212 13       		.uleb128 0x13
 4493 0213 3F       		.uleb128 0x3f
 4494 0214 19       		.uleb128 0x19
 4495 0215 3C       		.uleb128 0x3c
 4496 0216 19       		.uleb128 0x19
 4497 0217 00       		.byte	0
 4498 0218 00       		.byte	0
 4499 0219 26       		.uleb128 0x26
 4500 021a 34       		.uleb128 0x34
 4501 021b 00       		.byte	0
 4502 021c 03       		.uleb128 0x3
 4503 021d 0E       		.uleb128 0xe
 4504 021e 3A       		.uleb128 0x3a
 4505 021f 0B       		.uleb128 0xb
 4506 0220 3B       		.uleb128 0x3b
 4507 0221 0B       		.uleb128 0xb
 4508 0222 49       		.uleb128 0x49
 4509 0223 13       		.uleb128 0x13
 4510 0224 3F       		.uleb128 0x3f
 4511 0225 19       		.uleb128 0x19
 4512 0226 02       		.uleb128 0x2
 4513 0227 18       		.uleb128 0x18
 4514 0228 00       		.byte	0
 4515 0229 00       		.byte	0
 4516 022a 27       		.uleb128 0x27
 4517 022b 2E       		.uleb128 0x2e
 4518 022c 01       		.byte	0x1
 4519 022d 3F       		.uleb128 0x3f
 4520 022e 19       		.uleb128 0x19
 4521 022f 03       		.uleb128 0x3
 4522 0230 0E       		.uleb128 0xe
 4523 0231 3A       		.uleb128 0x3a
 4524 0232 0B       		.uleb128 0xb
 4525 0233 3B       		.uleb128 0x3b
 4526 0234 0B       		.uleb128 0xb
 4527 0235 27       		.uleb128 0x27
 4528 0236 19       		.uleb128 0x19
 4529 0237 3C       		.uleb128 0x3c
 4530 0238 19       		.uleb128 0x19
 4531 0239 01       		.uleb128 0x1
 4532 023a 13       		.uleb128 0x13
 4533 023b 00       		.byte	0
 4534 023c 00       		.byte	0
 4535 023d 28       		.uleb128 0x28
 4536 023e 2E       		.uleb128 0x2e
ARM GAS  C:\Users\Mykola\AppData\Local\Temp\ccSL9DbN.s 			page 132


 4537 023f 00       		.byte	0
 4538 0240 3F       		.uleb128 0x3f
 4539 0241 19       		.uleb128 0x19
 4540 0242 03       		.uleb128 0x3
 4541 0243 0E       		.uleb128 0xe
 4542 0244 3A       		.uleb128 0x3a
 4543 0245 0B       		.uleb128 0xb
 4544 0246 3B       		.uleb128 0x3b
 4545 0247 0B       		.uleb128 0xb
 4546 0248 27       		.uleb128 0x27
 4547 0249 19       		.uleb128 0x19
 4548 024a 49       		.uleb128 0x49
 4549 024b 13       		.uleb128 0x13
 4550 024c 3C       		.uleb128 0x3c
 4551 024d 19       		.uleb128 0x19
 4552 024e 00       		.byte	0
 4553 024f 00       		.byte	0
 4554 0250 29       		.uleb128 0x29
 4555 0251 2E       		.uleb128 0x2e
 4556 0252 00       		.byte	0
 4557 0253 3F       		.uleb128 0x3f
 4558 0254 19       		.uleb128 0x19
 4559 0255 03       		.uleb128 0x3
 4560 0256 0E       		.uleb128 0xe
 4561 0257 3A       		.uleb128 0x3a
 4562 0258 0B       		.uleb128 0xb
 4563 0259 3B       		.uleb128 0x3b
 4564 025a 0B       		.uleb128 0xb
 4565 025b 27       		.uleb128 0x27
 4566 025c 19       		.uleb128 0x19
 4567 025d 3C       		.uleb128 0x3c
 4568 025e 19       		.uleb128 0x19
 4569 025f 00       		.byte	0
 4570 0260 00       		.byte	0
 4571 0261 2A       		.uleb128 0x2a
 4572 0262 2E       		.uleb128 0x2e
 4573 0263 01       		.byte	0x1
 4574 0264 3F       		.uleb128 0x3f
 4575 0265 19       		.uleb128 0x19
 4576 0266 03       		.uleb128 0x3
 4577 0267 0E       		.uleb128 0xe
 4578 0268 3A       		.uleb128 0x3a
 4579 0269 0B       		.uleb128 0xb
 4580 026a 3B       		.uleb128 0x3b
 4581 026b 0B       		.uleb128 0xb
 4582 026c 27       		.uleb128 0x27
 4583 026d 19       		.uleb128 0x19
 4584 026e 49       		.uleb128 0x49
 4585 026f 13       		.uleb128 0x13
 4586 0270 3C       		.uleb128 0x3c
 4587 0271 19       		.uleb128 0x19
 4588 0272 01       		.uleb128 0x1
 4589 0273 13       		.uleb128 0x13
 4590 0274 00       		.byte	0
 4591 0275 00       		.byte	0
 4592 0276 2B       		.uleb128 0x2b
 4593 0277 2E       		.uleb128 0x2e
ARM GAS  C:\Users\Mykola\AppData\Local\Temp\ccSL9DbN.s 			page 133


 4594 0278 01       		.byte	0x1
 4595 0279 3F       		.uleb128 0x3f
 4596 027a 19       		.uleb128 0x19
 4597 027b 03       		.uleb128 0x3
 4598 027c 0E       		.uleb128 0xe
 4599 027d 3A       		.uleb128 0x3a
 4600 027e 0B       		.uleb128 0xb
 4601 027f 3B       		.uleb128 0x3b
 4602 0280 0B       		.uleb128 0xb
 4603 0281 27       		.uleb128 0x27
 4604 0282 19       		.uleb128 0x19
 4605 0283 3C       		.uleb128 0x3c
 4606 0284 19       		.uleb128 0x19
 4607 0285 00       		.byte	0
 4608 0286 00       		.byte	0
 4609 0287 00       		.byte	0
 4610              		.section	.debug_loc,"",%progbits
 4611              	.Ldebug_loc0:
 4612              	.LLST0:
 4613 0000 00000000 		.4byte	.LVL0
 4614 0004 0C000000 		.4byte	.LVL1
 4615 0008 0100     		.2byte	0x1
 4616 000a 50       		.byte	0x50
 4617 000b 0C000000 		.4byte	.LVL1
 4618 000f 24000000 		.4byte	.LFE35
 4619 0013 0400     		.2byte	0x4
 4620 0015 F3       		.byte	0xf3
 4621 0016 01       		.uleb128 0x1
 4622 0017 50       		.byte	0x50
 4623 0018 9F       		.byte	0x9f
 4624 0019 00000000 		.4byte	0
 4625 001d 00000000 		.4byte	0
 4626              	.LLST1:
 4627 0021 00000000 		.4byte	.LVL2
 4628 0025 07000000 		.4byte	.LVL3-1
 4629 0029 0100     		.2byte	0x1
 4630 002b 50       		.byte	0x50
 4631 002c 07000000 		.4byte	.LVL3-1
 4632 0030 16000000 		.4byte	.LVL6
 4633 0034 0100     		.2byte	0x1
 4634 0036 54       		.byte	0x54
 4635 0037 16000000 		.4byte	.LVL6
 4636 003b 18000000 		.4byte	.LFE36
 4637 003f 0400     		.2byte	0x4
 4638 0041 F3       		.byte	0xf3
 4639 0042 01       		.uleb128 0x1
 4640 0043 50       		.byte	0x50
 4641 0044 9F       		.byte	0x9f
 4642 0045 00000000 		.4byte	0
 4643 0049 00000000 		.4byte	0
 4644              	.LLST2:
 4645 004d 02000000 		.4byte	.LVL7
 4646 0051 06000000 		.4byte	.LVL8
 4647 0055 0200     		.2byte	0x2
 4648 0057 30       		.byte	0x30
 4649 0058 9F       		.byte	0x9f
 4650 0059 06000000 		.4byte	.LVL8
ARM GAS  C:\Users\Mykola\AppData\Local\Temp\ccSL9DbN.s 			page 134


 4651 005d 12000000 		.4byte	.LVL11
 4652 0061 0100     		.2byte	0x1
 4653 0063 54       		.byte	0x54
 4654 0064 00000000 		.4byte	0
 4655 0068 00000000 		.4byte	0
 4656              	.LLST3:
 4657 006c 12000000 		.4byte	.LVL14
 4658 0070 2A000000 		.4byte	.LVL19
 4659 0074 0100     		.2byte	0x1
 4660 0076 54       		.byte	0x54
 4661 0077 00000000 		.4byte	0
 4662 007b 00000000 		.4byte	0
 4663              	.LLST4:
 4664 007f 1A000000 		.4byte	.LVL15
 4665 0083 20000000 		.4byte	.LVL16
 4666 0087 0100     		.2byte	0x1
 4667 0089 50       		.byte	0x50
 4668 008a 00000000 		.4byte	0
 4669 008e 00000000 		.4byte	0
 4670              	.LLST5:
 4671 0092 00000000 		.4byte	.LVL20
 4672 0096 02000000 		.4byte	.LVL21
 4673 009a 0100     		.2byte	0x1
 4674 009c 50       		.byte	0x50
 4675 009d 02000000 		.4byte	.LVL21
 4676 00a1 0C000000 		.4byte	.LFE43
 4677 00a5 0400     		.2byte	0x4
 4678 00a7 F3       		.byte	0xf3
 4679 00a8 01       		.uleb128 0x1
 4680 00a9 50       		.byte	0x50
 4681 00aa 9F       		.byte	0x9f
 4682 00ab 00000000 		.4byte	0
 4683 00af 00000000 		.4byte	0
 4684              	.LLST6:
 4685 00b3 00000000 		.4byte	.LVL22
 4686 00b7 02000000 		.4byte	.LVL23
 4687 00bb 0100     		.2byte	0x1
 4688 00bd 50       		.byte	0x50
 4689 00be 02000000 		.4byte	.LVL23
 4690 00c2 0C000000 		.4byte	.LFE44
 4691 00c6 0400     		.2byte	0x4
 4692 00c8 F3       		.byte	0xf3
 4693 00c9 01       		.uleb128 0x1
 4694 00ca 50       		.byte	0x50
 4695 00cb 9F       		.byte	0x9f
 4696 00cc 00000000 		.4byte	0
 4697 00d0 00000000 		.4byte	0
 4698              	.LLST7:
 4699 00d4 00000000 		.4byte	.LVL24
 4700 00d8 04000000 		.4byte	.LVL25
 4701 00dc 0100     		.2byte	0x1
 4702 00de 50       		.byte	0x50
 4703 00df 04000000 		.4byte	.LVL25
 4704 00e3 0C000000 		.4byte	.LFE45
 4705 00e7 0400     		.2byte	0x4
 4706 00e9 F3       		.byte	0xf3
 4707 00ea 01       		.uleb128 0x1
ARM GAS  C:\Users\Mykola\AppData\Local\Temp\ccSL9DbN.s 			page 135


 4708 00eb 50       		.byte	0x50
 4709 00ec 9F       		.byte	0x9f
 4710 00ed 00000000 		.4byte	0
 4711 00f1 00000000 		.4byte	0
 4712              	.LLST8:
 4713 00f5 00000000 		.4byte	.LVL26
 4714 00f9 04000000 		.4byte	.LVL27
 4715 00fd 0100     		.2byte	0x1
 4716 00ff 50       		.byte	0x50
 4717 0100 04000000 		.4byte	.LVL27
 4718 0104 0C000000 		.4byte	.LFE46
 4719 0108 0400     		.2byte	0x4
 4720 010a F3       		.byte	0xf3
 4721 010b 01       		.uleb128 0x1
 4722 010c 50       		.byte	0x50
 4723 010d 9F       		.byte	0x9f
 4724 010e 00000000 		.4byte	0
 4725 0112 00000000 		.4byte	0
 4726              	.LLST9:
 4727 0116 00000000 		.4byte	.LVL28
 4728 011a 04000000 		.4byte	.LVL29
 4729 011e 0100     		.2byte	0x1
 4730 0120 50       		.byte	0x50
 4731 0121 04000000 		.4byte	.LVL29
 4732 0125 0C000000 		.4byte	.LFE47
 4733 0129 0400     		.2byte	0x4
 4734 012b F3       		.byte	0xf3
 4735 012c 01       		.uleb128 0x1
 4736 012d 50       		.byte	0x50
 4737 012e 9F       		.byte	0x9f
 4738 012f 00000000 		.4byte	0
 4739 0133 00000000 		.4byte	0
 4740              	.LLST10:
 4741 0137 00000000 		.4byte	.LVL30
 4742 013b 04000000 		.4byte	.LVL31
 4743 013f 0100     		.2byte	0x1
 4744 0141 50       		.byte	0x50
 4745 0142 04000000 		.4byte	.LVL31
 4746 0146 0C000000 		.4byte	.LFE48
 4747 014a 0400     		.2byte	0x4
 4748 014c F3       		.byte	0xf3
 4749 014d 01       		.uleb128 0x1
 4750 014e 50       		.byte	0x50
 4751 014f 9F       		.byte	0x9f
 4752 0150 00000000 		.4byte	0
 4753 0154 00000000 		.4byte	0
 4754              	.LLST11:
 4755 0158 00000000 		.4byte	.LVL32
 4756 015c 04000000 		.4byte	.LVL33
 4757 0160 0100     		.2byte	0x1
 4758 0162 50       		.byte	0x50
 4759 0163 04000000 		.4byte	.LVL33
 4760 0167 0C000000 		.4byte	.LFE49
 4761 016b 0400     		.2byte	0x4
 4762 016d F3       		.byte	0xf3
 4763 016e 01       		.uleb128 0x1
 4764 016f 50       		.byte	0x50
ARM GAS  C:\Users\Mykola\AppData\Local\Temp\ccSL9DbN.s 			page 136


 4765 0170 9F       		.byte	0x9f
 4766 0171 00000000 		.4byte	0
 4767 0175 00000000 		.4byte	0
 4768              	.LLST12:
 4769 0179 00000000 		.4byte	.LVL34
 4770 017d 04000000 		.4byte	.LVL35
 4771 0181 0100     		.2byte	0x1
 4772 0183 50       		.byte	0x50
 4773 0184 04000000 		.4byte	.LVL35
 4774 0188 0C000000 		.4byte	.LFE50
 4775 018c 0400     		.2byte	0x4
 4776 018e F3       		.byte	0xf3
 4777 018f 01       		.uleb128 0x1
 4778 0190 50       		.byte	0x50
 4779 0191 9F       		.byte	0x9f
 4780 0192 00000000 		.4byte	0
 4781 0196 00000000 		.4byte	0
 4782              	.LLST13:
 4783 019a 00000000 		.4byte	.LVL41
 4784 019e 04000000 		.4byte	.LVL42
 4785 01a2 0100     		.2byte	0x1
 4786 01a4 50       		.byte	0x50
 4787 01a5 04000000 		.4byte	.LVL42
 4788 01a9 0C000000 		.4byte	.LFE56
 4789 01ad 0400     		.2byte	0x4
 4790 01af F3       		.byte	0xf3
 4791 01b0 01       		.uleb128 0x1
 4792 01b1 50       		.byte	0x50
 4793 01b2 9F       		.byte	0x9f
 4794 01b3 00000000 		.4byte	0
 4795 01b7 00000000 		.4byte	0
 4796              	.LLST14:
 4797 01bb 00000000 		.4byte	.LVL43
 4798 01bf 16000000 		.4byte	.LVL48
 4799 01c3 0100     		.2byte	0x1
 4800 01c5 50       		.byte	0x50
 4801 01c6 16000000 		.4byte	.LVL48
 4802 01ca 80000000 		.4byte	.LVL57
 4803 01ce 0100     		.2byte	0x1
 4804 01d0 54       		.byte	0x54
 4805 01d1 80000000 		.4byte	.LVL57
 4806 01d5 98000000 		.4byte	.LFE57
 4807 01d9 0400     		.2byte	0x4
 4808 01db F3       		.byte	0xf3
 4809 01dc 01       		.uleb128 0x1
 4810 01dd 50       		.byte	0x50
 4811 01de 9F       		.byte	0x9f
 4812 01df 00000000 		.4byte	0
 4813 01e3 00000000 		.4byte	0
 4814              	.LLST15:
 4815 01e7 08000000 		.4byte	.LVL44
 4816 01eb 18000000 		.4byte	.LVL49
 4817 01ef 0100     		.2byte	0x1
 4818 01f1 53       		.byte	0x53
 4819 01f2 00000000 		.4byte	0
 4820 01f6 00000000 		.4byte	0
 4821              	.LLST16:
ARM GAS  C:\Users\Mykola\AppData\Local\Temp\ccSL9DbN.s 			page 137


 4822 01fa 14000000 		.4byte	.LVL47
 4823 01fe 80000000 		.4byte	.LVL59
 4824 0202 0100     		.2byte	0x1
 4825 0204 57       		.byte	0x57
 4826 0205 00000000 		.4byte	0
 4827 0209 00000000 		.4byte	0
 4828              	.LLST17:
 4829 020d 0C000000 		.4byte	.LVL45
 4830 0211 80000000 		.4byte	.LVL58
 4831 0215 0100     		.2byte	0x1
 4832 0217 56       		.byte	0x56
 4833 0218 00000000 		.4byte	0
 4834 021c 00000000 		.4byte	0
 4835              	.LLST18:
 4836 0220 10000000 		.4byte	.LVL46
 4837 0224 2E000000 		.4byte	.LVL51
 4838 0228 0100     		.2byte	0x1
 4839 022a 55       		.byte	0x55
 4840 022b 44000000 		.4byte	.LVL53
 4841 022f 4C000000 		.4byte	.LVL54
 4842 0233 0100     		.2byte	0x1
 4843 0235 55       		.byte	0x55
 4844 0236 00000000 		.4byte	0
 4845 023a 00000000 		.4byte	0
 4846              	.LLST19:
 4847 023e 00000000 		.4byte	.LVL60
 4848 0242 06000000 		.4byte	.LVL62
 4849 0246 0100     		.2byte	0x1
 4850 0248 50       		.byte	0x50
 4851 0249 06000000 		.4byte	.LVL62
 4852 024d 1C000000 		.4byte	.LFE58
 4853 0251 0400     		.2byte	0x4
 4854 0253 F3       		.byte	0xf3
 4855 0254 01       		.uleb128 0x1
 4856 0255 50       		.byte	0x50
 4857 0256 9F       		.byte	0x9f
 4858 0257 00000000 		.4byte	0
 4859 025b 00000000 		.4byte	0
 4860              	.LLST20:
 4861 025f 02000000 		.4byte	.LVL61
 4862 0263 06000000 		.4byte	.LVL62
 4863 0267 0200     		.2byte	0x2
 4864 0269 30       		.byte	0x30
 4865 026a 9F       		.byte	0x9f
 4866 026b 06000000 		.4byte	.LVL62
 4867 026f 1A000000 		.4byte	.LVL66
 4868 0273 0100     		.2byte	0x1
 4869 0275 54       		.byte	0x54
 4870 0276 00000000 		.4byte	0
 4871 027a 00000000 		.4byte	0
 4872              	.LLST21:
 4873 027e 02000000 		.4byte	.LVL61
 4874 0282 06000000 		.4byte	.LVL62
 4875 0286 0200     		.2byte	0x2
 4876 0288 30       		.byte	0x30
 4877 0289 9F       		.byte	0x9f
 4878 028a 06000000 		.4byte	.LVL62
ARM GAS  C:\Users\Mykola\AppData\Local\Temp\ccSL9DbN.s 			page 138


 4879 028e 1A000000 		.4byte	.LVL67
 4880 0292 0100     		.2byte	0x1
 4881 0294 55       		.byte	0x55
 4882 0295 1A000000 		.4byte	.LVL67
 4883 0299 1C000000 		.4byte	.LFE58
 4884 029d 0100     		.2byte	0x1
 4885 029f 50       		.byte	0x50
 4886 02a0 00000000 		.4byte	0
 4887 02a4 00000000 		.4byte	0
 4888              	.LLST22:
 4889 02a8 02000000 		.4byte	.LVL68
 4890 02ac 08000000 		.4byte	.LVL69
 4891 02b0 0200     		.2byte	0x2
 4892 02b2 30       		.byte	0x30
 4893 02b3 9F       		.byte	0x9f
 4894 02b4 08000000 		.4byte	.LVL69
 4895 02b8 1C000000 		.4byte	.LVL73
 4896 02bc 0100     		.2byte	0x1
 4897 02be 54       		.byte	0x54
 4898 02bf 00000000 		.4byte	0
 4899 02c3 00000000 		.4byte	0
 4900              	.LLST23:
 4901 02c7 02000000 		.4byte	.LVL68
 4902 02cb 08000000 		.4byte	.LVL69
 4903 02cf 0200     		.2byte	0x2
 4904 02d1 30       		.byte	0x30
 4905 02d2 9F       		.byte	0x9f
 4906 02d3 08000000 		.4byte	.LVL69
 4907 02d7 1C000000 		.4byte	.LVL74
 4908 02db 0100     		.2byte	0x1
 4909 02dd 55       		.byte	0x55
 4910 02de 1C000000 		.4byte	.LVL74
 4911 02e2 1E000000 		.4byte	.LFE59
 4912 02e6 0100     		.2byte	0x1
 4913 02e8 50       		.byte	0x50
 4914 02e9 00000000 		.4byte	0
 4915 02ed 00000000 		.4byte	0
 4916              	.LLST24:
 4917 02f1 00000000 		.4byte	.LVL75
 4918 02f5 04000000 		.4byte	.LVL77
 4919 02f9 0100     		.2byte	0x1
 4920 02fb 50       		.byte	0x50
 4921 02fc 04000000 		.4byte	.LVL77
 4922 0300 1C000000 		.4byte	.LFE60
 4923 0304 0400     		.2byte	0x4
 4924 0306 F3       		.byte	0xf3
 4925 0307 01       		.uleb128 0x1
 4926 0308 50       		.byte	0x50
 4927 0309 9F       		.byte	0x9f
 4928 030a 00000000 		.4byte	0
 4929 030e 00000000 		.4byte	0
 4930              	.LLST25:
 4931 0312 02000000 		.4byte	.LVL76
 4932 0316 04000000 		.4byte	.LVL77
 4933 031a 0200     		.2byte	0x2
 4934 031c 30       		.byte	0x30
 4935 031d 9F       		.byte	0x9f
ARM GAS  C:\Users\Mykola\AppData\Local\Temp\ccSL9DbN.s 			page 139


 4936 031e 04000000 		.4byte	.LVL77
 4937 0322 10000000 		.4byte	.LVL79
 4938 0326 0100     		.2byte	0x1
 4939 0328 54       		.byte	0x54
 4940 0329 12000000 		.4byte	.LVL80
 4941 032d 16000000 		.4byte	.LVL81
 4942 0331 0100     		.2byte	0x1
 4943 0333 54       		.byte	0x54
 4944 0334 00000000 		.4byte	0
 4945 0338 00000000 		.4byte	0
 4946              	.LLST26:
 4947 033c 00000000 		.4byte	.LVL82
 4948 0340 04000000 		.4byte	.LVL84
 4949 0344 0100     		.2byte	0x1
 4950 0346 50       		.byte	0x50
 4951 0347 04000000 		.4byte	.LVL84
 4952 034b 1C000000 		.4byte	.LFE61
 4953 034f 0400     		.2byte	0x4
 4954 0351 F3       		.byte	0xf3
 4955 0352 01       		.uleb128 0x1
 4956 0353 50       		.byte	0x50
 4957 0354 9F       		.byte	0x9f
 4958 0355 00000000 		.4byte	0
 4959 0359 00000000 		.4byte	0
 4960              	.LLST27:
 4961 035d 02000000 		.4byte	.LVL83
 4962 0361 04000000 		.4byte	.LVL84
 4963 0365 0200     		.2byte	0x2
 4964 0367 30       		.byte	0x30
 4965 0368 9F       		.byte	0x9f
 4966 0369 04000000 		.4byte	.LVL84
 4967 036d 10000000 		.4byte	.LVL86
 4968 0371 0100     		.2byte	0x1
 4969 0373 54       		.byte	0x54
 4970 0374 12000000 		.4byte	.LVL87
 4971 0378 16000000 		.4byte	.LVL88
 4972 037c 0100     		.2byte	0x1
 4973 037e 54       		.byte	0x54
 4974 037f 00000000 		.4byte	0
 4975 0383 00000000 		.4byte	0
 4976              	.LLST28:
 4977 0387 00000000 		.4byte	.LVL89
 4978 038b 0C000000 		.4byte	.LVL92
 4979 038f 0100     		.2byte	0x1
 4980 0391 50       		.byte	0x50
 4981 0392 0C000000 		.4byte	.LVL92
 4982 0396 2C000000 		.4byte	.LFE62
 4983 039a 0400     		.2byte	0x4
 4984 039c F3       		.byte	0xf3
 4985 039d 01       		.uleb128 0x1
 4986 039e 50       		.byte	0x50
 4987 039f 9F       		.byte	0x9f
 4988 03a0 00000000 		.4byte	0
 4989 03a4 00000000 		.4byte	0
 4990              	.LLST29:
 4991 03a8 08000000 		.4byte	.LVL91
 4992 03ac 10000000 		.4byte	.LVL93
ARM GAS  C:\Users\Mykola\AppData\Local\Temp\ccSL9DbN.s 			page 140


 4993 03b0 0200     		.2byte	0x2
 4994 03b2 30       		.byte	0x30
 4995 03b3 9F       		.byte	0x9f
 4996 03b4 10000000 		.4byte	.LVL93
 4997 03b8 20000000 		.4byte	.LVL96
 4998 03bc 0100     		.2byte	0x1
 4999 03be 53       		.byte	0x53
 5000 03bf 22000000 		.4byte	.LVL97
 5001 03c3 2C000000 		.4byte	.LFE62
 5002 03c7 0100     		.2byte	0x1
 5003 03c9 53       		.byte	0x53
 5004 03ca 00000000 		.4byte	0
 5005 03ce 00000000 		.4byte	0
 5006              	.LLST30:
 5007 03d2 02000000 		.4byte	.LVL90
 5008 03d6 10000000 		.4byte	.LVL93
 5009 03da 0300     		.2byte	0x3
 5010 03dc 09       		.byte	0x9
 5011 03dd FF       		.byte	0xff
 5012 03de 9F       		.byte	0x9f
 5013 03df 10000000 		.4byte	.LVL93
 5014 03e3 2C000000 		.4byte	.LFE62
 5015 03e7 0100     		.2byte	0x1
 5016 03e9 50       		.byte	0x50
 5017 03ea 00000000 		.4byte	0
 5018 03ee 00000000 		.4byte	0
 5019              	.LLST31:
 5020 03f2 02000000 		.4byte	.LVL90
 5021 03f6 10000000 		.4byte	.LVL93
 5022 03fa 0200     		.2byte	0x2
 5023 03fc 30       		.byte	0x30
 5024 03fd 9F       		.byte	0x9f
 5025 03fe 10000000 		.4byte	.LVL93
 5026 0402 1C000000 		.4byte	.LVL94
 5027 0406 0100     		.2byte	0x1
 5028 0408 56       		.byte	0x56
 5029 0409 1E000000 		.4byte	.LVL95
 5030 040d 26000000 		.4byte	.LVL99
 5031 0411 0100     		.2byte	0x1
 5032 0413 56       		.byte	0x56
 5033 0414 00000000 		.4byte	0
 5034 0418 00000000 		.4byte	0
 5035              	.LLST32:
 5036 041c 08000000 		.4byte	.LVL91
 5037 0420 26000000 		.4byte	.LVL98
 5038 0424 0100     		.2byte	0x1
 5039 0426 55       		.byte	0x55
 5040 0427 00000000 		.4byte	0
 5041 042b 00000000 		.4byte	0
 5042              	.LLST33:
 5043 042f 00000000 		.4byte	.LVL100
 5044 0433 0E000000 		.4byte	.LVL102
 5045 0437 0100     		.2byte	0x1
 5046 0439 50       		.byte	0x50
 5047 043a 0E000000 		.4byte	.LVL102
 5048 043e E4000000 		.4byte	.LFE63
 5049 0442 0400     		.2byte	0x4
ARM GAS  C:\Users\Mykola\AppData\Local\Temp\ccSL9DbN.s 			page 141


 5050 0444 F3       		.byte	0xf3
 5051 0445 01       		.uleb128 0x1
 5052 0446 50       		.byte	0x50
 5053 0447 9F       		.byte	0x9f
 5054 0448 00000000 		.4byte	0
 5055 044c 00000000 		.4byte	0
 5056              	.LLST34:
 5057 0450 00000000 		.4byte	.LVL100
 5058 0454 14000000 		.4byte	.LVL104
 5059 0458 0100     		.2byte	0x1
 5060 045a 51       		.byte	0x51
 5061 045b 14000000 		.4byte	.LVL104
 5062 045f E4000000 		.4byte	.LFE63
 5063 0463 0400     		.2byte	0x4
 5064 0465 F3       		.byte	0xf3
 5065 0466 01       		.uleb128 0x1
 5066 0467 51       		.byte	0x51
 5067 0468 9F       		.byte	0x9f
 5068 0469 00000000 		.4byte	0
 5069 046d 00000000 		.4byte	0
 5070              	.LLST35:
 5071 0471 00000000 		.4byte	.LVL100
 5072 0475 2E000000 		.4byte	.LVL109
 5073 0479 0100     		.2byte	0x1
 5074 047b 52       		.byte	0x52
 5075 047c 2E000000 		.4byte	.LVL109
 5076 0480 E4000000 		.4byte	.LFE63
 5077 0484 0400     		.2byte	0x4
 5078 0486 F3       		.byte	0xf3
 5079 0487 01       		.uleb128 0x1
 5080 0488 52       		.byte	0x52
 5081 0489 9F       		.byte	0x9f
 5082 048a 00000000 		.4byte	0
 5083 048e 00000000 		.4byte	0
 5084              	.LLST36:
 5085 0492 00000000 		.4byte	.LVL100
 5086 0496 0C000000 		.4byte	.LVL101
 5087 049a 0100     		.2byte	0x1
 5088 049c 53       		.byte	0x53
 5089 049d 0C000000 		.4byte	.LVL101
 5090 04a1 E4000000 		.4byte	.LFE63
 5091 04a5 0400     		.2byte	0x4
 5092 04a7 F3       		.byte	0xf3
 5093 04a8 01       		.uleb128 0x1
 5094 04a9 53       		.byte	0x53
 5095 04aa 9F       		.byte	0x9f
 5096 04ab 00000000 		.4byte	0
 5097 04af 00000000 		.4byte	0
 5098              	.LLST37:
 5099 04b3 00000000 		.4byte	.LVL100
 5100 04b7 0C000000 		.4byte	.LVL101
 5101 04bb 0200     		.2byte	0x2
 5102 04bd 91       		.byte	0x91
 5103 04be 00       		.sleb128 0
 5104 04bf 0C000000 		.4byte	.LVL101
 5105 04c3 10000000 		.4byte	.LVL103
 5106 04c7 0200     		.2byte	0x2
ARM GAS  C:\Users\Mykola\AppData\Local\Temp\ccSL9DbN.s 			page 142


 5107 04c9 73       		.byte	0x73
 5108 04ca 00       		.sleb128 0
 5109 04cb 10000000 		.4byte	.LVL103
 5110 04cf E4000000 		.4byte	.LFE63
 5111 04d3 0200     		.2byte	0x2
 5112 04d5 91       		.byte	0x91
 5113 04d6 00       		.sleb128 0
 5114 04d7 00000000 		.4byte	0
 5115 04db 00000000 		.4byte	0
 5116              	.LLST38:
 5117 04df 14000000 		.4byte	.LVL104
 5118 04e3 1C000000 		.4byte	.LVL105
 5119 04e7 0200     		.2byte	0x2
 5120 04e9 30       		.byte	0x30
 5121 04ea 9F       		.byte	0x9f
 5122 04eb 1C000000 		.4byte	.LVL105
 5123 04ef 1E000000 		.4byte	.LVL106
 5124 04f3 0100     		.2byte	0x1
 5125 04f5 56       		.byte	0x56
 5126 04f6 1E000000 		.4byte	.LVL106
 5127 04fa 20000000 		.4byte	.LVL107
 5128 04fe 0200     		.2byte	0x2
 5129 0500 30       		.byte	0x30
 5130 0501 9F       		.byte	0x9f
 5131 0502 20000000 		.4byte	.LVL107
 5132 0506 38000000 		.4byte	.LVL110
 5133 050a 0100     		.2byte	0x1
 5134 050c 56       		.byte	0x56
 5135 050d 44000000 		.4byte	.LVL111
 5136 0511 5E000000 		.4byte	.LVL114
 5137 0515 0100     		.2byte	0x1
 5138 0517 56       		.byte	0x56
 5139 0518 00000000 		.4byte	0
 5140 051c 00000000 		.4byte	0
 5141              	.LLST39:
 5142 0520 24000000 		.4byte	.LVL108
 5143 0524 DC000000 		.4byte	.LVL127
 5144 0528 0100     		.2byte	0x1
 5145 052a 55       		.byte	0x55
 5146 052b 00000000 		.4byte	0
 5147 052f 00000000 		.4byte	0
 5148              	.LLST40:
 5149 0533 B8000000 		.4byte	.LVL116
 5150 0537 BE000000 		.4byte	.LVL118
 5151 053b 0100     		.2byte	0x1
 5152 053d 50       		.byte	0x50
 5153 053e BE000000 		.4byte	.LVL118
 5154 0542 C1000000 		.4byte	.LVL119-1
 5155 0546 0E00     		.2byte	0xe
 5156 0548 72       		.byte	0x72
 5157 0549 00       		.sleb128 0
 5158 054a 03       		.byte	0x3
 5159 054b 24000000 		.4byte	capsense_centroid.5435
 5160 054f 94       		.byte	0x94
 5161 0550 01       		.byte	0x1
 5162 0551 08       		.byte	0x8
 5163 0552 FF       		.byte	0xff
ARM GAS  C:\Users\Mykola\AppData\Local\Temp\ccSL9DbN.s 			page 143


 5164 0553 1A       		.byte	0x1a
 5165 0554 1C       		.byte	0x1c
 5166 0555 9F       		.byte	0x9f
 5167 0556 00000000 		.4byte	0
 5168 055a 00000000 		.4byte	0
 5169              	.LLST41:
 5170 055e BC000000 		.4byte	.LVL117
 5171 0562 C1000000 		.4byte	.LVL119-1
 5172 0566 0100     		.2byte	0x1
 5173 0568 51       		.byte	0x51
 5174 0569 C6000000 		.4byte	.LVL120
 5175 056d CE000000 		.4byte	.LVL121
 5176 0571 0100     		.2byte	0x1
 5177 0573 54       		.byte	0x54
 5178 0574 CE000000 		.4byte	.LVL121
 5179 0578 D6000000 		.4byte	.LVL122
 5180 057c 0100     		.2byte	0x1
 5181 057e 50       		.byte	0x50
 5182 057f D6000000 		.4byte	.LVL122
 5183 0583 D8000000 		.4byte	.LVL123
 5184 0587 0500     		.2byte	0x5
 5185 0589 70       		.byte	0x70
 5186 058a 80827E   		.sleb128 -32512
 5187 058d 9F       		.byte	0x9f
 5188 058e D8000000 		.4byte	.LVL123
 5189 0592 DC000000 		.4byte	.LVL125
 5190 0596 0C00     		.2byte	0xc
 5191 0598 7D       		.byte	0x7d
 5192 0599 00       		.sleb128 0
 5193 059a 94       		.byte	0x94
 5194 059b 02       		.byte	0x2
 5195 059c 40       		.byte	0x40
 5196 059d 24       		.byte	0x24
 5197 059e 40       		.byte	0x40
 5198 059f 26       		.byte	0x26
 5199 05a0 74       		.byte	0x74
 5200 05a1 00       		.sleb128 0
 5201 05a2 1E       		.byte	0x1e
 5202 05a3 9F       		.byte	0x9f
 5203 05a4 DC000000 		.4byte	.LVL125
 5204 05a8 DC000000 		.4byte	.LVL126
 5205 05ac 0C00     		.2byte	0xc
 5206 05ae 91       		.byte	0x91
 5207 05af 60       		.sleb128 -32
 5208 05b0 94       		.byte	0x94
 5209 05b1 02       		.byte	0x2
 5210 05b2 40       		.byte	0x40
 5211 05b3 24       		.byte	0x24
 5212 05b4 40       		.byte	0x40
 5213 05b5 26       		.byte	0x26
 5214 05b6 74       		.byte	0x74
 5215 05b7 00       		.sleb128 0
 5216 05b8 1E       		.byte	0x1e
 5217 05b9 9F       		.byte	0x9f
 5218 05ba 00000000 		.4byte	0
 5219 05be 00000000 		.4byte	0
 5220              	.LLST42:
ARM GAS  C:\Users\Mykola\AppData\Local\Temp\ccSL9DbN.s 			page 144


 5221 05c2 14000000 		.4byte	.LVL104
 5222 05c6 4E000000 		.4byte	.LVL112
 5223 05ca 0100     		.2byte	0x1
 5224 05cc 51       		.byte	0x51
 5225 05cd 5C000000 		.4byte	.LVL113
 5226 05d1 6A000000 		.4byte	.LVL115
 5227 05d5 0100     		.2byte	0x1
 5228 05d7 51       		.byte	0x51
 5229 05d8 00000000 		.4byte	0
 5230 05dc 00000000 		.4byte	0
 5231              	.LLST43:
 5232 05e0 00000000 		.4byte	.LVL128
 5233 05e4 0C000000 		.4byte	.LVL130
 5234 05e8 0100     		.2byte	0x1
 5235 05ea 50       		.byte	0x50
 5236 05eb 0C000000 		.4byte	.LVL130
 5237 05ef 30000000 		.4byte	.LVL136
 5238 05f3 0100     		.2byte	0x1
 5239 05f5 54       		.byte	0x54
 5240 05f6 30000000 		.4byte	.LVL136
 5241 05fa 40000000 		.4byte	.LFE65
 5242 05fe 0400     		.2byte	0x4
 5243 0600 F3       		.byte	0xf3
 5244 0601 01       		.uleb128 0x1
 5245 0602 50       		.byte	0x50
 5246 0603 9F       		.byte	0x9f
 5247 0604 00000000 		.4byte	0
 5248 0608 00000000 		.4byte	0
 5249              	.LLST44:
 5250 060c 12000000 		.4byte	.LVL131
 5251 0610 27000000 		.4byte	.LVL132-1
 5252 0614 0100     		.2byte	0x1
 5253 0616 50       		.byte	0x50
 5254 0617 2C000000 		.4byte	.LVL134
 5255 061b 2E000000 		.4byte	.LVL135
 5256 061f 0100     		.2byte	0x1
 5257 0621 50       		.byte	0x50
 5258 0622 00000000 		.4byte	0
 5259 0626 00000000 		.4byte	0
 5260              	.LLST45:
 5261 062a 2A000000 		.4byte	.LVL133
 5262 062e 2C000000 		.4byte	.LVL134
 5263 0632 0100     		.2byte	0x1
 5264 0634 50       		.byte	0x50
 5265 0635 2E000000 		.4byte	.LVL135
 5266 0639 40000000 		.4byte	.LFE65
 5267 063d 0100     		.2byte	0x1
 5268 063f 50       		.byte	0x50
 5269 0640 00000000 		.4byte	0
 5270 0644 00000000 		.4byte	0
 5271              	.LLST46:
 5272 0648 00000000 		.4byte	.LVL137
 5273 064c 08000000 		.4byte	.LVL138
 5274 0650 0100     		.2byte	0x1
 5275 0652 50       		.byte	0x50
 5276 0653 08000000 		.4byte	.LVL138
 5277 0657 0A000000 		.4byte	.LVL139
ARM GAS  C:\Users\Mykola\AppData\Local\Temp\ccSL9DbN.s 			page 145


 5278 065b 0400     		.2byte	0x4
 5279 065d F3       		.byte	0xf3
 5280 065e 01       		.uleb128 0x1
 5281 065f 50       		.byte	0x50
 5282 0660 9F       		.byte	0x9f
 5283 0661 0A000000 		.4byte	.LVL139
 5284 0665 1A000000 		.4byte	.LVL141
 5285 0669 0100     		.2byte	0x1
 5286 066b 50       		.byte	0x50
 5287 066c 00000000 		.4byte	0
 5288 0670 00000000 		.4byte	0
 5289              	.LLST47:
 5290 0674 00000000 		.4byte	.LVL137
 5291 0678 0A000000 		.4byte	.LVL139
 5292 067c 0100     		.2byte	0x1
 5293 067e 51       		.byte	0x51
 5294 067f 0A000000 		.4byte	.LVL139
 5295 0683 1C000000 		.4byte	.LFE66
 5296 0687 0100     		.2byte	0x1
 5297 0689 51       		.byte	0x51
 5298 068a 00000000 		.4byte	0
 5299 068e 00000000 		.4byte	0
 5300              	.LLST48:
 5301 0692 00000000 		.4byte	.LVL142
 5302 0696 06000000 		.4byte	.LVL145
 5303 069a 0100     		.2byte	0x1
 5304 069c 50       		.byte	0x50
 5305 069d 06000000 		.4byte	.LVL145
 5306 06a1 0C000000 		.4byte	.LFE67
 5307 06a5 0400     		.2byte	0x4
 5308 06a7 F3       		.byte	0xf3
 5309 06a8 01       		.uleb128 0x1
 5310 06a9 50       		.byte	0x50
 5311 06aa 9F       		.byte	0x9f
 5312 06ab 00000000 		.4byte	0
 5313 06af 00000000 		.4byte	0
 5314              	.LLST49:
 5315 06b3 00000000 		.4byte	.LVL142
 5316 06b7 04000000 		.4byte	.LVL144
 5317 06bb 0100     		.2byte	0x1
 5318 06bd 51       		.byte	0x51
 5319 06be 04000000 		.4byte	.LVL144
 5320 06c2 0C000000 		.4byte	.LFE67
 5321 06c6 0400     		.2byte	0x4
 5322 06c8 F3       		.byte	0xf3
 5323 06c9 01       		.uleb128 0x1
 5324 06ca 51       		.byte	0x51
 5325 06cb 9F       		.byte	0x9f
 5326 06cc 00000000 		.4byte	0
 5327 06d0 00000000 		.4byte	0
 5328              	.LLST50:
 5329 06d4 02000000 		.4byte	.LVL143
 5330 06d8 06000000 		.4byte	.LVL145
 5331 06dc 0100     		.2byte	0x1
 5332 06de 53       		.byte	0x53
 5333 06df 06000000 		.4byte	.LVL145
 5334 06e3 0A000000 		.4byte	.LVL147
ARM GAS  C:\Users\Mykola\AppData\Local\Temp\ccSL9DbN.s 			page 146


 5335 06e7 0100     		.2byte	0x1
 5336 06e9 50       		.byte	0x50
 5337 06ea 0A000000 		.4byte	.LVL147
 5338 06ee 0C000000 		.4byte	.LFE67
 5339 06f2 0800     		.2byte	0x8
 5340 06f4 71       		.byte	0x71
 5341 06f5 00       		.sleb128 0
 5342 06f6 73       		.byte	0x73
 5343 06f7 00       		.sleb128 0
 5344 06f8 22       		.byte	0x22
 5345 06f9 32       		.byte	0x32
 5346 06fa 25       		.byte	0x25
 5347 06fb 9F       		.byte	0x9f
 5348 06fc 00000000 		.4byte	0
 5349 0700 00000000 		.4byte	0
 5350              	.LLST51:
 5351 0704 00000000 		.4byte	.LVL148
 5352 0708 2A000000 		.4byte	.LVL151
 5353 070c 0100     		.2byte	0x1
 5354 070e 50       		.byte	0x50
 5355 070f 2A000000 		.4byte	.LVL151
 5356 0713 DA000000 		.4byte	.LVL168
 5357 0717 0100     		.2byte	0x1
 5358 0719 54       		.byte	0x54
 5359 071a DA000000 		.4byte	.LVL168
 5360 071e E0000000 		.4byte	.LVL169
 5361 0722 0400     		.2byte	0x4
 5362 0724 F3       		.byte	0xf3
 5363 0725 01       		.uleb128 0x1
 5364 0726 50       		.byte	0x50
 5365 0727 9F       		.byte	0x9f
 5366 0728 E0000000 		.4byte	.LVL169
 5367 072c E4000000 		.4byte	.LVL171
 5368 0730 0100     		.2byte	0x1
 5369 0732 54       		.byte	0x54
 5370 0733 E4000000 		.4byte	.LVL171
 5371 0737 E8000000 		.4byte	.LVL172
 5372 073b 0400     		.2byte	0x4
 5373 073d F3       		.byte	0xf3
 5374 073e 01       		.uleb128 0x1
 5375 073f 50       		.byte	0x50
 5376 0740 9F       		.byte	0x9f
 5377 0741 E8000000 		.4byte	.LVL172
 5378 0745 EC000000 		.4byte	.LVL173
 5379 0749 0100     		.2byte	0x1
 5380 074b 54       		.byte	0x54
 5381 074c EC000000 		.4byte	.LVL173
 5382 0750 1C010000 		.4byte	.LFE39
 5383 0754 0400     		.2byte	0x4
 5384 0756 F3       		.byte	0xf3
 5385 0757 01       		.uleb128 0x1
 5386 0758 50       		.byte	0x50
 5387 0759 9F       		.byte	0x9f
 5388 075a 00000000 		.4byte	0
 5389 075e 00000000 		.4byte	0
 5390              	.LLST52:
 5391 0762 AA000000 		.4byte	.LVL161
ARM GAS  C:\Users\Mykola\AppData\Local\Temp\ccSL9DbN.s 			page 147


 5392 0766 B4000000 		.4byte	.LVL163
 5393 076a 0100     		.2byte	0x1
 5394 076c 53       		.byte	0x53
 5395 076d B4000000 		.4byte	.LVL163
 5396 0771 C4000000 		.4byte	.LVL165
 5397 0775 0100     		.2byte	0x1
 5398 0777 57       		.byte	0x57
 5399 0778 00000000 		.4byte	0
 5400 077c 00000000 		.4byte	0
 5401              	.LLST53:
 5402 0780 52000000 		.4byte	.LVL156
 5403 0784 58000000 		.4byte	.LVL157
 5404 0788 0200     		.2byte	0x2
 5405 078a 31       		.byte	0x31
 5406 078b 9F       		.byte	0x9f
 5407 078c 5C000000 		.4byte	.LVL158
 5408 0790 60000000 		.4byte	.LVL159
 5409 0794 0200     		.2byte	0x2
 5410 0796 30       		.byte	0x30
 5411 0797 9F       		.byte	0x9f
 5412 0798 60000000 		.4byte	.LVL159
 5413 079c D2000000 		.4byte	.LVL166
 5414 07a0 0100     		.2byte	0x1
 5415 07a2 58       		.byte	0x58
 5416 07a3 D2000000 		.4byte	.LVL166
 5417 07a7 D8000000 		.4byte	.LVL167
 5418 07ab 0100     		.2byte	0x1
 5419 07ad 53       		.byte	0x53
 5420 07ae D8000000 		.4byte	.LVL167
 5421 07b2 E0000000 		.4byte	.LVL169
 5422 07b6 0100     		.2byte	0x1
 5423 07b8 58       		.byte	0x58
 5424 07b9 E0000000 		.4byte	.LVL169
 5425 07bd E2000000 		.4byte	.LVL170
 5426 07c1 0100     		.2byte	0x1
 5427 07c3 53       		.byte	0x53
 5428 07c4 E2000000 		.4byte	.LVL170
 5429 07c8 F2000000 		.4byte	.LVL175
 5430 07cc 0100     		.2byte	0x1
 5431 07ce 58       		.byte	0x58
 5432 07cf 00000000 		.4byte	0
 5433 07d3 00000000 		.4byte	0
 5434              	.LLST54:
 5435 07d7 52000000 		.4byte	.LVL156
 5436 07db 58000000 		.4byte	.LVL157
 5437 07df 0100     		.2byte	0x1
 5438 07e1 55       		.byte	0x55
 5439 07e2 5C000000 		.4byte	.LVL158
 5440 07e6 F2000000 		.4byte	.LVL174
 5441 07ea 0100     		.2byte	0x1
 5442 07ec 55       		.byte	0x55
 5443 07ed 00000000 		.4byte	0
 5444 07f1 00000000 		.4byte	0
 5445              	.LLST55:
 5446 07f5 1A000000 		.4byte	.LVL150
 5447 07f9 30000000 		.4byte	.LVL153
 5448 07fd 0100     		.2byte	0x1
ARM GAS  C:\Users\Mykola\AppData\Local\Temp\ccSL9DbN.s 			page 148


 5449 07ff 57       		.byte	0x57
 5450 0800 30000000 		.4byte	.LVL153
 5451 0804 34000000 		.4byte	.LVL154
 5452 0808 0100     		.2byte	0x1
 5453 080a 50       		.byte	0x50
 5454 080b 34000000 		.4byte	.LVL154
 5455 080f B4000000 		.4byte	.LVL163
 5456 0813 0100     		.2byte	0x1
 5457 0815 57       		.byte	0x57
 5458 0816 00000000 		.4byte	0
 5459 081a 00000000 		.4byte	0
 5460              	.LLST56:
 5461 081e 00000000 		.4byte	.LVL176
 5462 0822 07000000 		.4byte	.LVL177-1
 5463 0826 0100     		.2byte	0x1
 5464 0828 50       		.byte	0x50
 5465 0829 07000000 		.4byte	.LVL177-1
 5466 082d 0E000000 		.4byte	.LVL179
 5467 0831 0100     		.2byte	0x1
 5468 0833 54       		.byte	0x54
 5469 0834 0E000000 		.4byte	.LVL179
 5470 0838 10000000 		.4byte	.LFE40
 5471 083c 0400     		.2byte	0x4
 5472 083e F3       		.byte	0xf3
 5473 083f 01       		.uleb128 0x1
 5474 0840 50       		.byte	0x50
 5475 0841 9F       		.byte	0x9f
 5476 0842 00000000 		.4byte	0
 5477 0846 00000000 		.4byte	0
 5478              	.LLST57:
 5479 084a 02000000 		.4byte	.LVL180
 5480 084e 06000000 		.4byte	.LVL181
 5481 0852 0200     		.2byte	0x2
 5482 0854 30       		.byte	0x30
 5483 0855 9F       		.byte	0x9f
 5484 0856 06000000 		.4byte	.LVL181
 5485 085a 1E000000 		.4byte	.LVL186
 5486 085e 0100     		.2byte	0x1
 5487 0860 54       		.byte	0x54
 5488 0861 00000000 		.4byte	0
 5489 0865 00000000 		.4byte	0
 5490              	.LLST58:
 5491 0869 0E000000 		.4byte	.LVL182
 5492 086d 14000000 		.4byte	.LVL183
 5493 0871 0100     		.2byte	0x1
 5494 0873 50       		.byte	0x50
 5495 0874 00000000 		.4byte	0
 5496 0878 00000000 		.4byte	0
 5497              	.LLST59:
 5498 087c 00000000 		.4byte	.LVL187
 5499 0880 06000000 		.4byte	.LVL189
 5500 0884 0100     		.2byte	0x1
 5501 0886 50       		.byte	0x50
 5502 0887 06000000 		.4byte	.LVL189
 5503 088b 24000000 		.4byte	.LFE42
 5504 088f 0400     		.2byte	0x4
 5505 0891 F3       		.byte	0xf3
ARM GAS  C:\Users\Mykola\AppData\Local\Temp\ccSL9DbN.s 			page 149


 5506 0892 01       		.uleb128 0x1
 5507 0893 50       		.byte	0x50
 5508 0894 9F       		.byte	0x9f
 5509 0895 00000000 		.4byte	0
 5510 0899 00000000 		.4byte	0
 5511              	.LLST60:
 5512 089d 02000000 		.4byte	.LVL188
 5513 08a1 06000000 		.4byte	.LVL189
 5514 08a5 0200     		.2byte	0x2
 5515 08a7 30       		.byte	0x30
 5516 08a8 9F       		.byte	0x9f
 5517 08a9 06000000 		.4byte	.LVL189
 5518 08ad 1E000000 		.4byte	.LVL194
 5519 08b1 0100     		.2byte	0x1
 5520 08b3 54       		.byte	0x54
 5521 08b4 00000000 		.4byte	0
 5522 08b8 00000000 		.4byte	0
 5523              	.LLST61:
 5524 08bc 0E000000 		.4byte	.LVL190
 5525 08c0 14000000 		.4byte	.LVL191
 5526 08c4 0100     		.2byte	0x1
 5527 08c6 50       		.byte	0x50
 5528 08c7 00000000 		.4byte	0
 5529 08cb 00000000 		.4byte	0
 5530              	.LLST62:
 5531 08cf 00000000 		.4byte	.LVL195
 5532 08d3 12000000 		.4byte	.LVL197
 5533 08d7 0100     		.2byte	0x1
 5534 08d9 50       		.byte	0x50
 5535 08da 12000000 		.4byte	.LVL197
 5536 08de 50000000 		.4byte	.LVL205
 5537 08e2 0100     		.2byte	0x1
 5538 08e4 54       		.byte	0x54
 5539 08e5 50000000 		.4byte	.LVL205
 5540 08e9 5E000000 		.4byte	.LVL208
 5541 08ed 0400     		.2byte	0x4
 5542 08ef F3       		.byte	0xf3
 5543 08f0 01       		.uleb128 0x1
 5544 08f1 50       		.byte	0x50
 5545 08f2 9F       		.byte	0x9f
 5546 08f3 5E000000 		.4byte	.LVL208
 5547 08f7 68000000 		.4byte	.LVL210
 5548 08fb 0100     		.2byte	0x1
 5549 08fd 54       		.byte	0x54
 5550 08fe 68000000 		.4byte	.LVL210
 5551 0902 7C000000 		.4byte	.LFE64
 5552 0906 0400     		.2byte	0x4
 5553 0908 F3       		.byte	0xf3
 5554 0909 01       		.uleb128 0x1
 5555 090a 50       		.byte	0x50
 5556 090b 9F       		.byte	0x9f
 5557 090c 00000000 		.4byte	0
 5558 0910 00000000 		.4byte	0
 5559              	.LLST63:
 5560 0914 36000000 		.4byte	.LVL201
 5561 0918 44000000 		.4byte	.LVL202
 5562 091c 0100     		.2byte	0x1
ARM GAS  C:\Users\Mykola\AppData\Local\Temp\ccSL9DbN.s 			page 150


 5563 091e 53       		.byte	0x53
 5564 091f 44000000 		.4byte	.LVL202
 5565 0923 48000000 		.4byte	.LVL203
 5566 0927 0300     		.2byte	0x3
 5567 0929 75       		.byte	0x75
 5568 092a 01       		.sleb128 1
 5569 092b 9F       		.byte	0x9f
 5570 092c 4E000000 		.4byte	.LVL204
 5571 0930 57000000 		.4byte	.LVL206-1
 5572 0934 0100     		.2byte	0x1
 5573 0936 53       		.byte	0x53
 5574 0937 57000000 		.4byte	.LVL206-1
 5575 093b 5E000000 		.4byte	.LVL208
 5576 093f 0300     		.2byte	0x3
 5577 0941 75       		.byte	0x75
 5578 0942 01       		.sleb128 1
 5579 0943 9F       		.byte	0x9f
 5580 0944 00000000 		.4byte	0
 5581 0948 00000000 		.4byte	0
 5582              	.LLST64:
 5583 094c 0C000000 		.4byte	.LVL196
 5584 0950 48000000 		.4byte	.LVL203
 5585 0954 0100     		.2byte	0x1
 5586 0956 55       		.byte	0x55
 5587 0957 4E000000 		.4byte	.LVL204
 5588 095b 62000000 		.4byte	.LVL209
 5589 095f 0100     		.2byte	0x1
 5590 0961 55       		.byte	0x55
 5591 0962 00000000 		.4byte	0
 5592 0966 00000000 		.4byte	0
 5593              	.LLST65:
 5594 096a 18000000 		.4byte	.LVL198
 5595 096e 2D000000 		.4byte	.LVL199-1
 5596 0972 0100     		.2byte	0x1
 5597 0974 50       		.byte	0x50
 5598 0975 5E000000 		.4byte	.LVL208
 5599 0979 68000000 		.4byte	.LVL210
 5600 097d 0100     		.2byte	0x1
 5601 097f 50       		.byte	0x50
 5602 0980 00000000 		.4byte	0
 5603 0984 00000000 		.4byte	0
 5604              	.LLST66:
 5605 0988 32000000 		.4byte	.LVL200
 5606 098c 57000000 		.4byte	.LVL206-1
 5607 0990 0100     		.2byte	0x1
 5608 0992 50       		.byte	0x50
 5609 0993 5A000000 		.4byte	.LVL207
 5610 0997 5E000000 		.4byte	.LVL208
 5611 099b 0100     		.2byte	0x1
 5612 099d 53       		.byte	0x53
 5613 099e 5E000000 		.4byte	.LVL208
 5614 09a2 68000000 		.4byte	.LVL210
 5615 09a6 0300     		.2byte	0x3
 5616 09a8 09       		.byte	0x9
 5617 09a9 FF       		.byte	0xff
 5618 09aa 9F       		.byte	0x9f
 5619 09ab 68000000 		.4byte	.LVL210
ARM GAS  C:\Users\Mykola\AppData\Local\Temp\ccSL9DbN.s 			page 151


 5620 09af 7C000000 		.4byte	.LFE64
 5621 09b3 0100     		.2byte	0x1
 5622 09b5 50       		.byte	0x50
 5623 09b6 00000000 		.4byte	0
 5624 09ba 00000000 		.4byte	0
 5625              	.LLST67:
 5626 09be 00000000 		.4byte	.LVL211
 5627 09c2 04000000 		.4byte	.LVL212
 5628 09c6 0100     		.2byte	0x1
 5629 09c8 50       		.byte	0x50
 5630 09c9 04000000 		.4byte	.LVL212
 5631 09cd 0C000000 		.4byte	.LFE68
 5632 09d1 0400     		.2byte	0x4
 5633 09d3 F3       		.byte	0xf3
 5634 09d4 01       		.uleb128 0x1
 5635 09d5 50       		.byte	0x50
 5636 09d6 9F       		.byte	0x9f
 5637 09d7 00000000 		.4byte	0
 5638 09db 00000000 		.4byte	0
 5639              	.LLST68:
 5640 09df 00000000 		.4byte	.LVL213
 5641 09e3 04000000 		.4byte	.LVL214
 5642 09e7 0100     		.2byte	0x1
 5643 09e9 50       		.byte	0x50
 5644 09ea 04000000 		.4byte	.LVL214
 5645 09ee 0C000000 		.4byte	.LFE69
 5646 09f2 0400     		.2byte	0x4
 5647 09f4 F3       		.byte	0xf3
 5648 09f5 01       		.uleb128 0x1
 5649 09f6 50       		.byte	0x50
 5650 09f7 9F       		.byte	0x9f
 5651 09f8 00000000 		.4byte	0
 5652 09fc 00000000 		.4byte	0
 5653              	.LLST69:
 5654 0a00 00000000 		.4byte	.LVL215
 5655 0a04 04000000 		.4byte	.LVL216
 5656 0a08 0100     		.2byte	0x1
 5657 0a0a 50       		.byte	0x50
 5658 0a0b 04000000 		.4byte	.LVL216
 5659 0a0f 0C000000 		.4byte	.LFE70
 5660 0a13 0400     		.2byte	0x4
 5661 0a15 F3       		.byte	0xf3
 5662 0a16 01       		.uleb128 0x1
 5663 0a17 50       		.byte	0x50
 5664 0a18 9F       		.byte	0x9f
 5665 0a19 00000000 		.4byte	0
 5666 0a1d 00000000 		.4byte	0
 5667              		.section	.debug_aranges,"",%progbits
 5668 0000 44010000 		.4byte	0x144
 5669 0004 0200     		.2byte	0x2
 5670 0006 00000000 		.4byte	.Ldebug_info0
 5671 000a 04       		.byte	0x4
 5672 000b 00       		.byte	0
 5673 000c 0000     		.2byte	0
 5674 000e 0000     		.2byte	0
 5675 0010 00000000 		.4byte	.LFB35
 5676 0014 24000000 		.4byte	.LFE35-.LFB35
ARM GAS  C:\Users\Mykola\AppData\Local\Temp\ccSL9DbN.s 			page 152


 5677 0018 00000000 		.4byte	.LFB36
 5678 001c 18000000 		.4byte	.LFE36-.LFB36
 5679 0020 00000000 		.4byte	.LFB37
 5680 0024 14000000 		.4byte	.LFE37-.LFB37
 5681 0028 00000000 		.4byte	.LFB38
 5682 002c 30000000 		.4byte	.LFE38-.LFB38
 5683 0030 00000000 		.4byte	.LFB43
 5684 0034 0C000000 		.4byte	.LFE43-.LFB43
 5685 0038 00000000 		.4byte	.LFB44
 5686 003c 0C000000 		.4byte	.LFE44-.LFB44
 5687 0040 00000000 		.4byte	.LFB45
 5688 0044 0C000000 		.4byte	.LFE45-.LFB45
 5689 0048 00000000 		.4byte	.LFB46
 5690 004c 0C000000 		.4byte	.LFE46-.LFB46
 5691 0050 00000000 		.4byte	.LFB47
 5692 0054 0C000000 		.4byte	.LFE47-.LFB47
 5693 0058 00000000 		.4byte	.LFB48
 5694 005c 0C000000 		.4byte	.LFE48-.LFB48
 5695 0060 00000000 		.4byte	.LFB49
 5696 0064 0C000000 		.4byte	.LFE49-.LFB49
 5697 0068 00000000 		.4byte	.LFB50
 5698 006c 0C000000 		.4byte	.LFE50-.LFB50
 5699 0070 00000000 		.4byte	.LFB51
 5700 0074 0C000000 		.4byte	.LFE51-.LFB51
 5701 0078 00000000 		.4byte	.LFB52
 5702 007c 0C000000 		.4byte	.LFE52-.LFB52
 5703 0080 00000000 		.4byte	.LFB53
 5704 0084 0C000000 		.4byte	.LFE53-.LFB53
 5705 0088 00000000 		.4byte	.LFB54
 5706 008c 0C000000 		.4byte	.LFE54-.LFB54
 5707 0090 00000000 		.4byte	.LFB55
 5708 0094 0C000000 		.4byte	.LFE55-.LFB55
 5709 0098 00000000 		.4byte	.LFB56
 5710 009c 0C000000 		.4byte	.LFE56-.LFB56
 5711 00a0 00000000 		.4byte	.LFB57
 5712 00a4 98000000 		.4byte	.LFE57-.LFB57
 5713 00a8 00000000 		.4byte	.LFB58
 5714 00ac 1C000000 		.4byte	.LFE58-.LFB58
 5715 00b0 00000000 		.4byte	.LFB59
 5716 00b4 1E000000 		.4byte	.LFE59-.LFB59
 5717 00b8 00000000 		.4byte	.LFB60
 5718 00bc 1C000000 		.4byte	.LFE60-.LFB60
 5719 00c0 00000000 		.4byte	.LFB61
 5720 00c4 1C000000 		.4byte	.LFE61-.LFB61
 5721 00c8 00000000 		.4byte	.LFB62
 5722 00cc 2C000000 		.4byte	.LFE62-.LFB62
 5723 00d0 00000000 		.4byte	.LFB63
 5724 00d4 E4000000 		.4byte	.LFE63-.LFB63
 5725 00d8 00000000 		.4byte	.LFB65
 5726 00dc 40000000 		.4byte	.LFE65-.LFB65
 5727 00e0 00000000 		.4byte	.LFB66
 5728 00e4 1C000000 		.4byte	.LFE66-.LFB66
 5729 00e8 00000000 		.4byte	.LFB67
 5730 00ec 0C000000 		.4byte	.LFE67-.LFB67
 5731 00f0 00000000 		.4byte	.LFB39
 5732 00f4 1C010000 		.4byte	.LFE39-.LFB39
 5733 00f8 00000000 		.4byte	.LFB40
ARM GAS  C:\Users\Mykola\AppData\Local\Temp\ccSL9DbN.s 			page 153


 5734 00fc 10000000 		.4byte	.LFE40-.LFB40
 5735 0100 00000000 		.4byte	.LFB41
 5736 0104 24000000 		.4byte	.LFE41-.LFB41
 5737 0108 00000000 		.4byte	.LFB42
 5738 010c 24000000 		.4byte	.LFE42-.LFB42
 5739 0110 00000000 		.4byte	.LFB64
 5740 0114 7C000000 		.4byte	.LFE64-.LFB64
 5741 0118 00000000 		.4byte	.LFB68
 5742 011c 0C000000 		.4byte	.LFE68-.LFB68
 5743 0120 00000000 		.4byte	.LFB69
 5744 0124 0C000000 		.4byte	.LFE69-.LFB69
 5745 0128 00000000 		.4byte	.LFB70
 5746 012c 0C000000 		.4byte	.LFE70-.LFB70
 5747 0130 00000000 		.4byte	.LFB71
 5748 0134 0C000000 		.4byte	.LFE71-.LFB71
 5749 0138 00000000 		.4byte	.LFB72
 5750 013c 0C000000 		.4byte	.LFE72-.LFB72
 5751 0140 00000000 		.4byte	0
 5752 0144 00000000 		.4byte	0
 5753              		.section	.debug_ranges,"",%progbits
 5754              	.Ldebug_ranges0:
 5755 0000 00000000 		.4byte	.LFB35
 5756 0004 24000000 		.4byte	.LFE35
 5757 0008 00000000 		.4byte	.LFB36
 5758 000c 18000000 		.4byte	.LFE36
 5759 0010 00000000 		.4byte	.LFB37
 5760 0014 14000000 		.4byte	.LFE37
 5761 0018 00000000 		.4byte	.LFB38
 5762 001c 30000000 		.4byte	.LFE38
 5763 0020 00000000 		.4byte	.LFB43
 5764 0024 0C000000 		.4byte	.LFE43
 5765 0028 00000000 		.4byte	.LFB44
 5766 002c 0C000000 		.4byte	.LFE44
 5767 0030 00000000 		.4byte	.LFB45
 5768 0034 0C000000 		.4byte	.LFE45
 5769 0038 00000000 		.4byte	.LFB46
 5770 003c 0C000000 		.4byte	.LFE46
 5771 0040 00000000 		.4byte	.LFB47
 5772 0044 0C000000 		.4byte	.LFE47
 5773 0048 00000000 		.4byte	.LFB48
 5774 004c 0C000000 		.4byte	.LFE48
 5775 0050 00000000 		.4byte	.LFB49
 5776 0054 0C000000 		.4byte	.LFE49
 5777 0058 00000000 		.4byte	.LFB50
 5778 005c 0C000000 		.4byte	.LFE50
 5779 0060 00000000 		.4byte	.LFB51
 5780 0064 0C000000 		.4byte	.LFE51
 5781 0068 00000000 		.4byte	.LFB52
 5782 006c 0C000000 		.4byte	.LFE52
 5783 0070 00000000 		.4byte	.LFB53
 5784 0074 0C000000 		.4byte	.LFE53
 5785 0078 00000000 		.4byte	.LFB54
 5786 007c 0C000000 		.4byte	.LFE54
 5787 0080 00000000 		.4byte	.LFB55
 5788 0084 0C000000 		.4byte	.LFE55
 5789 0088 00000000 		.4byte	.LFB56
 5790 008c 0C000000 		.4byte	.LFE56
ARM GAS  C:\Users\Mykola\AppData\Local\Temp\ccSL9DbN.s 			page 154


 5791 0090 00000000 		.4byte	.LFB57
 5792 0094 98000000 		.4byte	.LFE57
 5793 0098 00000000 		.4byte	.LFB58
 5794 009c 1C000000 		.4byte	.LFE58
 5795 00a0 00000000 		.4byte	.LFB59
 5796 00a4 1E000000 		.4byte	.LFE59
 5797 00a8 00000000 		.4byte	.LFB60
 5798 00ac 1C000000 		.4byte	.LFE60
 5799 00b0 00000000 		.4byte	.LFB61
 5800 00b4 1C000000 		.4byte	.LFE61
 5801 00b8 00000000 		.4byte	.LFB62
 5802 00bc 2C000000 		.4byte	.LFE62
 5803 00c0 00000000 		.4byte	.LFB63
 5804 00c4 E4000000 		.4byte	.LFE63
 5805 00c8 00000000 		.4byte	.LFB65
 5806 00cc 40000000 		.4byte	.LFE65
 5807 00d0 00000000 		.4byte	.LFB66
 5808 00d4 1C000000 		.4byte	.LFE66
 5809 00d8 00000000 		.4byte	.LFB67
 5810 00dc 0C000000 		.4byte	.LFE67
 5811 00e0 00000000 		.4byte	.LFB39
 5812 00e4 1C010000 		.4byte	.LFE39
 5813 00e8 00000000 		.4byte	.LFB40
 5814 00ec 10000000 		.4byte	.LFE40
 5815 00f0 00000000 		.4byte	.LFB41
 5816 00f4 24000000 		.4byte	.LFE41
 5817 00f8 00000000 		.4byte	.LFB42
 5818 00fc 24000000 		.4byte	.LFE42
 5819 0100 00000000 		.4byte	.LFB64
 5820 0104 7C000000 		.4byte	.LFE64
 5821 0108 00000000 		.4byte	.LFB68
 5822 010c 0C000000 		.4byte	.LFE68
 5823 0110 00000000 		.4byte	.LFB69
 5824 0114 0C000000 		.4byte	.LFE69
 5825 0118 00000000 		.4byte	.LFB70
 5826 011c 0C000000 		.4byte	.LFE70
 5827 0120 00000000 		.4byte	.LFB71
 5828 0124 0C000000 		.4byte	.LFE71
 5829 0128 00000000 		.4byte	.LFB72
 5830 012c 0C000000 		.4byte	.LFE72
 5831 0130 00000000 		.4byte	0
 5832 0134 00000000 		.4byte	0
 5833              		.section	.debug_line,"",%progbits
 5834              	.Ldebug_line0:
 5835 0000 76040000 		.section	.debug_str,"MS",%progbits,1
 5835      02006A00 
 5835      00000201 
 5835      FB0E0D00 
 5835      01010101 
 5836              	.LASF32:
 5837 0000 7363616E 		.ascii	"scanSpeedTbl\000"
 5837      53706565 
 5837      6454626C 
 5837      00
 5838              	.LASF35:
 5839 000d 6E756D62 		.ascii	"numberOfSensors\000"
 5839      65724F66 
ARM GAS  C:\Users\Mykola\AppData\Local\Temp\ccSL9DbN.s 			page 155


 5839      53656E73 
 5839      6F727300 
 5840              	.LASF57:
 5841 001d 63617073 		.ascii	"capsense_GetBaselineData\000"
 5841      656E7365 
 5841      5F476574 
 5841      42617365 
 5841      6C696E65 
 5842              	.LASF61:
 5843 0036 63617073 		.ascii	"capsense_GetFingerThreshold\000"
 5843      656E7365 
 5843      5F476574 
 5843      46696E67 
 5843      65725468 
 5844              	.LASF96:
 5845 0052 63617073 		.ascii	"capsense_centroid\000"
 5845      656E7365 
 5845      5F63656E 
 5845      74726F69 
 5845      6400
 5846              	.LASF39:
 5847 0064 70747247 		.ascii	"ptrGetBitValue\000"
 5847      65744269 
 5847      7456616C 
 5847      756500
 5848              	.LASF46:
 5849 0073 6866636C 		.ascii	"hfclkFreq_MHz\000"
 5849      6B467265 
 5849      715F4D48 
 5849      7A00
 5850              	.LASF133:
 5851 0081 63617073 		.ascii	"capsense_lowBaselineResetCnt\000"
 5851      656E7365 
 5851      5F6C6F77 
 5851      42617365 
 5851      6C696E65 
 5852              	.LASF115:
 5853 009e 706F7349 		.ascii	"posIndex\000"
 5853      6E646578 
 5853      00
 5854              	.LASF54:
 5855 00a7 69735365 		.ascii	"isSensorEnabled\000"
 5855      6E736F72 
 5855      456E6162 
 5855      6C656400 
 5856              	.LASF80:
 5857 00b7 6E756D4F 		.ascii	"numOfSensors\000"
 5857      6653656E 
 5857      736F7273 
 5857      00
 5858              	.LASF8:
 5859 00c4 756E7369 		.ascii	"unsigned int\000"
 5859      676E6564 
 5859      20696E74 
 5859      00
 5860              	.LASF44:
 5861 00d1 746F7461 		.ascii	"totalSensorsNum\000"
ARM GAS  C:\Users\Mykola\AppData\Local\Temp\ccSL9DbN.s 			page 156


 5861      6C53656E 
 5861      736F7273 
 5861      4E756D00 
 5862              	.LASF95:
 5863 00e1 706F734E 		.ascii	"posNext\000"
 5863      65787400 
 5864              	.LASF103:
 5865 00e9 63617073 		.ascii	"capsense_UpdateBaselineNoThreshold\000"
 5865      656E7365 
 5865      5F557064 
 5865      61746542 
 5865      6173656C 
 5866              	.LASF146:
 5867 010c 63617073 		.ascii	"capsense_SetBitValue\000"
 5867      656E7365 
 5867      5F536574 
 5867      42697456 
 5867      616C7565 
 5868              	.LASF12:
 5869 0121 696E7431 		.ascii	"int16\000"
 5869      3600
 5870              	.LASF108:
 5871 0127 63617073 		.ascii	"capsense_UpdateSensorBaseline\000"
 5871      656E7365 
 5871      5F557064 
 5871      61746553 
 5871      656E736F 
 5872              	.LASF98:
 5873 0145 6E756D65 		.ascii	"numerator\000"
 5873      7261746F 
 5873      7200
 5874              	.LASF29:
 5875 014f 73616D70 		.ascii	"sampleMaxTbl\000"
 5875      6C654D61 
 5875      7854626C 
 5875      00
 5876              	.LASF84:
 5877 015c 63617073 		.ascii	"capsense_DisableWidget\000"
 5877      656E7365 
 5877      5F446973 
 5877      61626C65 
 5877      57696467 
 5878              	.LASF91:
 5879 0173 63617073 		.ascii	"capsense_CalcCentroid\000"
 5879      656E7365 
 5879      5F43616C 
 5879      6343656E 
 5879      74726F69 
 5880              	.LASF27:
 5881 0189 7369676E 		.ascii	"signRegisterTbl\000"
 5881      52656769 
 5881      73746572 
 5881      54626C00 
 5882              	.LASF94:
 5883 0199 706F7350 		.ascii	"posPrev\000"
 5883      72657600 
 5884              	.LASF109:
ARM GAS  C:\Users\Mykola\AppData\Local\Temp\ccSL9DbN.s 			page 157


 5885 01a1 63617073 		.ascii	"capsense_UpdateEnabledBaselines\000"
 5885      656E7365 
 5885      5F557064 
 5885      61746545 
 5885      6E61626C 
 5886              	.LASF154:
 5887 01c1 63617073 		.ascii	"capsense_UpdateThresholds\000"
 5887      656E7365 
 5887      5F557064 
 5887      61746554 
 5887      68726573 
 5888              	.LASF82:
 5889 01db 63617073 		.ascii	"capsense_CheckIsAnyWidgetActive\000"
 5889      656E7365 
 5889      5F436865 
 5889      636B4973 
 5889      416E7957 
 5890              	.LASF70:
 5891 01fb 63617073 		.ascii	"capsense_SetDebounce\000"
 5891      656E7365 
 5891      5F536574 
 5891      4465626F 
 5891      756E6365 
 5892              	.LASF34:
 5893 0210 72617744 		.ascii	"rawDataIndex\000"
 5893      61746149 
 5893      6E646578 
 5893      00
 5894              	.LASF43:
 5895 021d 746F7461 		.ascii	"totalWidgetsNum\000"
 5895      6C576964 
 5895      67657473 
 5895      4E756D00 
 5896              	.LASF137:
 5897 022d 63617073 		.ascii	"capsense_negativeNoiseThreshold\000"
 5897      656E7365 
 5897      5F6E6567 
 5897      61746976 
 5897      654E6F69 
 5898              	.LASF63:
 5899 024d 63617073 		.ascii	"capsense_GetNoiseThreshold\000"
 5899      656E7365 
 5899      5F476574 
 5899      4E6F6973 
 5899      65546872 
 5900              	.LASF102:
 5901 0268 63617073 		.ascii	"capsense_IIR4Filter\000"
 5901      656E7365 
 5901      5F494952 
 5901      3446696C 
 5901      74657200 
 5902              	.LASF77:
 5903 027c 63617073 		.ascii	"capsense_debounceCounter\000"
 5903      656E7365 
 5903      5F646562 
 5903      6F756E63 
 5903      65436F75 
ARM GAS  C:\Users\Mykola\AppData\Local\Temp\ccSL9DbN.s 			page 158


 5904              	.LASF147:
 5905 0295 4D656173 		.ascii	"MeasureNoiseEnvelope_P4_v2_30\000"
 5905      7572654E 
 5905      6F697365 
 5905      456E7665 
 5905      6C6F7065 
 5906              	.LASF150:
 5907 02b3 463A5C55 		.ascii	"F:\\Univer\\Dyplom\\BLEDyplomPSoCProg\\capsenseled."
 5907      6E697665 
 5907      725C4479 
 5907      706C6F6D 
 5907      5C424C45 
 5908 02e2 63796473 		.ascii	"cydsn\000"
 5908      6E00
 5909              	.LASF153:
 5910 02e8 63617073 		.ascii	"capsense_GetBitValue\000"
 5910      656E7365 
 5910      5F476574 
 5910      42697456 
 5910      616C7565 
 5911              	.LASF14:
 5912 02fd 666C6F61 		.ascii	"float\000"
 5912      7400
 5913              	.LASF13:
 5914 0303 696E7433 		.ascii	"int32\000"
 5914      3200
 5915              	.LASF87:
 5916 0309 636F756E 		.ascii	"count\000"
 5916      7400
 5917              	.LASF24:
 5918 030f 7265736F 		.ascii	"resolutionsTbl\000"
 5918      6C757469 
 5918      6F6E7354 
 5918      626C00
 5919              	.LASF117:
 5920 031e 706F7346 		.ascii	"posFiltersMask\000"
 5920      696C7465 
 5920      72734D61 
 5920      736B00
 5921              	.LASF67:
 5922 032d 63617073 		.ascii	"capsense_SetNoiseThreshold\000"
 5922      656E7365 
 5922      5F536574 
 5922      4E6F6973 
 5922      65546872 
 5923              	.LASF26:
 5924 0348 72756E6E 		.ascii	"runningDifferenceTbl\000"
 5924      696E6744 
 5924      69666665 
 5924      72656E63 
 5924      6554626C 
 5925              	.LASF7:
 5926 035d 6C6F6E67 		.ascii	"long long unsigned int\000"
 5926      206C6F6E 
 5926      6720756E 
 5926      7369676E 
 5926      65642069 
ARM GAS  C:\Users\Mykola\AppData\Local\Temp\ccSL9DbN.s 			page 159


 5927              	.LASF149:
 5928 0374 47656E65 		.ascii	"Generated_Source\\PSoC4\\capsense_CSHL.c\000"
 5928      72617465 
 5928      645F536F 
 5928      75726365 
 5928      5C50536F 
 5929              	.LASF62:
 5930 039b 77696467 		.ascii	"widget\000"
 5930      657400
 5931              	.LASF120:
 5932 03a2 63617073 		.ascii	"capsense_GetDebounce\000"
 5932      656E7365 
 5932      5F476574 
 5932      4465626F 
 5932      756E6365 
 5933              	.LASF123:
 5934 03b7 63617073 		.ascii	"capsense_centroidMult\000"
 5934      656E7365 
 5934      5F63656E 
 5934      74726F69 
 5934      644D756C 
 5935              	.LASF132:
 5936 03cd 63617073 		.ascii	"capsense_sensorOnMask\000"
 5936      656E7365 
 5936      5F73656E 
 5936      736F724F 
 5936      6E4D6173 
 5937              	.LASF60:
 5938 03e3 76616C75 		.ascii	"value\000"
 5938      6500
 5939              	.LASF121:
 5940 03e9 63617073 		.ascii	"capsense_EnableRawDataFilters\000"
 5940      656E7365 
 5940      5F456E61 
 5940      626C6552 
 5940      61774461 
 5941              	.LASF105:
 5942 0407 7369676E 		.ascii	"sign\000"
 5942      00
 5943              	.LASF86:
 5944 040c 6F666673 		.ascii	"offset\000"
 5944      657400
 5945              	.LASF134:
 5946 0413 63617073 		.ascii	"capsense_lowBaselineReset\000"
 5946      656E7365 
 5946      5F6C6F77 
 5946      42617365 
 5946      6C696E65 
 5947              	.LASF64:
 5948 042d 63617073 		.ascii	"capsense_GetFingerHysteresis\000"
 5948      656E7365 
 5948      5F476574 
 5948      46696E67 
 5948      65724879 
 5949              	.LASF25:
 5950 044a 6E6F6973 		.ascii	"noiseEnvelopeTbl\000"
 5950      65456E76 
ARM GAS  C:\Users\Mykola\AppData\Local\Temp\ccSL9DbN.s 			page 160


 5950      656C6F70 
 5950      6554626C 
 5950      00
 5951              	.LASF104:
 5952 045b 63616C63 		.ascii	"calc\000"
 5952      00
 5953              	.LASF38:
 5954 0460 70747252 		.ascii	"ptrReadSensorRaw\000"
 5954      65616453 
 5954      656E736F 
 5954      72526177 
 5954      00
 5955              	.LASF76:
 5956 0471 68797374 		.ascii	"hysteresis\000"
 5956      65726573 
 5956      697300
 5957              	.LASF143:
 5958 047c 63617073 		.ascii	"capsense_config\000"
 5958      656E7365 
 5958      5F636F6E 
 5958      66696700 
 5959              	.LASF107:
 5960 048c 66696C74 		.ascii	"filteredRawData\000"
 5960      65726564 
 5960      52617744 
 5960      61746100 
 5961              	.LASF111:
 5962 049c 73656E73 		.ascii	"sensorsPerWidget\000"
 5962      6F727350 
 5962      65725769 
 5962      64676574 
 5962      00
 5963              	.LASF42:
 5964 04ad 746F7461 		.ascii	"totalScanslotsNum\000"
 5964      6C536361 
 5964      6E736C6F 
 5964      74734E75 
 5964      6D00
 5965              	.LASF138:
 5966 04bf 63617073 		.ascii	"capsense_hysteresis\000"
 5966      656E7365 
 5966      5F687973 
 5966      74657265 
 5966      73697300 
 5967              	.LASF129:
 5968 04d3 63617073 		.ascii	"capsense_sensorBaseline\000"
 5968      656E7365 
 5968      5F73656E 
 5968      736F7242 
 5968      6173656C 
 5969              	.LASF51:
 5970 04eb 73656E73 		.ascii	"sensor\000"
 5970      6F7200
 5971              	.LASF45:
 5972 04f2 73656E73 		.ascii	"sensetivitySeed\000"
 5972      65746976 
 5972      69747953 
ARM GAS  C:\Users\Mykola\AppData\Local\Temp\ccSL9DbN.s 			page 161


 5972      65656400 
 5973              	.LASF114:
 5974 0502 63617073 		.ascii	"capsense_GetCentroidPos\000"
 5974      656E7365 
 5974      5F476574 
 5974      43656E74 
 5974      726F6964 
 5975              	.LASF16:
 5976 051a 63686172 		.ascii	"char\000"
 5976      00
 5977              	.LASF126:
 5978 051f 63617073 		.ascii	"capsense_sensorRaw\000"
 5978      656E7365 
 5978      5F73656E 
 5978      736F7252 
 5978      617700
 5979              	.LASF145:
 5980 0532 63617073 		.ascii	"capsense_ScanSensor\000"
 5980      656E7365 
 5980      5F536361 
 5980      6E53656E 
 5980      736F7200 
 5981              	.LASF53:
 5982 0546 63617073 		.ascii	"capsense_InitializeEnabledBaselines\000"
 5982      656E7365 
 5982      5F496E69 
 5982      7469616C 
 5982      697A6545 
 5983              	.LASF33:
 5984 056a 70726573 		.ascii	"prescalerTable\000"
 5984      63616C65 
 5984      72546162 
 5984      6C6500
 5985              	.LASF10:
 5986 0579 75696E74 		.ascii	"uint16\000"
 5986      313600
 5987              	.LASF56:
 5988 0580 64617461 		.ascii	"data\000"
 5988      00
 5989              	.LASF18:
 5990 0585 69646163 		.ascii	"idac1LevelsTbl\000"
 5990      314C6576 
 5990      656C7354 
 5990      626C00
 5991              	.LASF101:
 5992 0594 63617073 		.ascii	"capsense_MedianFilter\000"
 5992      656E7365 
 5992      5F4D6564 
 5992      69616E46 
 5992      696C7465 
 5993              	.LASF55:
 5994 05aa 63617073 		.ascii	"capsense_SetBaselineData\000"
 5994      656E7365 
 5994      5F536574 
 5994      42617365 
 5994      6C696E65 
 5995              	.LASF92:
ARM GAS  C:\Users\Mykola\AppData\Local\Temp\ccSL9DbN.s 			page 162


 5996 05c3 7265736F 		.ascii	"resolution\000"
 5996      6C757469 
 5996      6F6E00
 5997              	.LASF79:
 5998 05ce 72617749 		.ascii	"rawIndex\000"
 5998      6E646578 
 5998      00
 5999              	.LASF136:
 6000 05d7 63617073 		.ascii	"capsense_noiseThreshold\000"
 6000      656E7365 
 6000      5F6E6F69 
 6000      73655468 
 6000      72657368 
 6001              	.LASF144:
 6002 05ef 63617073 		.ascii	"capsense_enableRawFilters\000"
 6002      656E7365 
 6002      5F656E61 
 6002      626C6552 
 6002      61774669 
 6003              	.LASF65:
 6004 0609 63617073 		.ascii	"capsense_GetNegativeNoiseThreshold\000"
 6004      656E7365 
 6004      5F476574 
 6004      4E656761 
 6004      74697665 
 6005              	.LASF100:
 6006 062c 63617073 		.ascii	"capsense_GetRadialCentroidPos\000"
 6006      656E7365 
 6006      5F476574 
 6006      52616469 
 6006      616C4365 
 6007              	.LASF6:
 6008 064a 6C6F6E67 		.ascii	"long long int\000"
 6008      206C6F6E 
 6008      6720696E 
 6008      7400
 6009              	.LASF73:
 6010 0658 6465626F 		.ascii	"debounce\000"
 6010      756E6365 
 6010      00
 6011              	.LASF37:
 6012 0661 70747250 		.ascii	"ptrPreScan\000"
 6012      72655363 
 6012      616E00
 6013              	.LASF52:
 6014 066c 63617073 		.ascii	"capsense_InitializeAllBaselines\000"
 6014      656E7365 
 6014      5F496E69 
 6014      7469616C 
 6014      697A6541 
 6015              	.LASF151:
 6016 068c 63617073 		.ascii	"capsense_IsBusy\000"
 6016      656E7365 
 6016      5F497342 
 6016      75737900 
 6017              	.LASF36:
 6018 069c 70747247 		.ascii	"ptrGetRaw\000"
ARM GAS  C:\Users\Mykola\AppData\Local\Temp\ccSL9DbN.s 			page 163


 6018      65745261 
 6018      7700
 6019              	.LASF28:
 6020 06a6 73616D70 		.ascii	"sampleMinTbl\000"
 6020      6C654D69 
 6020      6E54626C 
 6020      00
 6021              	.LASF72:
 6022 06b3 63617073 		.ascii	"capsense_CheckIsSensorActive\000"
 6022      656E7365 
 6022      5F436865 
 6022      636B4973 
 6022      53656E73 
 6023              	.LASF122:
 6024 06d0 63617073 		.ascii	"capsense_DisableRawDataFilters\000"
 6024      656E7365 
 6024      5F446973 
 6024      61626C65 
 6024      52617744 
 6025              	.LASF11:
 6026 06ef 75696E74 		.ascii	"uint32\000"
 6026      333200
 6027              	.LASF116:
 6028 06f6 66697273 		.ascii	"firstTimeIndex\000"
 6028      7454696D 
 6028      65496E64 
 6028      657800
 6029              	.LASF50:
 6030 0705 63617073 		.ascii	"capsense_InitializeSensorBaseline\000"
 6030      656E7365 
 6030      5F496E69 
 6030      7469616C 
 6030      697A6553 
 6031              	.LASF90:
 6032 0727 73746172 		.ascii	"startOfSlider\000"
 6032      744F6653 
 6032      6C696465 
 6032      7200
 6033              	.LASF135:
 6034 0735 63617073 		.ascii	"capsense_fingerThreshold\000"
 6034      656E7365 
 6034      5F66696E 
 6034      67657254 
 6034      68726573 
 6035              	.LASF119:
 6036 074e 63617073 		.ascii	"capsense_GetLowBaselineReset\000"
 6036      656E7365 
 6036      5F476574 
 6036      4C6F7742 
 6036      6173656C 
 6037              	.LASF68:
 6038 076b 63617073 		.ascii	"capsense_SetFingerHysteresis\000"
 6038      656E7365 
 6038      5F536574 
 6038      46696E67 
 6038      65724879 
 6039              	.LASF69:
ARM GAS  C:\Users\Mykola\AppData\Local\Temp\ccSL9DbN.s 			page 164


 6040 0788 63617073 		.ascii	"capsense_SetNegativeNoiseThreshold\000"
 6040      656E7365 
 6040      5F536574 
 6040      4E656761 
 6040      74697665 
 6041              	.LASF113:
 6042 07ab 6C617374 		.ascii	"lastSensor\000"
 6042      53656E73 
 6042      6F7200
 6043              	.LASF41:
 6044 07b6 63617073 		.ascii	"capsense_CONFIG_TYPE_POINTERS_P4_v2_30\000"
 6044      656E7365 
 6044      5F434F4E 
 6044      4649475F 
 6044      54595045 
 6045              	.LASF48:
 6046 07dd 63617073 		.ascii	"capsense_CONFIG_TYPE_P4_v2_30\000"
 6046      656E7365 
 6046      5F434F4E 
 6046      4649475F 
 6046      54595045 
 6047              	.LASF23:
 6048 07fb 77696467 		.ascii	"widgetNubmersTbl\000"
 6048      65744E75 
 6048      626D6572 
 6048      7354626C 
 6048      00
 6049              	.LASF141:
 6050 080c 63617073 		.ascii	"capsense_numberOfSensors\000"
 6050      656E7365 
 6050      5F6E756D 
 6050      6265724F 
 6050      6653656E 
 6051              	.LASF19:
 6052 0825 69646163 		.ascii	"idac2LevelsTbl\000"
 6052      324C6576 
 6052      656C7354 
 6052      626C00
 6053              	.LASF2:
 6054 0834 73686F72 		.ascii	"short int\000"
 6054      7420696E 
 6054      7400
 6055              	.LASF4:
 6056 083e 6C6F6E67 		.ascii	"long int\000"
 6056      20696E74 
 6056      00
 6057              	.LASF142:
 6058 0847 63617073 		.ascii	"capsense_rawFilterData1\000"
 6058      656E7365 
 6058      5F726177 
 6058      46696C74 
 6058      65724461 
 6059              	.LASF112:
 6060 085f 66697273 		.ascii	"firstSensor\000"
 6060      7453656E 
 6060      736F7200 
 6061              	.LASF131:
ARM GAS  C:\Users\Mykola\AppData\Local\Temp\ccSL9DbN.s 			page 165


 6062 086b 63617073 		.ascii	"capsense_sensorSignal\000"
 6062      656E7365 
 6062      5F73656E 
 6062      736F7253 
 6062      69676E61 
 6063              	.LASF140:
 6064 0881 63617073 		.ascii	"capsense_rawDataIndex\000"
 6064      656E7365 
 6064      5F726177 
 6064      44617461 
 6064      496E6465 
 6065              	.LASF66:
 6066 0897 63617073 		.ascii	"capsense_SetFingerThreshold\000"
 6066      656E7365 
 6066      5F536574 
 6066      46696E67 
 6066      65725468 
 6067              	.LASF89:
 6068 08b3 74656D70 		.ascii	"temp\000"
 6068      00
 6069              	.LASF148:
 6070 08b8 474E5520 		.ascii	"GNU C 4.9.3 20150303 (release) [ARM/embedded-4_9-br"
 6070      4320342E 
 6070      392E3320 
 6070      32303135 
 6070      30333033 
 6071 08eb 616E6368 		.ascii	"anch revision 221220] -mcpu=cortex-m0 -mthumb -g -O"
 6071      20726576 
 6071      6973696F 
 6071      6E203232 
 6071      31323230 
 6072 091e 67202D66 		.ascii	"g -ffunction-sections -ffat-lto-objects\000"
 6072      66756E63 
 6072      74696F6E 
 6072      2D736563 
 6072      74696F6E 
 6073              	.LASF139:
 6074 0946 63617073 		.ascii	"capsense_debounce\000"
 6074      656E7365 
 6074      5F646562 
 6074      6F756E63 
 6074      6500
 6075              	.LASF99:
 6076 0958 64656E6F 		.ascii	"denominator\000"
 6076      6D696E61 
 6076      746F7200 
 6077              	.LASF31:
 6078 0964 6B56616C 		.ascii	"kValueTbl\000"
 6078      75655462 
 6078      6C00
 6079              	.LASF125:
 6080 096e 63617073 		.ascii	"capsense_posFiltersData\000"
 6080      656E7365 
 6080      5F706F73 
 6080      46696C74 
 6080      65727344 
 6081              	.LASF71:
ARM GAS  C:\Users\Mykola\AppData\Local\Temp\ccSL9DbN.s 			page 166


 6082 0986 63617073 		.ascii	"capsense_SetLowBaselineReset\000"
 6082      656E7365 
 6082      5F536574 
 6082      4C6F7742 
 6082      6173656C 
 6083              	.LASF88:
 6084 09a3 6D617869 		.ascii	"maximum\000"
 6084      6D756D00 
 6085              	.LASF110:
 6086 09ab 63617073 		.ascii	"capsense_UpdateWidgetBaseline\000"
 6086      656E7365 
 6086      5F557064 
 6086      61746557 
 6086      69646765 
 6087              	.LASF17:
 6088 09c9 73697A65 		.ascii	"sizetype\000"
 6088      74797065 
 6088      00
 6089              	.LASF118:
 6090 09d2 63617073 		.ascii	"capsense_GetWidgetNumber\000"
 6090      656E7365 
 6090      5F476574 
 6090      57696467 
 6090      65744E75 
 6091              	.LASF5:
 6092 09eb 6C6F6E67 		.ascii	"long unsigned int\000"
 6092      20756E73 
 6092      69676E65 
 6092      6420696E 
 6092      7400
 6093              	.LASF47:
 6094 09fd 706F696E 		.ascii	"pointers\000"
 6094      74657273 
 6094      00
 6095              	.LASF93:
 6096 0a06 6E6F6973 		.ascii	"noiseThreshold\000"
 6096      65546872 
 6096      6573686F 
 6096      6C6400
 6097              	.LASF128:
 6098 0a15 63617073 		.ascii	"capsense_widgetNumber\000"
 6098      656E7365 
 6098      5F776964 
 6098      6765744E 
 6098      756D6265 
 6099              	.LASF30:
 6100 0a2b 70726576 		.ascii	"previousSampleTbl\000"
 6100      696F7573 
 6100      53616D70 
 6100      6C655462 
 6100      6C00
 6101              	.LASF75:
 6102 0a3d 66696E67 		.ascii	"fingerThreshold\000"
 6102      65725468 
 6102      72657368 
 6102      6F6C6400 
 6103              	.LASF21:
ARM GAS  C:\Users\Mykola\AppData\Local\Temp\ccSL9DbN.s 			page 167


 6104 0a4d 63686172 		.ascii	"chargeDivTbl\000"
 6104      67654469 
 6104      7654626C 
 6104      00
 6105              	.LASF83:
 6106 0a5a 63617073 		.ascii	"capsense_EnableWidget\000"
 6106      656E7365 
 6106      5F456E61 
 6106      626C6557 
 6106      69646765 
 6107              	.LASF1:
 6108 0a70 756E7369 		.ascii	"unsigned char\000"
 6108      676E6564 
 6108      20636861 
 6108      7200
 6109              	.LASF74:
 6110 0a7e 6465626F 		.ascii	"debounceIndex\000"
 6110      756E6365 
 6110      496E6465 
 6110      7800
 6111              	.LASF20:
 6112 0a8c 73656E73 		.ascii	"sensetivityTbl\000"
 6112      65746976 
 6112      69747954 
 6112      626C00
 6113              	.LASF59:
 6114 0a9b 63617073 		.ascii	"capsense_SetDiffCountData\000"
 6114      656E7365 
 6114      5F536574 
 6114      44696666 
 6114      436F756E 
 6115              	.LASF81:
 6116 0ab5 73746174 		.ascii	"state\000"
 6116      6500
 6117              	.LASF58:
 6118 0abb 63617073 		.ascii	"capsense_GetDiffCountData\000"
 6118      656E7365 
 6118      5F476574 
 6118      44696666 
 6118      436F756E 
 6119              	.LASF124:
 6120 0ad5 63617073 		.ascii	"capsense_posFiltersMask\000"
 6120      656E7365 
 6120      5F706F73 
 6120      46696C74 
 6120      6572734D 
 6121              	.LASF152:
 6122 0aed 63617073 		.ascii	"capsense_ScanEnabledWidgets\000"
 6122      656E7365 
 6122      5F536361 
 6122      6E456E61 
 6122      626C6564 
 6123              	.LASF22:
 6124 0b09 6D6F6444 		.ascii	"modDivTbl\000"
 6124      69765462 
 6124      6C00
 6125              	.LASF0:
ARM GAS  C:\Users\Mykola\AppData\Local\Temp\ccSL9DbN.s 			page 168


 6126 0b13 7369676E 		.ascii	"signed char\000"
 6126      65642063 
 6126      68617200 
 6127              	.LASF3:
 6128 0b1f 73686F72 		.ascii	"short unsigned int\000"
 6128      7420756E 
 6128      7369676E 
 6128      65642069 
 6128      6E7400
 6129              	.LASF40:
 6130 0b32 70747253 		.ascii	"ptrSetBitValue\000"
 6130      65744269 
 6130      7456616C 
 6130      756500
 6131              	.LASF106:
 6132 0b41 74656D70 		.ascii	"tempRaw\000"
 6132      52617700 
 6133              	.LASF127:
 6134 0b49 63617073 		.ascii	"capsense_sensorEnableMask\000"
 6134      656E7365 
 6134      5F73656E 
 6134      736F7245 
 6134      6E61626C 
 6135              	.LASF9:
 6136 0b63 75696E74 		.ascii	"uint8\000"
 6136      3800
 6137              	.LASF15:
 6138 0b69 646F7562 		.ascii	"double\000"
 6138      6C6500
 6139              	.LASF130:
 6140 0b70 63617073 		.ascii	"capsense_sensorBaselineLow\000"
 6140      656E7365 
 6140      5F73656E 
 6140      736F7242 
 6140      6173656C 
 6141              	.LASF85:
 6142 0b8b 63617073 		.ascii	"capsense_FindMaximum\000"
 6142      656E7365 
 6142      5F46696E 
 6142      644D6178 
 6142      696D756D 
 6143              	.LASF78:
 6144 0ba0 63617073 		.ascii	"capsense_CheckIsWidgetActive\000"
 6144      656E7365 
 6144      5F436865 
 6144      636B4973 
 6144      57696467 
 6145              	.LASF97:
 6146 0bbd 706F7369 		.ascii	"position\000"
 6146      74696F6E 
 6146      00
 6147              	.LASF49:
 6148 0bc6 63617073 		.ascii	"capsense_BaseInit\000"
 6148      656E7365 
 6148      5F426173 
 6148      65496E69 
 6148      7400
ARM GAS  C:\Users\Mykola\AppData\Local\Temp\ccSL9DbN.s 			page 169


 6149              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150303 (release) [ARM/embedded-4_9-br
